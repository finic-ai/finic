{"version":3,"sources":["webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditPopup.scss?c6ed","webpack:///./src/ui/src/components/CreatableList/CreatableList.scss?37a9","webpack:///./src/ui/src/components/CreatableDropdown/CreatableDropdown.scss?fb39","webpack:///./src/ui/src/components/CreatableDropdown/CreatableDropdown.scss","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditPopup.scss","webpack:///./src/ui/src/components/CreatableList/CreatableList.scss","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditSignaturePopup/SignatureOptionsDropdown/SignatureOptionsDropdown.scss?45fa","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditSignaturePopup/SignatureOptionsDropdown/SignatureOptionsDropdown.scss","webpack:///./src/ui/src/components/CreatableDropdown/CreatableDropdown.js","webpack:///./src/ui/src/components/CreatableDropdown/index.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldPopupDimensionsInput/index.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldPopupDimensionsInput/FormFieldPopupDimensionsInput.js","webpack:///./src/ui/src/components/CreatableList/CreatableListItem.js","webpack:///./src/ui/src/components/CreatableList/CreatableListContainer.js","webpack:///./src/ui/src/components/CreatableList/index.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditPopupIndicator/index.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditPopupIndicator/FormFieldEditPopupIndicator.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditPopup.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditSignaturePopup/SignatureOptionsDropdown/SignatureOptionsDropdown.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditSignaturePopup/SignatureOptionsDropdown/index.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditSignaturePopup/FormFieldEditSignaturePopup.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditSignaturePopup/index.js","webpack:///./src/ui/src/components/FormFieldEditPopup/FormFieldEditPopupContainer.js","webpack:///./src/ui/src/components/FormFieldEditPopup/index.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","webComponents","document","getElementsByTagName","length","clonedStyleTags","webComponent","shadowRoot","appendChild","onload","forEach","styleNode","innerHTML","cloneNode","push","head","exports","locals","CreatableDropdown","onChange","onInputChange","onCreateOption","textPlaceholder","value","isClearable","isValid","messageText","t","useTranslation","customStyles","control","provided","state","backgroundColor","borderColor","selectProps","boxShadow","singleValue","color","menu","option","input","ReactSelectWebComponentProvider","placeholder","formatCreateLabel","styles","className","undefined","FormFieldPopupDimensionsInput","width","height","onWidthChange","onHeightChange","id","type","min","e","target","CreatableListItem","index","onDeleteItem","moveListItem","addItem","ItemTypes","ref","useRef","drop","useDrop","accept","hover","item","monitor","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","useDrag","collect","isDragging","drag","onChangeHandler","useCallback","event","addNewItemOnEnterKey","key","opacity","style","Icon","glyph","displayValue","onKeyPress","autoFocus","Button","title","img","onClick","CreatableList","onOptionsUpdated","draggableItems","map","useState","items","setItems","nextId","setNextId","useEffect","sanitizedOptions","onAddItem","handleDeleteItem","updatedItems","filter","result","dragItem","itemsWithoutDraggedElement","_item","itemsWithDraggedElementAtNewPosition","slice","splice","label","FormFieldEditPopupIndicator","indicator","indicatorPlaceholder","Choice","checked","isChecked","showIndicator","toggleIndicator","Input","fillWidth","disabled","FormFieldEditPopup","fields","flags","closeFormFieldEditPopup","validationMessage","radioButtonGroups","onOptionsChange","annotation","selectedRadioGroup","getPageHeight","getPageWidth","redrawAnnotation","deleteAnnotation","classNames","Popup","Width","toFixed","setWidth","Height","setHeight","initialWidth","initialHeight","radioButtonGroup","setRadioButtonGroup","renderInput","field","required","message","focus","renderTextInput","displayRadioGroups","group","inputValue","onSelectInputChange","renderSelectInput","getFormFieldPlaceholderType","flag","validatedWidth","maxWidth","X","validateWidth","validatedHeight","maxHeight","Y","validateHeight","HorizontalDivider","find","includes","trim","dataElement","CustomArrowIndicator","props","menuIsOpen","IndicatorsContainer","SignatureOptionsDropdown","isDarkMode","initialOption","valueContainer","base","padding","minHeight","container","indicatorsContainer","paddingRight","signatureOptions","SignatureModes","FULL_SIGNATURE","INITIALS","init","setValue","DataElementWrapper","isSearchable","components","FormFieldEditSignaturePopup","onSignatureOptionChange","getSignatureOptionHandler","setIndicatorPlaceholder","FormFieldEditPopupContainer","formFieldCreationManager","core","getFormFieldCreationManager","fieldLabels","getFieldLabels","fieldName","setFieldName","fieldValue","setFieldValue","isReadOnly","setReadOnly","isMultiLine","setMultiLine","isRequired","setIsRequired","isMultiSelect","setIsMultiSelect","setIsValid","setRadioButtonGroups","left","position","setPosition","setValidationMessage","setShowIndicator","indicatorText","setIndicatorText","popupRef","isOpen","useSelector","selectors","isElementOpen","DataElements","FORM_FIELD_EDIT_POPUP","shallowEqual","dispatch","useDispatch","closeAndReset","actions","enableElement","ANNOTATION_POPUP","PRIORITY_THREE","closeElement","useOnClickOutside","deleteFormFieldPlaceholder","deleteAnnotations","onFormFieldCreationModeStarted","getRadioButtonGroups","addEventListener","removeEventListener","radioGroups","getAnnotationsList","isFormFieldPlaceholder","radioButton","getFieldName","dedupedRadioGroups","Set","useLayoutEffect","getAnnotationPopupPositionBasedOn","getFieldValue","getFieldFlag","READ_ONLY","MULTI_LINE","REQUIRED","MULTI_SELECT","isFieldNameValid","getShowIndicator","getIndicatorText","onFieldNameChange","name","validatedResponse","mapValidationResponseToTranslation","validationResponse","translationKey","errorType","onFieldValueChange","onReadOnlyChange","setFieldFlag","onMultiLineChange","onRequiredChange","onMultiSelectChange","onFieldOptionsChange","setFieldOptions","onShowFieldIndicatorChange","onFieldIndicatorTextChange","onCloseRadioButtonPopup","indexOf","getAnnotationManager","drawAnnotationsFromList","getCurrentPage","signatureOption","setSignatureOption","getSignatureOption","formFieldPlaceHolder","NAME","VALUE","RADIO_GROUP","textFields","defaultFields","radioButtonFields","listBoxFields","comboBoxFields","isMobile","isMobileSize","textFieldFlags","signatureFlags","checkBoxFlags","radioButtonFlags","listBoxFlags","comboBoxFlags","renderPopUp","fieldOptions","intent","getFieldOptions","renderComboBoxFormFieldEditPopup","renderFormFieldEditPopup","open","closed","data-element","cancel","React","memo"],"mappings":"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","file":"chunks/20.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./FormFieldEditPopup.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\n                if (webComponents.length > 0) {\n                  const clonedStyleTags = [];\n                  for (let i = 0; i < webComponents.length; i++) {\n                    const webComponent = webComponents[i];\n                    if (i === 0) {\n                      webComponent.shadowRoot.appendChild(styleTag);\n                      styleTag.onload = function () {\n                        if (clonedStyleTags.length > 0) {\n                          clonedStyleTags.forEach((styleNode) => {\n                            // eslint-disable-next-line no-unsanitized/property\n                            styleNode.innerHTML = styleTag.innerHTML;\n                          });\n                        }\n                      };\n                    } else {\n                      const styleNode = styleTag.cloneNode(true);\n                      webComponent.shadowRoot.appendChild(styleNode);\n                      clonedStyleTags.push(styleNode);\n                    }\n                  }\n                } else {\n                  document.head.appendChild(styleTag);\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./CreatableList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\n                if (webComponents.length > 0) {\n                  const clonedStyleTags = [];\n                  for (let i = 0; i < webComponents.length; i++) {\n                    const webComponent = webComponents[i];\n                    if (i === 0) {\n                      webComponent.shadowRoot.appendChild(styleTag);\n                      styleTag.onload = function () {\n                        if (clonedStyleTags.length > 0) {\n                          clonedStyleTags.forEach((styleNode) => {\n                            // eslint-disable-next-line no-unsanitized/property\n                            styleNode.innerHTML = styleTag.innerHTML;\n                          });\n                        }\n                      };\n                    } else {\n                      const styleNode = styleTag.cloneNode(true);\n                      webComponent.shadowRoot.appendChild(styleNode);\n                      clonedStyleTags.push(styleNode);\n                    }\n                  }\n                } else {\n                  document.head.appendChild(styleTag);\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./CreatableDropdown.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\n                if (webComponents.length > 0) {\n                  const clonedStyleTags = [];\n                  for (let i = 0; i < webComponents.length; i++) {\n                    const webComponent = webComponents[i];\n                    if (i === 0) {\n                      webComponent.shadowRoot.appendChild(styleTag);\n                      styleTag.onload = function () {\n                        if (clonedStyleTags.length > 0) {\n                          clonedStyleTags.forEach((styleNode) => {\n                            // eslint-disable-next-line no-unsanitized/property\n                            styleNode.innerHTML = styleTag.innerHTML;\n                          });\n                        }\n                      };\n                    } else {\n                      const styleNode = styleTag.cloneNode(true);\n                      webComponent.shadowRoot.appendChild(styleNode);\n                      clonedStyleTags.push(styleNode);\n                    }\n                  }\n                } else {\n                  document.head.appendChild(styleTag);\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".messageText{width:100%;font-size:11px;margin-top:4px}\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".open.FormFieldEditPopupContainer{visibility:visible}.closed.FormFieldEditPopupContainer{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.FormFieldEditPopupContainer{position:absolute;z-index:70;display:flex;justify-content:center;align-items:center}.FormFieldEditPopupContainer:empty{padding:0}.FormFieldEditPopupContainer .buttons{display:flex}.FormFieldEditPopupContainer .Button{margin:4px;width:32px;height:32px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .FormFieldEditPopupContainer .Button{width:42px;height:42px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .FormFieldEditPopupContainer .Button{width:42px;height:42px}}.FormFieldEditPopupContainer .Button:hover{background:var(--popup-button-hover)}.FormFieldEditPopupContainer .Button .Icon{width:18px;height:18px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .FormFieldEditPopupContainer .Button .Icon{width:24px;height:24px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .FormFieldEditPopupContainer .Button .Icon{width:24px;height:24px}}.is-vertical.FormFieldEditPopupContainer .Button.main-menu-button{width:100%;border-radius:0;justify-content:flex-start;padding-left:var(--padding-small);padding-right:var(--padding-small);margin:0 0 var(--padding-tiny) 0}.is-vertical.FormFieldEditPopupContainer .Button.main-menu-button:first-child{margin-top:var(--padding-tiny)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .is-vertical.FormFieldEditPopupContainer .Button.main-menu-button{width:100%;height:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .is-vertical.FormFieldEditPopupContainer .Button.main-menu-button{width:100%;height:32px}}.is-vertical.FormFieldEditPopupContainer .Button.main-menu-button .Icon{margin-right:10px}.is-vertical.FormFieldEditPopupContainer .Button.main-menu-button span{white-space:nowrap}@-webkit-keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@-webkit-keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}@keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}.FormFieldEditPopup{padding:8px 12px 6px}.FormFieldEditPopup .fields-container{margin-bottom:5px}.FormFieldEditPopup .radio-group-label{grid-area:group-message;font-size:10px;width:240px;padding-top:5px}.FormFieldEditPopup .field-input{padding:5px 0;display:grid;grid-template-columns:1fr 2fr;grid-template-areas:\\\"label dropdown\\\" \\\"group-message group-message\\\"}.FormFieldEditPopup .field-input label{padding-top:10px;padding-right:10px;grid-area:label}.FormFieldEditPopup .field-flags-container{display:flex;flex-direction:column}.FormFieldEditPopup .field-flags-title{padding-bottom:5px}.FormFieldEditPopup .form-buttons-container{display:flex;flex-direction:row;justify-content:flex-end;padding-top:5px}.FormFieldEditPopup .ok-form-field-button{display:flex;justify-content:center;align-items:center;background-color:var(--primary-button);border:1px solid var(--primary-button);color:var(--primary-button-text);padding:6px 18px;width:auto;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;border-radius:4px;height:28px;cursor:pointer}.FormFieldEditPopup .ok-form-field-button:hover{background:var(--primary-button-hover);border:1px solid var(--primary-button-hover)}.FormFieldEditPopup .cancel-form-field-button{display:flex;justify-content:center;align-items:center;color:var(--secondary-button-text);padding:6px 18px;width:auto;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;height:28px;cursor:pointer}.FormFieldEditPopup .cancel-form-field-button:hover{color:var(--secondary-button-hover);background:transparent}.field-options-container{width:180px}.field-options-container .creatable-list{max-height:200px;overflow:auto}.field-options-container input{width:120px;height:28px}.field-options-container .Button.add-item-button{width:90px;margin-left:0;justify-content:left}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .field-options-container .Button.add-item-button{width:110px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .field-options-container .Button.add-item-button{width:110px}}.form-dimension{padding-top:10px;display:flex;align-items:center}.form-dimension-input{padding-left:5px}.form-dimension-input input::-webkit-inner-spin-button,.form-dimension-input input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.form-dimension-input input[type=number]{-moz-appearance:textfield}.form-dimension-input input{width:55px;height:28px}.FormFieldEditPopupContainer{border-radius:4px;box-shadow:0 0 3px 0 var(--document-box-shadow);background:var(--component-background)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .FormFieldEditPopupContainer{width:95%;position:fixed;left:1.25%!important;top:105px!important}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .FormFieldEditPopupContainer{width:95%;position:fixed;left:1.25%!important;top:105px!important}}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".creatable-list{display:flex;flex-direction:column}.creatable-list-item{display:flex;flex-direction:row;align-items:center}.add-item-button{display:flex;align-items:center;width:78px;cursor:pointer}.icon-handle{cursor:-webkit-grab;cursor:grab}\", \"\"]);\n\n// exports\n","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/index.js!../../../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../../../node_modules/sass-loader/dist/cjs.js!./SignatureOptionsDropdown.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\n                if (webComponents.length > 0) {\n                  const clonedStyleTags = [];\n                  for (let i = 0; i < webComponents.length; i++) {\n                    const webComponent = webComponents[i];\n                    if (i === 0) {\n                      webComponent.shadowRoot.appendChild(styleTag);\n                      styleTag.onload = function () {\n                        if (clonedStyleTags.length > 0) {\n                          clonedStyleTags.forEach((styleNode) => {\n                            // eslint-disable-next-line no-unsanitized/property\n                            styleNode.innerHTML = styleTag.innerHTML;\n                          });\n                        }\n                      };\n                    } else {\n                      const styleNode = styleTag.cloneNode(true);\n                      webComponent.shadowRoot.appendChild(styleNode);\n                      clonedStyleTags.push(styleNode);\n                    }\n                  }\n                } else {\n                  document.head.appendChild(styleTag);\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".signature-options-container{padding:5px 0;display:grid;grid-template-columns:.5fr 1fr;grid-template-areas:\\\"label dropdown\\\";align-items:center}.signature-options-container label{grid-area:label}.arrow{width:12px;height:16px;margin-top:2px}\", \"\"]);\n\n// exports\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport CreatableSelect from 'react-select/creatable';\nimport ReactSelectWebComponentProvider from '../ReactSelectWebComponentProvider';\n\nimport './CreatableDropdown.scss';\n\nconst CreatableDropdown = ({\n  onChange,\n  onInputChange,\n  options,\n  onCreateOption,\n  textPlaceholder,\n  value,\n  isClearable,\n  isValid,\n  messageText,\n}) => {\n  const { t } = useTranslation();\n\n  const customStyles = {\n    control: (provided, state) => {\n      return {\n        ...provided,\n        backgroundColor: 'var(--component-background)',\n        borderColor: state.selectProps.isValid ? 'hsl(0, 0%, 80%)' : 'hsl(28, 80%, 52%)',\n        boxShadow: state.selectProps.isValid ? null : '0 0 0 2px rgba(230, 126, 34, 0.4)',\n        '&:hover': {\n          borderColor: state.selectProps.isValid ? 'hsl(0, 0%, 70%)' : 'hsl(28, 80%, 52%)',\n        }\n      };\n    },\n    singleValue: (provided) => ({\n      ...provided,\n      color: 'var(--text-color)',\n    }),\n    menu: (provided) => ({\n      ...provided,\n      backgroundColor: 'var(--component-background)',\n      color: 'var(--text-color)',\n    }),\n    option: (provided) => ({\n      ...provided,\n      backgroundColor: 'var(--component-background)',\n      color: 'var(--text-color)',\n      '&:hover': {\n        backgroundColor: 'var(--popup-button-hover)',\n      }\n    }),\n    input: (provided) => ({\n      ...provided,\n      backgroundColor: 'var(--component-background)',\n      color: 'var(--text-color)',\n    }),\n  };\n\n  return (\n    <ReactSelectWebComponentProvider>\n      <CreatableSelect\n        isClearable={isClearable}\n        onChange={onChange}\n        onInputChange={onInputChange}\n        options={options}\n        onCreateOption={onCreateOption}\n        placeholder={textPlaceholder}\n        formatCreateLabel={(value) => `${t('action.create')} ${value}`}\n        value={value}\n        styles={customStyles}\n        isValid={isValid}\n      />\n      {messageText ? <div className=\"messageText\">{messageText}</div> : undefined}\n    </ReactSelectWebComponentProvider>\n  );\n};\n\nexport default CreatableDropdown;\n","import CreatableDropdown from './CreatableDropdown';\n\nexport default CreatableDropdown;","import FormFieldPopupDimensionsInput from './FormFieldPopupDimensionsInput';\n\nexport default FormFieldPopupDimensionsInput;","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst FormFieldPopupDimensionsInput = ({ width, height, onWidthChange, onHeightChange }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"form-dimension\">\n      <div>{t('formField.formFieldPopup.size')}:</div>\n      <div className=\"form-dimension-input\">\n        <input\n          id=\"form-field-width\"\n          type=\"number\"\n          min={0}\n          value={width}\n          onChange={(e) => onWidthChange(e.target.value)}\n        /> {t('formField.formFieldPopup.width')}\n      </div>\n      <div className=\"form-dimension-input\">\n        <input\n          id=\"form-field-height\"\n          type=\"number\"\n          min={0}\n          value={height}\n          onChange={(e) => onHeightChange(e.target.value)}\n        /> {t('formField.formFieldPopup.height')}\n      </div>\n    </div>\n  );\n};\n\nexport default FormFieldPopupDimensionsInput;","import React, { useRef, useCallback } from 'react';\nimport Button from '../Button';\nimport { useDrag, useDrop } from 'react-dnd';\nimport Icon from 'components/Icon';\n\nimport './CreatableList.scss';\n\nconst CreatableListItem = ({\n  option,\n  index,\n  onChange,\n  onDeleteItem,\n  moveListItem,\n  id,\n  addItem,\n}) => {\n  const ItemTypes = {\n    ITEM: 'item'\n  };\n\n  const ref = useRef(null);\n\n  const [, drop] = useDrop({\n    accept: ItemTypes.ITEM,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const hoverIndex = index;\n\n      // Don't replace items with themselves\n      if (dragIndex === hoverIndex) {\n        return;\n      }\n\n      // Determine rectangle on screen\n      const hoverBoundingRect = ref.current?.getBoundingClientRect();\n\n      // Get vertical middle\n      const hoverMiddleY =\n        (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n\n      // Determine mouse position\n      const clientOffset = monitor.getClientOffset();\n\n      // Get pixels to the top\n      const hoverClientY = (clientOffset).y - hoverBoundingRect.top;\n\n      // Only perform the move when the mouse has crossed half of the items height\n      // When dragging downwards, only move when the cursor is below 50%\n      // When dragging upwards, only move when the cursor is above 50%\n\n      // Dragging downwards\n      if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\n        return;\n      }\n\n      // Dragging upwards\n      if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\n        return;\n      }\n\n      // Time to actually perform the action\n      moveListItem(dragIndex, hoverIndex);\n\n      // Note: we're mutating the monitor item here!\n      // Generally it's better to avoid mutations,\n      // but it's good here for the sake of performance\n      // to avoid expensive index searches.\n      item.index = hoverIndex;\n    },\n  });\n\n  const [{ isDragging }, drag] = useDrag({\n    type: ItemTypes.ITEM,\n    item: { type: ItemTypes.ITEM, id, index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const onChangeHandler = useCallback((event) => {\n    onChange(event.target.value);\n  }, [onChange]);\n\n  const addNewItemOnEnterKey = useCallback((event) => {\n    if (event.key === 'Enter') {\n      addItem();\n    }\n  }, [addItem]);\n\n  drag(drop(ref));\n\n  const opacity = isDragging ? 0 : 1;\n\n  return (\n    <div ref={ref} style={{ opacity }} className=\"creatable-list-item\">\n      <div className=\"icon-handle\">\n        <Icon\n          glyph=\"icon-drag-handle\"\n        />\n      </div>\n      <input\n        type=\"text\"\n        onChange={onChangeHandler}\n        value={option.displayValue}\n        onKeyPress={addNewItemOnEnterKey}\n        autoFocus\n      />\n      <Button\n        title=\"action.delete\"\n        img=\"icon-delete-line\"\n        onClick={onDeleteItem}\n      />\n    </div>\n  );\n};\n\nexport default CreatableListItem;","import React, { useEffect, useState, useCallback } from 'react';\nimport Button from '../Button';\nimport { useTranslation } from 'react-i18next';\nimport CreatableListItem from './CreatableListItem';\n\nimport './CreatableList.scss';\n\nconst CreatableListContainer = ({\n  options,\n  onOptionsUpdated,\n}) => {\n  const { t } = useTranslation();\n\n  // In order to be draggable, each item needs a unique Id\n  // These are managed internally in this component and not exposed to the user\n  const draggableItems = options.map((option, index) => {\n    return {\n      id: index,\n      displayValue: option.displayValue,\n      value: option.value,\n    };\n  });\n  const [items, setItems] = useState(draggableItems);\n  const [nextId, setNextId] = useState(draggableItems.length);\n\n\n  useEffect(() => {\n    const sanitizedOptions = items.map((item) => ({ value: item.value, displayValue: item.displayValue }));\n    onOptionsUpdated(sanitizedOptions);\n  }, [items, onOptionsUpdated]);\n\n  const onAddItem = useCallback(() => {\n    const id = nextId;\n    setNextId(nextId + 1);\n    setItems([...items, { id, value: '', displayValue: '' }]);\n  }, [nextId, items]);\n\n  const handleDeleteItem = (id) => () => {\n    const updatedItems = items.filter((item) => {\n      return id !== item.id;\n    });\n\n    setItems(updatedItems);\n  };\n\n  const handleItemValueChange = (id) => (value) => {\n    const updatedItems = items.map((item) => {\n      if (item.id !== id) {\n        return item;\n      }\n      return { ...item, value, displayValue: value };\n    });\n\n    setItems(updatedItems);\n  };\n\n  // We add this helper function that doesn't mutate the original array\n  // This way we dont need to add a package like immutability-helper as this is the only use case\n  function addItemAtIndex(array, index, value) {\n    const result = array.slice(0);\n    result.splice(index, 0, value);\n    return result;\n  }\n\n  const moveListItem = useCallback(\n    (dragIndex, hoverIndex) => {\n      const dragItem = items[dragIndex];\n\n      // Update items array without mutating original items array for perf reasons\n      // First we remove the element being dragged\n      const itemsWithoutDraggedElement = items.filter((_item, index) => index !== dragIndex);\n      // Now we add the dragged element at the index it's currently hovering\n      const itemsWithDraggedElementAtNewPosition = addItemAtIndex(itemsWithoutDraggedElement, hoverIndex, dragItem);\n\n      setItems(itemsWithDraggedElementAtNewPosition);\n    },\n    [items],\n  );\n\n  return (\n    <div>\n      <div className=\"creatable-list\">\n        {items.map((item, index) => (\n          <CreatableListItem\n            key={item.id}\n            index={index}\n            id={item.id}\n            option={item}\n            onChange={handleItemValueChange(item.id)}\n            onDeleteItem={handleDeleteItem(item.id)}\n            moveListItem={moveListItem}\n            addItem={onAddItem}\n          />\n        ))}\n      </div>\n      <Button\n        title={t('action.addOption')}\n        className=\"add-item-button\"\n        label={t('action.addOption')}\n        img=\"icon-plus-sign\"\n        onClick={onAddItem}\n      />\n    </div>\n  );\n};\n\nexport default CreatableListContainer;","import CreatableList from './CreatableListContainer';\n\nexport default CreatableList;","import FormFieldEditPopupIndicator from './FormFieldEditPopupIndicator';\n\nexport default FormFieldEditPopupIndicator;","import React from 'react';\nimport { Choice, Input } from '@pdftron/webviewer-react-toolkit';\nimport { useTranslation } from 'react-i18next';\n\n\nconst FormFieldEditPopupIndicator = ({ indicator, indicatorPlaceholder }) => {\n  const { t } = useTranslation();\n  const onIndicatorChange = (showIndicator) => {\n    if (indicator.value.length < 1 && showIndicator) {\n      indicator.onChange(indicatorPlaceholder);\n    }\n    indicator.toggleIndicator(showIndicator);\n  };\n\n  return (\n    <div className=\"form-field-indicator-container\">\n      <span className=\"field-indicator-title\">{t('formField.formFieldPopup.fieldIndicator')}</span>\n      <Choice\n        checked={indicator.isChecked}\n        onChange={(event) => onIndicatorChange(event.target.checked)}\n        label={t(indicator.label)}\n      />\n      <div className=\"field-indicator\">\n        <Input\n          type=\"text\"\n          onChange={(event) => indicator.onChange(event.target.value)}\n          value={indicator.value}\n          fillWidth=\"false\"\n          placeholder={indicatorPlaceholder}\n          disabled={!indicator.isChecked}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FormFieldEditPopupIndicator;","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport Button from '../Button';\nimport { useTranslation } from 'react-i18next';\nimport { Choice, Input } from '@pdftron/webviewer-react-toolkit';\nimport CreatableDropdown from '../CreatableDropdown';\nimport FormFieldPopupDimensionsInput from './FormFieldPopupDimensionsInput';\nimport HorizontalDivider from '../HorizontalDivider';\n\nimport './FormFieldEditPopup.scss';\nimport CreatableList from '../CreatableList';\nimport FormFieldEditPopupIndicator from './FormFieldEditPopupIndicator';\n\nconst FormFieldEditPopup = ({\n  fields,\n  flags,\n  closeFormFieldEditPopup,\n  isValid,\n  validationMessage,\n  radioButtonGroups,\n  options,\n  onOptionsChange,\n  annotation,\n  selectedRadioGroup,\n  getPageHeight,\n  getPageWidth,\n  redrawAnnotation,\n  indicator,\n  deleteAnnotation,\n}) => {\n  const { t } = useTranslation();\n  const className = classNames({\n    Popup: true,\n    FormFieldEditPopup: true,\n  });\n\n  const [width, setWidth] = useState(annotation.Width.toFixed(0));\n  const [height, setHeight] = useState(annotation.Height.toFixed(0));\n\n  const [initialWidth] = useState(annotation.Width.toFixed(0));\n  const [initialHeight] = useState(annotation.Height.toFixed(0));\n\n  // If no radio group is yet set, set this as null as the select input will then show the correct prompt\n  const [radioButtonGroup, setRadioButtonGroup] = useState(\n    selectedRadioGroup === '' ? null : { value: selectedRadioGroup, label: selectedRadioGroup },\n  );\n\n  useEffect(() => {\n    // When we open up the popup the async call to set the right radio group may not be finished\n    // we deal with this timing issue by updating state when the prop is refreshed\n    if (selectedRadioGroup !== '') {\n      setRadioButtonGroup({ value: selectedRadioGroup, label: selectedRadioGroup });\n    } else {\n      setRadioButtonGroup(null);\n    }\n  }, [selectedRadioGroup]);\n\n  function onSelectInputChange(field, input) {\n    if (input === null) {\n      field.onChange('');\n      setRadioButtonGroup(null);\n    } else {\n      field.onChange(input.value);\n      setRadioButtonGroup({ value: input.value, label: input.value });\n    }\n  }\n\n  function onWidthChange(width) {\n    const validatedWidth = validateWidth(width);\n    annotation.setWidth(validatedWidth);\n    setWidth(validatedWidth);\n    redrawAnnotation(annotation);\n  }\n\n  function onHeightChange(height) {\n    const validatedHeight = validateHeight(height);\n    annotation.setHeight(validatedHeight);\n    setHeight(validatedHeight);\n    redrawAnnotation(annotation);\n  }\n\n  function validateWidth(width) {\n    const documentWidth = getPageWidth();\n    const maxWidth = documentWidth - annotation.X;\n    if (width > maxWidth) {\n      return maxWidth;\n    }\n    return width;\n  }\n\n  function validateHeight(height) {\n    const documentHeight = getPageHeight();\n    const maxHeight = documentHeight - annotation.Y;\n    if (height > maxHeight) {\n      return maxHeight;\n    }\n    return height;\n  }\n\n  function onCancel() {\n    // If the field name is empty, delete the annotation\n    if (!isValid) {\n      const { value } = fields.find((field) => field.label.includes('fieldName'));\n      if (value.trim() === '') {\n        deleteAnnotation(annotation);\n        closeFormFieldEditPopup();\n        return;\n      }\n    }\n    // If width/height changed return to original values\n    if (width !== initialWidth || height !== initialHeight) {\n      annotation.setWidth(initialWidth);\n      annotation.setHeight(initialHeight);\n    }\n    redrawAnnotation(annotation);\n    closeFormFieldEditPopup();\n  }\n\n  function renderInput(field) {\n    if (field.type === 'text') {\n      return renderTextInput(field);\n    }\n    if (field.type === 'select') {\n      return renderSelectInput(field);\n    }\n  }\n\n  function renderTextInput(field) {\n    return (\n      <Input\n        type=\"text\"\n        onChange={(event) => field.onChange(event.target.value)}\n        value={field.value}\n        fillWidth=\"false\"\n        messageText={field.required && !isValid ? t(validationMessage) : ''}\n        message={field.required && !isValid ? 'warning' : 'default'}\n        autoFocus={field.focus}\n      />\n    );\n  }\n\n  function renderSelectInput(field) {\n    const displayRadioGroups = radioButtonGroups.map((group) => ({ value: group, label: group }));\n    return (\n      <>\n        <CreatableDropdown\n          textPlaceholder={t('formField.formFieldPopup.fieldName')}\n          options={displayRadioGroups}\n          onChange={(inputValue) => onSelectInputChange(field, inputValue)}\n          value={radioButtonGroup}\n          isValid={isValid}\n          messageText={t(validationMessage)}\n        />\n        <div className=\"radio-group-label\">{t('formField.formFieldPopup.radioGroups')}</div>\n      </>\n    );\n  }\n\n  function renderListOptions() {\n    return (\n      <div className=\"field-options-container\">\n        {t('formField.formFieldPopup.options')}\n        <CreatableList options={options} onOptionsUpdated={onOptionsChange} />\n      </div>\n    );\n  }\n\n  const indicatorPlaceholder = t(`formField.formFieldPopup.indicatorPlaceHolders.${annotation.getFormFieldPlaceholderType()}`);\n\n  return (\n    <div className={className}>\n      <div className=\"fields-container\">\n        {fields.map((field) => (\n          <div className=\"field-input\" key={field.label}>\n            <label>\n              {t(field.label)}\n              {field.required ? '*' : ''}:\n            </label>\n            {renderInput(field)}\n          </div>\n        ))}\n      </div>\n      {options && renderListOptions()}\n      <div className=\"field-flags-container\">\n        <span className=\"field-flags-title\">{t('formField.formFieldPopup.flags')}</span>\n        {flags.map((flag) => (\n          <Choice\n            key={flag.label}\n            checked={flag.isChecked}\n            onChange={(event) => flag.onChange(event.target.checked)}\n            label={t(flag.label)}\n          />\n        ))}\n      </div>\n      <FormFieldPopupDimensionsInput\n        width={width}\n        height={height}\n        onWidthChange={onWidthChange}\n        onHeightChange={onHeightChange}\n      />\n      <HorizontalDivider />\n      <FormFieldEditPopupIndicator\n        indicator={indicator}\n        indicatorPlaceholder={indicatorPlaceholder}\n      />\n      <div className=\"form-buttons-container\">\n        <Button\n          className=\"cancel-form-field-button\"\n          onClick={onCancel}\n          dataElement=\"formFieldCancel\"\n          label={t('formField.formFieldPopup.cancel')}\n        />\n        <Button\n          className=\"ok-form-field-button\"\n          onClick={closeFormFieldEditPopup}\n          dataElement=\"formFieldOK\"\n          label={t('action.ok')}\n          disabled={!isValid}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FormFieldEditPopup;\n","import React, { useState } from 'react';\nimport Select, { components } from 'react-select';\nimport { useTranslation } from 'react-i18next';\nimport Icon from 'components/Icon';\nimport DataElementWrapper from 'components/DataElementWrapper';\nimport SignatureModes from 'constants/signatureModes';\n\nimport ReactSelectWebComponentProvider from 'src/components/ReactSelectWebComponentProvider';\n\nimport './SignatureOptionsDropdown.scss';\n\nconst getStyles = (isDarkMode) => ({\n  valueContainer: (base) => ({\n    ...base,\n    padding: '2px',\n  }),\n  control: (base) => ({\n    ...base,\n    backgroundColor: isDarkMode ? '#21242A' : '#FFFFFF',\n    minHeight: '28px',\n    borderColor: isDarkMode ? '#485056' : '#CFD4DA',\n    '&:hover': {\n      borderColor: isDarkMode ? '#485056' : '#CFD4DA',\n    },\n  }),\n  container: (base) => ({\n    ...base,\n    backgroundColor: isDarkMode ? '#21242A' : '#FFFFFF',\n    height: '29px',\n    borderColor: isDarkMode ? '#485056' : 'red',\n    '&:hover': {\n      borderColor: isDarkMode ? '#485056' : '#CFD4DA',\n    },\n  }),\n  indicatorsContainer: (base) => {\n    return {\n      ...base,\n      paddingRight: '6px',\n      height: '26px',\n    };\n  },\n});\n\nconst CustomArrowIndicator = (props) => {\n  const { selectProps } = props;\n  const { menuIsOpen } = selectProps;\n  return (\n    <components.IndicatorsContainer {...props}>\n      <Icon className=\"arrow\" glyph={`icon-chevron-${menuIsOpen ? 'up' : 'down'}`} />\n    </components.IndicatorsContainer>\n  );\n};\n\nconst SignatureOptionsDropdown = (props) => {\n  const { onChangeHandler, initialOption } = props;\n  const { t } = useTranslation();\n  const styles = getStyles(false);\n  const signatureOptions = [\n    { value: SignatureModes.FULL_SIGNATURE, label: t('formField.types.signature') },\n    { value: SignatureModes.INITIALS, label: t('option.type.initials') },\n  ];\n\n  const init = signatureOptions.find((option) => option.value === initialOption);\n  const [value, setValue] = useState(init);\n\n  const onChange = (option) => {\n    setValue(option);\n    onChangeHandler(option);\n  };\n\n  return (\n    <DataElementWrapper className=\"signature-options-container\" dataElement=\"signatureOptionsDropdown\">\n      <label>{t('formField.type')}:</label>\n      <ReactSelectWebComponentProvider>\n        <Select\n          value={value}\n          onChange={onChange}\n          styles={styles}\n          options={signatureOptions}\n          isSearchable={false}\n          isClearable={false}\n          components={{ IndicatorsContainer: CustomArrowIndicator }}\n        />\n      </ReactSelectWebComponentProvider>\n    </DataElementWrapper>\n  );\n};\n\nexport default SignatureOptionsDropdown;","import SignatureOptionsDropdown from './SignatureOptionsDropdown';\n\nexport default SignatureOptionsDropdown;","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport Button from 'components/Button';\nimport { useTranslation } from 'react-i18next';\nimport { Choice, Input } from '@pdftron/webviewer-react-toolkit';\nimport FormFieldPopupDimensionsInput from '../FormFieldPopupDimensionsInput';\nimport FormFieldEditPopupIndicator from '../FormFieldEditPopupIndicator';\nimport SignatureOptionsDropdown from './SignatureOptionsDropdown';\nimport HorizontalDivider from 'components/HorizontalDivider';\n\nimport '../FormFieldEditPopup.scss';\n\nconst FormFieldEditSignaturePopup = ({\n  fields,\n  flags,\n  closeFormFieldEditPopup,\n  isValid,\n  validationMessage,\n  annotation,\n  getPageHeight,\n  getPageWidth,\n  redrawAnnotation,\n  onSignatureOptionChange,\n  getSignatureOptionHandler,\n  indicator,\n  deleteAnnotation\n}) => {\n  const { t } = useTranslation();\n  const className = classNames({\n    Popup: true,\n    FormFieldEditPopup: true,\n  });\n\n  const [width, setWidth] = useState((annotation.Width).toFixed(0));\n  const [height, setHeight] = useState((annotation.Height).toFixed(0));\n\n  const [initialWidth] = useState((annotation.Width).toFixed(0));\n  const [initialHeight] = useState((annotation.Height).toFixed(0));\n  const [indicatorPlaceholder, setIndicatorPlaceholder] = useState(t(`formField.formFieldPopup.indicatorPlaceHolders.SignatureFormField.${getSignatureOptionHandler(annotation)}`));\n\n\n  function onWidthChange(width) {\n    const validatedWidth = validateWidth(width);\n    annotation.setWidth(validatedWidth);\n    setWidth(validatedWidth);\n    redrawAnnotation(annotation);\n  }\n\n  function onHeightChange(height) {\n    const validatedHeight = validateHeight(height);\n    annotation.setHeight(validatedHeight);\n    setHeight(validatedHeight);\n    redrawAnnotation(annotation);\n  }\n\n  function validateWidth(width) {\n    const documentWidth = getPageWidth();\n    const maxWidth = documentWidth - annotation.X;\n    if (width > maxWidth) {\n      return maxWidth;\n    }\n    return width;\n  }\n\n  function validateHeight(height) {\n    const documentHeight = getPageHeight();\n    const maxHeight = documentHeight - annotation.Y;\n    if (height > maxHeight) {\n      return maxHeight;\n    }\n    return height;\n  }\n\n  function onCancel() {\n    // If the field name is empty, delete the annotation\n    if (!isValid) {\n      // check if string includes value\n      const { value } = fields.find((field) => field.label.includes('fieldName'));\n      if (value.trim() === '') {\n        deleteAnnotation(annotation);\n        closeFormFieldEditPopup();\n        return;\n      }\n    }\n    // If width/height changed return to original values\n    if (width !== initialWidth || height !== initialHeight) {\n      annotation.setWidth(initialWidth);\n      annotation.setHeight(initialHeight);\n    }\n    redrawAnnotation(annotation);\n    closeFormFieldEditPopup();\n  }\n\n  function renderTextInput(field) {\n    return (\n      <Input\n        type=\"text\"\n        onChange={(event) => field.onChange(event.target.value)}\n        value={field.value}\n        fillWidth=\"false\"\n        messageText={field.required && !isValid ? t(validationMessage) : ''}\n        message={field.required && !isValid ? 'warning' : 'default'}\n        autoFocus={field.focus}\n      />\n    );\n  }\n\n  const onOptionChange = (option) => {\n    onSignatureOptionChange(option);\n    const { value } = option;\n    setIndicatorPlaceholder(t(`formField.formFieldPopup.indicatorPlaceHolders.SignatureFormField.${value}`));\n  };\n\n  return (\n    <div className={className}>\n      <SignatureOptionsDropdown onChangeHandler={onOptionChange} initialOption={getSignatureOptionHandler(annotation)} />\n      <div className=\"fields-container\">\n        {fields.map((field) => (\n          <div className=\"field-input\" key={field.label}>\n            <label>\n              {t(field.label)}{field.required ? '*' : ''}:\n            </label>\n            {renderTextInput(field)}\n          </div>\n        ))}\n      </div>\n      <div className=\"field-flags-container\">\n        <span className=\"field-flags-title\">{t('formField.formFieldPopup.flags')}</span>\n        {flags.map((flag) => (\n          <Choice\n            key={flag.label}\n            checked={flag.isChecked}\n            onChange={(event) => flag.onChange(event.target.checked)}\n            label={t(flag.label)}\n          />\n        ))}\n      </div>\n      <FormFieldPopupDimensionsInput\n        width={width}\n        height={height}\n        onWidthChange={onWidthChange}\n        onHeightChange={onHeightChange}\n      />\n      <HorizontalDivider />\n      <FormFieldEditPopupIndicator\n        indicator={indicator}\n        indicatorPlaceholder={indicatorPlaceholder}\n      />\n      <div className=\"form-buttons-container\">\n        <Button\n          className=\"cancel-form-field-button\"\n          onClick={onCancel}\n          dataElement=\"formFieldCancel\"\n          label={t('formField.formFieldPopup.cancel')}\n        />\n        <Button\n          className=\"ok-form-field-button\"\n          onClick={closeFormFieldEditPopup}\n          dataElement=\"formFieldOK\"\n          label={t('action.ok')}\n          disabled={!isValid}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FormFieldEditSignaturePopup;\n","import FormFieldEditSignaturePopup from './FormFieldEditSignaturePopup';\n\nexport default FormFieldEditSignaturePopup;","import React, { useEffect, useState, useRef, useLayoutEffect, useCallback } from 'react';\nimport Draggable from 'react-draggable';\nimport core from 'core';\nimport FormFieldEditPopup from './FormFieldEditPopup';\nimport FormFieldEditSignaturePopup from './FormFieldEditSignaturePopup';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport actions from 'actions';\nimport selectors from 'selectors';\nimport classNames from 'classnames';\nimport useOnClickOutside from 'hooks/useOnClickOutside';\nimport { getAnnotationPopupPositionBasedOn } from 'helpers/getPopupPosition';\nimport DataElementWrapper from '../DataElementWrapper';\nimport { isMobileSize } from 'helpers/getDeviceSize';\nimport DataElements from 'constants/dataElement';\nimport { PRIORITY_THREE } from 'constants/actionPriority';\nimport './FormFieldEditPopup.scss';\n\nfunction FormFieldEditPopupContainer({ annotation }) {\n  const formFieldCreationManager = core.getFormFieldCreationManager();\n  const fieldLabels = formFieldCreationManager.getFieldLabels();\n  const [fieldName, setFieldName] = useState('');\n  const [fieldValue, setFieldValue] = useState('');\n  const [isReadOnly, setReadOnly] = useState(false);\n  const [isMultiLine, setMultiLine] = useState(false);\n  const [isRequired, setIsRequired] = useState(false);\n  const [isMultiSelect, setIsMultiSelect] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const [radioButtonGroups, setRadioButtonGroups] = useState([]);\n  const [position, setPosition] = useState({ left: 0, top: 0 });\n  const [validationMessage, setValidationMessage] = useState('');\n  const [showIndicator, setShowIndicator] = useState(false);\n  const [indicatorText, setIndicatorText] = useState('');\n  const popupRef = useRef();\n\n  const [isOpen] = useSelector(\n    (state) => [selectors.isElementOpen(state, DataElements.FORM_FIELD_EDIT_POPUP)],\n    shallowEqual,\n  );\n\n  const dispatch = useDispatch();\n\n  useOnClickOutside(popupRef, () => {\n    if (fieldName.trim() !== '') {\n      closeAndReset();\n    }\n  });\n\n  function closeAndReset() {\n    dispatch(actions.enableElement(DataElements.ANNOTATION_POPUP, PRIORITY_THREE));\n    dispatch(actions.closeElement(DataElements.FORM_FIELD_EDIT_POPUP));\n    setFieldName('');\n    setFieldValue('');\n    setReadOnly(false);\n    setMultiLine(false);\n    setIsRequired(false);\n    setIsMultiSelect(false);\n    setIsValid(true);\n    setShowIndicator(false);\n    setIndicatorText('');\n  }\n\n\n  const deleteFormFieldPlaceholder = useCallback((annotation) => {\n    core.deleteAnnotations([annotation]);\n  }, []);\n\n  useEffect(() => {\n    const onFormFieldCreationModeStarted = () => {\n      // Do some cleanup of radio button groups,\n      // gets rid of groups that may have been added but never actually placed as fields\n      // or that were created but unlinked from a widget\n      setRadioButtonGroups(formFieldCreationManager.getRadioButtonGroups());\n    };\n\n    core.addEventListener('formFieldCreationModeStarted', onFormFieldCreationModeStarted);\n\n    return () => {\n      core.removeEventListener('formFieldCreationModeStarted', onFormFieldCreationModeStarted);\n    };\n  }, []);\n\n  // When we open the popup we need to populate the radio list with radio groups that are created,\n  // but not yet added as fields\n  useEffect(() => {\n    const radioButtons = core.getAnnotationsList().filter((annotation) => {\n      return annotation.isFormFieldPlaceholder() && annotation.getFormFieldPlaceholderType() === 'RadioButtonFormField';\n    });\n    const radioGroups = radioButtons.map((radioButton) => {\n      return formFieldCreationManager.getFieldName(radioButton);\n    });\n    const dedupedRadioGroups = [...(new Set([...radioGroups]))];\n    setRadioButtonGroups(dedupedRadioGroups);\n  }, []);\n\n  // We use layout effect to avoid a flickering as the popup is repositioned\n  // The flow is open popup -> update position.\n  // So we first open with an old position and then re-render to the new position. By using layoutEffect\n  // we let the hook run and update the position, and then the browser updates\n  useLayoutEffect(() => {\n    const setPopupPosition = () => {\n      if (popupRef.current) {\n        setPosition(getAnnotationPopupPositionBasedOn(annotation, popupRef));\n      }\n    };\n\n    if (isOpen && annotation) {\n      setPopupPosition();\n      setFieldName(formFieldCreationManager.getFieldName(annotation));\n      setFieldValue(formFieldCreationManager.getFieldValue(annotation));\n      setReadOnly(formFieldCreationManager.getFieldFlag(annotation, fieldLabels.READ_ONLY));\n      setMultiLine(formFieldCreationManager.getFieldFlag(annotation, fieldLabels.MULTI_LINE));\n      setIsRequired(formFieldCreationManager.getFieldFlag(annotation, fieldLabels.REQUIRED));\n      setIsMultiSelect(formFieldCreationManager.getFieldFlag(annotation, fieldLabels.MULTI_SELECT));\n      const dedupedRadioGroups = [...(new Set([...radioButtonGroups, ...formFieldCreationManager.getRadioButtonGroups()]))];\n      setRadioButtonGroups(dedupedRadioGroups);\n      // Field name is required, so if this is an empty string\n      // the field is not valid and the user should be warned\n      // As a failsafe the FormFieldCreationManager will create a unique field name if this is left blank\n      const isFieldNameValid = !!formFieldCreationManager.getFieldName(annotation);\n      setIsValid(isFieldNameValid);\n      let validationMessage = '';\n      if (!isFieldNameValid) {\n        validationMessage = 'formField.formFieldPopup.invalidField.empty';\n      }\n      setValidationMessage(validationMessage);\n      setShowIndicator(formFieldCreationManager.getShowIndicator(annotation));\n      setIndicatorText(formFieldCreationManager.getIndicatorText(annotation));\n    }\n  }, [isOpen]);\n\n  const onFieldNameChange = useCallback((name) => {\n    const validatedResponse = formFieldCreationManager.setFieldName(annotation, name);\n    setIsValid(validatedResponse.isValid);\n    mapValidationResponseToTranslation(validatedResponse);\n    setFieldName(name);\n  }, [annotation]);\n\n  const mapValidationResponseToTranslation = (validationResponse) => {\n    const { errorType } = validationResponse;\n    let translationKey = '';\n\n    switch (errorType) {\n      case 'empty':\n        translationKey = 'formField.formFieldPopup.invalidField.empty';\n        break;\n      case 'duplicate':\n        translationKey = 'formField.formFieldPopup.invalidField.duplicate';\n        break;\n    }\n\n    setValidationMessage(translationKey);\n  };\n\n  const onFieldValueChange = useCallback((value) => {\n    setFieldValue(value);\n    formFieldCreationManager.setFieldValue(annotation, value);\n  }, [annotation]);\n\n  const onReadOnlyChange = useCallback((isReadOnly) => {\n    setReadOnly(isReadOnly);\n    formFieldCreationManager.setFieldFlag(annotation, fieldLabels.READ_ONLY, isReadOnly);\n  }, [annotation]);\n\n  const onMultiLineChange = useCallback((isMultiLine) => {\n    setMultiLine(isMultiLine);\n    formFieldCreationManager.setFieldFlag(annotation, fieldLabels.MULTI_LINE, isMultiLine);\n  }, [annotation]);\n\n  const onRequiredChange = useCallback((isRequired) => {\n    setIsRequired(isRequired);\n    formFieldCreationManager.setFieldFlag(annotation, fieldLabels.REQUIRED, isRequired);\n  }, [annotation]);\n\n  const onMultiSelectChange = useCallback((isMultiSelect) => {\n    setIsMultiSelect(isMultiSelect);\n    formFieldCreationManager.setFieldFlag(annotation, fieldLabels.MULTI_SELECT, isMultiSelect);\n  }, [annotation]);\n\n  const onFieldOptionsChange = useCallback((options) => {\n    formFieldCreationManager.setFieldOptions(annotation, options);\n  }, [annotation]);\n\n  const onShowFieldIndicatorChange = useCallback((showIndicator) => {\n    setShowIndicator(showIndicator);\n    formFieldCreationManager.setShowIndicator(annotation, showIndicator);\n  }, [annotation]);\n\n  const onFieldIndicatorTextChange = useCallback((indicatorText) => {\n    setIndicatorText(indicatorText);\n    formFieldCreationManager.setIndicatorText(annotation, indicatorText);\n  }, [annotation]);\n\n  const closeFormFieldEditPopup = useCallback(() => {\n    closeAndReset();\n  }, []);\n\n  const onCloseRadioButtonPopup = useCallback(() => {\n    // Add new radio group (if any) to existing radio groups and we were in a valid state\n    if (isValid && radioButtonGroups.indexOf(fieldName) === -1 && fieldName !== '') {\n      setRadioButtonGroups([fieldName, ...radioButtonGroups]);\n    }\n    closeAndReset();\n  }, [fieldName, radioButtonGroups]);\n\n  const redrawAnnotation = useCallback((annotation) => {\n    core.getAnnotationManager().drawAnnotationsFromList([annotation]);\n  }, []);\n\n  const getPageHeight = useCallback(() => {\n    return core.getPageHeight(core.getCurrentPage());\n  }, []);\n\n  const getPageWidth = useCallback(() => {\n    return core.getPageWidth(core.getCurrentPage());\n  }, []);\n\n  const onSignatureOptionChange = useCallback((signatureOption) => {\n    const { value } = signatureOption;\n    formFieldCreationManager.setSignatureOption(annotation, value);\n  }, [annotation]);\n\n  const getSignatureOption = useCallback((formFieldPlaceHolder) => {\n    return formFieldCreationManager.getSignatureOption(formFieldPlaceHolder);\n  }, []);\n\n  const fields = {\n    NAME: {\n      label: 'formField.formFieldPopup.fieldName',\n      onChange: onFieldNameChange,\n      value: fieldName,\n      required: true,\n      type: 'text',\n      focus: true,\n    },\n    VALUE: {\n      label: 'formField.formFieldPopup.fieldValue',\n      onChange: onFieldValueChange,\n      value: fieldValue,\n      type: 'text',\n    },\n    RADIO_GROUP: {\n      label: 'formField.formFieldPopup.fieldName',\n      onChange: onFieldNameChange,\n      value: fieldName,\n      required: true,\n      type: 'select',\n    },\n  };\n\n  const textFields = [fields['NAME'], fields['VALUE']];\n\n  const defaultFields = [fields['NAME']];\n\n  const radioButtonFields = [fields['RADIO_GROUP']];\n\n  const listBoxFields = [fields['NAME']];\n\n  const comboBoxFields = [fields['NAME']];\n\n  const isMobile = isMobileSize();\n\n  const flags = {\n    READ_ONLY: {\n      label: 'formField.formFieldPopup.readOnly',\n      onChange: onReadOnlyChange,\n      isChecked: isReadOnly,\n    },\n    MULTI_LINE: {\n      label: 'formField.formFieldPopup.multiLine',\n      onChange: onMultiLineChange,\n      isChecked: isMultiLine,\n    },\n    REQUIRED: {\n      label: 'formField.formFieldPopup.required',\n      onChange: onRequiredChange,\n      isChecked: isRequired,\n    },\n    MULTI_SELECT: {\n      label: 'formField.formFieldPopup.multiSelect',\n      onChange: onMultiSelectChange,\n      isChecked: isMultiSelect,\n    },\n  };\n\n  const textFieldFlags = [flags['READ_ONLY'], flags['MULTI_LINE'], flags['REQUIRED']];\n\n  const signatureFlags = [flags['REQUIRED'], flags['READ_ONLY']];\n\n  const checkBoxFlags = [flags['READ_ONLY'], flags['REQUIRED']];\n\n  const radioButtonFlags = [flags['READ_ONLY'], flags['REQUIRED']];\n\n  const listBoxFlags = [flags['MULTI_SELECT'], flags['READ_ONLY'], flags['REQUIRED']];\n\n  const comboBoxFlags = [flags['READ_ONLY'], flags['REQUIRED']];\n\n  const indicator = {\n    label: 'formField.formFieldPopup.documentFieldIndicator',\n    toggleIndicator: onShowFieldIndicatorChange,\n    isChecked: showIndicator,\n    onChange: onFieldIndicatorTextChange,\n    value: indicatorText,\n  };\n\n  const renderTextFormFieldEditPopup = () => (\n    <FormFieldEditPopup\n      fields={textFields}\n      flags={textFieldFlags}\n      closeFormFieldEditPopup={closeFormFieldEditPopup}\n      isValid={isValid}\n      validationMessage={validationMessage}\n      annotation={annotation}\n      redrawAnnotation={redrawAnnotation}\n      getPageHeight={getPageHeight}\n      getPageWidth={getPageWidth}\n      indicator={indicator}\n      deleteAnnotation={deleteFormFieldPlaceholder}\n    />\n  );\n\n  const renderSignatureFormFieldEditPopup = () => (\n    <FormFieldEditSignaturePopup\n      fields={defaultFields}\n      flags={signatureFlags}\n      closeFormFieldEditPopup={closeFormFieldEditPopup}\n      isValid={isValid}\n      validationMessage={validationMessage}\n      annotation={annotation}\n      redrawAnnotation={redrawAnnotation}\n      getPageHeight={getPageHeight}\n      getPageWidth={getPageWidth}\n      onSignatureOptionChange={onSignatureOptionChange}\n      getSignatureOptionHandler={getSignatureOption}\n      indicator={indicator}\n      deleteAnnotation={deleteFormFieldPlaceholder}\n    />\n  );\n\n  const renderCheckboxFormFieldEditPopup = () => (\n    <FormFieldEditPopup\n      fields={defaultFields}\n      flags={checkBoxFlags}\n      closeFormFieldEditPopup={closeFormFieldEditPopup}\n      isValid={isValid}\n      validationMessage={validationMessage}\n      annotation={annotation}\n      redrawAnnotation={redrawAnnotation}\n      getPageHeight={getPageHeight}\n      getPageWidth={getPageWidth}\n      indicator={indicator}\n      deleteAnnotation={deleteFormFieldPlaceholder}\n    />\n  );\n\n  const renderRadioButtonFormFieldEditPopup = () => (\n    <FormFieldEditPopup\n      fields={radioButtonFields}\n      flags={radioButtonFlags}\n      closeFormFieldEditPopup={onCloseRadioButtonPopup}\n      isValid={isValid}\n      validationMessage={validationMessage}\n      radioButtonGroups={radioButtonGroups}\n      annotation={annotation}\n      selectedRadioGroup={fieldName}\n      redrawAnnotation={redrawAnnotation}\n      getPageHeight={getPageHeight}\n      getPageWidth={getPageWidth}\n      indicator={indicator}\n      deleteAnnotation={deleteFormFieldPlaceholder}\n    />\n  );\n\n  const renderListBoxFormFieldEditPopup = () => {\n    const fieldOptions = formFieldCreationManager.getFieldOptions(annotation);\n\n    return (\n      <FormFieldEditPopup\n        fields={listBoxFields}\n        flags={listBoxFlags}\n        options={fieldOptions}\n        onOptionsChange={onFieldOptionsChange}\n        closeFormFieldEditPopup={closeFormFieldEditPopup}\n        isValid={isValid}\n        validationMessage={validationMessage}\n        annotation={annotation}\n        redrawAnnotation={redrawAnnotation}\n        getPageHeight={getPageHeight}\n        getPageWidth={getPageWidth}\n        indicator={indicator}\n        deleteAnnotation={deleteFormFieldPlaceholder}\n      />\n    );\n  };\n\n  const renderComboBoxFormFieldEditPopup = () => {\n    const fieldOptions = formFieldCreationManager.getFieldOptions(annotation);\n\n    return (\n      <FormFieldEditPopup\n        fields={comboBoxFields}\n        flags={comboBoxFlags}\n        options={fieldOptions}\n        onOptionsChange={onFieldOptionsChange}\n        closeFormFieldEditPopup={closeFormFieldEditPopup}\n        isValid={isValid}\n        validationMessage={validationMessage}\n        annotation={annotation}\n        redrawAnnotation={redrawAnnotation}\n        getPageHeight={getPageHeight}\n        getPageWidth={getPageWidth}\n        indicator={indicator}\n        deleteAnnotation={deleteFormFieldPlaceholder}\n      />\n    );\n  };\n\n  const renderPopUp = () => {\n    const intent = annotation?.getFormFieldPlaceholderType();\n    if (intent === 'TextFormField') {\n      return renderTextFormFieldEditPopup();\n    }\n    if (intent === 'SignatureFormField') {\n      return renderSignatureFormFieldEditPopup();\n    }\n    if (intent === 'CheckBoxFormField') {\n      return renderCheckboxFormFieldEditPopup();\n    }\n    if (intent === 'RadioButtonFormField') {\n      return renderRadioButtonFormFieldEditPopup();\n    }\n    if (intent === 'ListBoxFormField') {\n      return renderListBoxFormFieldEditPopup();\n    }\n    if (intent === 'ComboBoxFormField') {\n      return renderComboBoxFormFieldEditPopup();\n    }\n    return null;\n  };\n\n  const renderFormFieldEditPopup = () => (\n    <DataElementWrapper\n      className={classNames({\n        Popup: true,\n        FormFieldEditPopupContainer: true,\n        open: isOpen,\n        closed: !isOpen,\n      })}\n      data-element={DataElements.FORM_FIELD_EDIT_POPUP}\n      style={{ ...position }}\n      ref={popupRef}\n    >\n      {isOpen && renderPopUp()}\n    </DataElementWrapper>\n  );\n\n  if (!isMobile) {\n    // disable draggable on mobile devices\n    return (\n      <Draggable cancel=\".Button, .cell, .sliders-container svg, .creatable-list, .ui__input__input, .form-dimension-input, .ui__choice__input\">\n        {renderFormFieldEditPopup()}\n      </Draggable>\n    );\n  }\n  return renderFormFieldEditPopup();\n}\n\nexport default React.memo(FormFieldEditPopupContainer);\n","import FormFieldEditPopup from './FormFieldEditPopupContainer';\n\nexport default FormFieldEditPopup;"],"sourceRoot":""}