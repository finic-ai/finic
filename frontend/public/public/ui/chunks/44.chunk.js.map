{"version":3,"sources":["webpack:///./src/ui/src/components/ScaleOverlay/ScaleOverlay.scss?5805","webpack:///./src/ui/src/components/ScaleOverlay/ScaleOverlay.scss","webpack:///./src/ui/src/components/ScaleOverlay/ScaleSelector.js","webpack:///./src/ui/src/components/ScaleOverlay/ScaleHeader.js","webpack:///./src/ui/src/helpers/getNumberOfDecimalPlaces.js","webpack:///./src/ui/src/helpers/getAngleInRadians.js","webpack:///./src/ui/src/components/MeasurementOverlay/LineMeasurementInput.js","webpack:///./src/ui/src/helpers/getFormattedUnit.js","webpack:///./src/ui/src/components/MeasurementOverlay/EllipseMeasurementOverlay.js","webpack:///./src/ui/src/components/ScaleOverlay/MeasurementDetail.js","webpack:///./src/ui/src/components/ScaleOverlay/CalibrationOverlay.js","webpack:///./src/ui/src/components/ScaleOverlay/ScaleOverlay.js","webpack:///./src/ui/src/components/ScaleOverlay/ScaleOverlayContainer.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","webComponents","document","getElementsByTagName","length","clonedStyleTags","webComponent","shadowRoot","appendChild","onload","forEach","styleNode","innerHTML","cloneNode","push","head","exports","locals","propTypes","scales","PropTypes","arrayOf","object","isRequired","selectedScales","string","onScaleSelected","func","onAddingNewScale","Scale","window","Core","ScaleSelector","t","useTranslation","dispatch","useDispatch","isMultipleScalesMode","useSelector","state","selectors","getIsMultipleScalesMode","isMultipleScales","openScaleDeletionModal","scale","deleteScale","scaleInfo","core","getScales","measurements","relatedPages","Set","toString","measurementItem","Annotations","Annotation","add","measurementsNum","pages","getScaleInfo","warning","message","join","title","confirmBtnText","onConfirm","actions","showWarningMessage","renderScale","precision","getScalePrecision","pageScaleStr","getFormattedValue","pageScale","value","unit","worldScaleStr","worldScale","scaleDisplay","selectedScale","useState","isDropDownOpen","setOpenDropDown","selectorRef","useRef","useOnClickOutside","DataElementWrapper","className","dataElement","tabIndex","onClick","prevValue","ref","Icon","glyph","classNames","map","key","onMouseDown","e","preventDefault","stopPropagation","disabled","includes","ScaleHeader","data-element","split","pt1","pt2","pt3","angle","AB","Math","sqrt","pow","x","y","BC","AC","acos","atan2","abs","PI","unitMap","LineMeasurementInput","annotation","isOpen","bool","selectedTool","isReadOnly","isDocumentReadOnly","factor","Measure","axis","DisplayUnits","getLineLength","toFixed","setLength","toggleDistanceInput","setDistanceInputToggle","toggleAngleInput","setAngleToggle","useEffect","onAnnotationChanged","setAngle","computeAngle","addEventListener","removeEventListener","onInputChanged","event","target","validateLineLength","finishAnnotation","getTool","finish","selectAnnotation","getAnnotationManager","deselectAnnotation","Precision","ensureLineIsWithinBounds","useCallback","lengthInPts","value1","value2","maxLengthInPts","getMaxLineLengthInPts","setLineLength","min","forceLineRedraw","getAnnotationUnit","annotUnit","annotationManager","drawAnnotations","PageNumber","trigger","maxX","maxY","currentPageNumber","getCurrentPage","documentWidth","getPageWidth","documentHeight","getPageHeight","angleInDegrees","getAngle","startPoint","getStartPoint","startX","startY","maxLenX","cos","maxLenY","sin","onAngleChange","angleInRadians","start","Start","endX","endY","setEndPoint","adjustRect","setLineAngle","type","autoFocus","isMobileDevice","onChange","onBlur","onKeyDown","getContents","max","getAngleInRadians","End","deltaX","deltaY","renderDeltas","props","propName","componentName","checkPropTypes","shape","number","Error","defaults","EllipseMeasurementOverlay","data","getFormattedUnit","area","refreshRadius","setRadius","computeRadius","onAnnotationDeselected","annotations","action","ensureDiameterIsWithinBounds","getWidth","decimalPlaces","getNumberOfDecimalPlaces","Width","onChangeRadiusLength","radius","diameterInPts","rect","getRect","newRect","x1","y1","x2","y2","setHeight","setWidth","resize","forceEllipseRedraw","redrawAnnotation","getMaxDiameterInPts","boundingRect","width","height","Height","precisionFractions","validateDiameter","MeasurementDetail","icon","color","keyTitleMap","useMemo","mapAnnotationToKey","mapToolNameToKey","name","getDataWithKey","Color","toHexString","StrokeColor","contents","distanceMeasurement","perimeterMeasurement","areaMeasurement","rectangularAreaMeasurement","cloudyRectangularAreaMeasurement","ellipseMeasurement","arcMeasurement","keyDisplayNameMap","renderValue","Length","Radius","getIPathAnnotationPts","path","getPath","pts","filter","pt","Angle","undefined","renderAngle","renderDetails","CalibrationOverlayPropTypes","tempScale","onCancelCalibrationMode","onApplyCalibration","CalibrationOverlay","isCalibrationPopupOpen","isElementOpen","canApplyCalibration","updateIsCalibration","enableOrDisableToolElements","ScaleOverlay","getCalibrationInfo","getActiveToolName","shallowEqual","isCalibration","previousToolName","isFractionalUnit","activeToolName","setScales","shouldShowMeasurementDetail","Object","keys","onScaleUpdated","newScales","updateScales","onCreateAnnotationWithNoScale","has","totalScales","memo","measurementDataElements","ScaleOverlayContainer","offset","bounds","isElementDisabled","DataElements","SCALE_OVERLAY_CONTAINER","isDisabled","position","setPosition","getDocumentContainerWidth","getDocumentContainerHeight","documentContainerWidth","documentContainerHeight","containerRef","documentElement","getViewerElement","style","left","top","offsetTop","current","offsetLeft","offsetWidth","getBoundingClientRect","syncDraggablePosition","updateCalibrationInfo","setCustomElementOverrides","openScaleModal","setSelectedScale","openElements","SCALE_MODAL","setIsAddingNewScale","newScale","applyTo","scaleToDelete","getDocumentViewer","getMeasurementManager","getOldScalesToDeleteAfterApplying","createAndApplyScale","confirmScaleToDelete","setToolMode","setIsElementHidden","deleteAnnotations","bottom","right","onDrag","onStop","cancel","Overlay","open","closed"],"mappings":"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","file":"chunks/44.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./ScaleOverlay.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\n                if (webComponents.length > 0) {\n                  const clonedStyleTags = [];\n                  for (let i = 0; i < webComponents.length; i++) {\n                    const webComponent = webComponents[i];\n                    if (i === 0) {\n                      webComponent.shadowRoot.appendChild(styleTag);\n                      styleTag.onload = function () {\n                        if (clonedStyleTags.length > 0) {\n                          clonedStyleTags.forEach((styleNode) => {\n                            // eslint-disable-next-line no-unsanitized/property\n                            styleNode.innerHTML = styleTag.innerHTML;\n                          });\n                        }\n                      };\n                    } else {\n                      const styleNode = styleTag.cloneNode(true);\n                      webComponent.shadowRoot.appendChild(styleNode);\n                      clonedStyleTags.push(styleNode);\n                    }\n                  }\n                } else {\n                  document.head.appendChild(styleTag);\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ScaleOverlay{position:absolute;z-index:95;border-radius:4px;box-shadow:0 0 3px 0 var(--document-box-shadow);background:var(--component-background)}.open.ScaleOverlay{visibility:visible}.closed.ScaleOverlay{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.ScaleOverlay{flex-direction:column;font-size:.81rem;padding:.375rem .375rem .375rem 1rem}.ScaleOverlay .divider{width:calc(100% + 1.375rem);height:1px;margin-left:-1rem;background:#cfd4da;margin-top:12px}.ScaleOverlay .scale-overlay-header{position:relative;display:flex;flex-direction:row;justify-content:left;font-weight:400;align-items:center;padding-right:.75rem}.ScaleOverlay .scale-overlay-header .scale-overlay-title{margin-left:.8rem;color:#485056;font-weight:700;line-height:1rem}.ScaleOverlay .scale-overlay-header .add-new-scale{margin-left:1.3rem;min-height:2rem;background-color:transparent;color:#3183c8;font-weight:400;font-size:.8rem;line-height:1rem;border-radius:.3rem;border:1px solid #3183c8;cursor:pointer!important}.ScaleOverlay .scale-overlay-header .scale-overlay-icon{width:1rem;height:1.3rem}.ScaleOverlay .scale-overlay-header .scale-overlay-selector{margin-left:1.3rem;position:relative}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-overlay-selection{height:2rem;min-width:9rem;position:relative;background-color:transparent;border:1px solid var(--border);border-radius:.3rem;line-height:2rem;padding:0 32px 0 .5rem;color:#485056;font-weight:400;font-size:.8rem;text-align:left;text-overflow:ellipsis;white-space:nowrap}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-overlay-arrow{position:absolute;top:50%;right:8px;transform:translateY(-50%);display:flex;justify-content:center;width:16px;height:16px;padding:2px;color:#485056}.ScaleOverlay .scale-overlay-header .scale-overlay-selector ul{margin:0;list-style-type:none;position:absolute;min-width:10rem;left:0;top:0;text-align:left;letter-spacing:0;display:none;border-radius:4px;pointer-events:all;z-index:1000;background-color:#fff;box-shadow:0 0 4px #868e96;padding-left:0}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li{display:block;line-height:2rem;height:2rem;position:relative;font-weight:400;font-size:.8rem;padding-left:.5rem;padding-right:32px;max-width:100%}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li :hover{cursor:pointer}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li:not(:last-child):not(:first-child) .options:hover{background-color:#dee5ed}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li:last-child{padding-top:.5rem;padding-bottom:.5rem;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li:last-child :hover{cursor:default}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .option-selected{color:#3183c8}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .delete{position:absolute;top:50%;right:8px;width:16px;height:16px;transform:translateY(-50%);border:none;background-color:transparent;padding:0;border-radius:2px;display:flex;align-items:center;justify-content:center}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .delete .Icon{width:11px;height:11px;display:flex}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .delete:hover{background-color:#c7d2dd}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .delete:disabled{background-color:transparent;cursor:not-allowed}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .add-new-scale{margin-left:0;width:100%}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .add-new-scale :hover{cursor:pointer}.ScaleOverlay .scale-overlay-header .scale-overlay-selector li .options{border:none;background-color:transparent;padding:0;text-align:left;display:flex;align-items:center;justify-content:space-between;height:100%;z-index:1}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-value{margin-right:1px}.ScaleOverlay .scale-overlay-header .scale-overlay-selector .scale-overlay-list{display:block;pointer-events:all;transform:translateY(0)}.ScaleOverlay .scale-overlay-content{width:192px;min-height:32px;font-weight:400;font-size:13px;line-height:16px;margin-top:16px}.ScaleOverlay .scale-overlay-calibrate{padding-top:20px}.ScaleOverlay .scale-overlay-footer{display:flex;flex-direction:row;justify-content:space-between;width:220px;height:49px;align-items:center}.ScaleOverlay .scale-overlay-footer .calibration-cancel{padding:0;background-color:transparent;color:var(--secondary-button-text);display:flex;align-items:center;justify-content:center;cursor:pointer;border:none;font-size:13px}:host(:not([data-tabbing=true])) .ScaleOverlay .scale-overlay-footer .calibration-cancel,html:not([data-tabbing=true]) .ScaleOverlay .scale-overlay-footer .calibration-cancel{outline:none}.ScaleOverlay .scale-overlay-footer .calibration-cancel:enabled:hover{color:var(--secondary-button-hover)}.ScaleOverlay .scale-overlay-footer .calibration-cancel:disabled{opacity:.5}.ScaleOverlay .scale-overlay-footer .calibration-apply{border:none;background-color:transparent;background:var(--primary-button);border-radius:4px;padding:0 8px;height:32px;width:72px;display:flex;align-items:center;justify-content:center;position:relative;color:var(--primary-button-text);cursor:pointer}:host(:not([data-tabbing=true])) .ScaleOverlay .scale-overlay-footer .calibration-apply,html:not([data-tabbing=true]) .ScaleOverlay .scale-overlay-footer .calibration-apply{outline:none}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleOverlay .scale-overlay-footer .calibration-apply{font-size:13px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleOverlay .scale-overlay-footer .calibration-apply{font-size:13px}}.ScaleOverlay .scale-overlay-footer .calibration-apply:enabled:hover{background:var(--primary-button-hover)}.ScaleOverlay .scale-overlay-footer .calibration-apply:disabled{opacity:.5}.ScaleOverlay .MeasurementDetail{word-wrap:break-word;flex-wrap:wrap;font-weight:400;font-size:.81rem;line-height:1rem;margin-bottom:1rem}.ScaleOverlay .MeasurementDetail .header{display:flex;justify-content:left;align-items:center;width:100%;margin-top:.75rem;margin-bottom:.75rem;font-weight:700;font-size:.81rem}.ScaleOverlay .MeasurementDetail .header .icon{width:1.5rem;height:1.5rem;margin-right:.67rem}.ScaleOverlay .MeasurementDetail .scale-input{width:45px}.ScaleOverlay .MeasurementDetail .measurement__detail-container{margin-left:2.17rem}.ScaleOverlay .MeasurementDetail .measurement__detail-container .measurement__detail-item{display:flex;height:1.5rem;align-items:center}.ScaleOverlay .MeasurementDetail .distance_input{display:flex;margin-top:.5rem}.ScaleOverlay .MeasurementDetail .distance_input .distance-show{margin-right:.5rem}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ScaleOverlay .MeasurementDetail .distance_input .distance-show{width:79px;height:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ScaleOverlay .MeasurementDetail .distance_input .distance-show{width:79px;height:32px}}.ScaleOverlay .MeasurementDetail .angle_input,.ScaleOverlay .MeasurementDetail .measurement__deltas--X,.ScaleOverlay .MeasurementDetail .measurement__deltas--Y{display:flex;margin-top:.5rem}.ScaleOverlay .MeasurementDetail .measurement_list{width:5rem;margin-right:.5rem}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import classNames from 'classnames';\nimport Icon from 'components/Icon';\nimport DataElementWrapper from 'components/DataElementWrapper';\nimport PropTypes from 'prop-types';\nimport React, { useState, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport actions from 'actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport selectors from 'selectors';\nimport core from 'core';\nimport useOnClickOutside from 'hooks/useOnClickOutside';\n\nconst propTypes = {\n  scales: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedScales: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onScaleSelected: PropTypes.func.isRequired,\n  onAddingNewScale: PropTypes.func.isRequired\n};\n\nconst Scale = window.Core.Scale;\n\nconst ScaleSelector = ({ scales = [], selectedScales = [], onScaleSelected, onAddingNewScale }) => {\n  const [t] = useTranslation();\n  const dispatch = useDispatch();\n\n  const isMultipleScalesMode = useSelector((state) => selectors.getIsMultipleScalesMode(state));\n\n  const isMultipleScales = selectedScales.length > 1;\n\n  const getScaleInfo = (deleteScale) => {\n    const scales = core.getScales();\n    const measurements = [];\n    const relatedPages = new Set();\n    scales[deleteScale.toString()].forEach((measurementItem) => {\n      if (measurementItem instanceof window.Core.Annotations.Annotation) {\n        relatedPages.add(measurementItem['PageNumber']);\n        measurements.push(measurementItem);\n      }\n    });\n    return {\n      measurementsNum: measurements.length,\n      pages: [...relatedPages]\n    };\n  };\n\n  const openScaleDeletionModal = (scale) => {\n    if (!scale) {\n      return;\n    }\n    const deleteScale = new Scale(scale);\n    const scaleInfo = getScaleInfo(deleteScale);\n    const hasAssociatedMeasurements = !!scaleInfo.pages.length;\n    const message = hasAssociatedMeasurements ? (\n      <div>\n        <p>\n          <span>\n            {t('option.measurement.deleteScaleModal.scaleIsOn-delete-info')}\n            <b>{` ${t('option.measurement.deleteScaleModal.page-delete-info')} ${scaleInfo.pages.join(', ')} `}</b>\n            {t('option.measurement.deleteScaleModal.appliedTo-delete-info')}\n            <b>{` ${scaleInfo.measurementsNum} ${scaleInfo.measurementsNum > 1 ? t('option.measurement.deleteScaleModal.measurements') : t('option.measurement.deleteScaleModal.measurement')}.`}</b>\n          </span>\n          <span> </span>\n          <span>\n            {t('option.measurement.deleteScaleModal.deletionIs')}\n            <b>{` ${t('option.measurement.deleteScaleModal.irreversible')} `}</b>\n            {t('option.measurement.deleteScaleModal.willDeleteMeasurement')}\n          </span>\n        </p>\n        <p>\n          {t('option.measurement.deleteScaleModal.confirmDelete')}\n        </p>\n      </div>\n    ) : (\n      <div>\n        <p>\n          <span>\n            {t('option.measurement.deleteScaleModal.deletionIs')}\n            <b>{` ${t('option.measurement.deleteScaleModal.irreversible')}. `}</b>\n            {t('option.measurement.deleteScaleModal.confirmDelete')}\n          </span>\n        </p>\n      </div>\n    );\n    const title = `${t('option.measurement.deleteScaleModal.deleteScale')} ${deleteScale.toString()}`;\n    const confirmBtnText = t('action.confirm');\n\n    const warning = {\n      message,\n      title,\n      confirmBtnText,\n      onConfirm: () => core.deleteScale(deleteScale)\n    };\n    dispatch(actions.showWarningMessage(warning));\n  };\n\n  const renderScale = (scale) => {\n    const precision = core.getScalePrecision(scale);\n    const pageScaleStr = Scale.getFormattedValue(scale.pageScale.value, scale.pageScale.unit, precision, false);\n    const worldScaleStr = Scale.getFormattedValue(scale.worldScale.value, scale.worldScale.unit, precision, false);\n    const scaleDisplay = `${pageScaleStr} = ${worldScaleStr}`;\n\n    return <div><span>{scaleDisplay}</span></div>;\n  };\n\n  let title = t('option.measurement.scaleOverlay.multipleScales');\n\n  if (selectedScales.length && !isMultipleScales) {\n    const selectedScale = new Scale(selectedScales[0]);\n    title = renderScale(selectedScale);\n  }\n\n  // TODO: This is a bandaid solution to fix a Safari bug. This dropdown should be refactored to use a react-select component\n  // instead of hiding and displaying based on focus pseudoclasses,\n  // otherwise it is hard to debug as the open/close logic is in a CSS stylesheet and not super evident\n  const [isDropDownOpen, setOpenDropDown] = useState(false);\n  const toggleDropdown = () => {\n    setOpenDropDown((prevValue) => !prevValue);\n  };\n\n  const selectorRef = useRef(null);\n\n  useOnClickOutside(selectorRef, () => {\n    setOpenDropDown(false);\n  });\n\n  return (\n    <DataElementWrapper\n      className=\"scale-overlay-selector\"\n      dataElement=\"scaleSelector\"\n      tabIndex={0}\n      onClick={toggleDropdown}\n      ref={selectorRef}\n    >\n      <button className=\"scale-overlay-selection\">\n        {title}\n        <Icon className=\"scale-overlay-arrow\" glyph=\"icon-chevron-down\" />\n      </button>\n      {isDropDownOpen && (\n        <ul className={classNames('scale-overlay-list')} >\n          <li>\n            <div>{title}</div>\n            <Icon className=\"scale-overlay-arrow\" glyph=\"icon-chevron-up\" />\n          </li>\n          {scales.map((value) => (\n            <li key={value.toString()}>\n              <button\n                className=\"delete\"\n                onMouseDown={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  openScaleDeletionModal(value.toString());\n                }}\n                disabled={scales.length <= 1}\n              >\n                <Icon glyph=\"icon-delete-line\" />\n              </button>\n              <button\n                className={classNames({\n                  options: true,\n                  'option-selected': selectedScales.includes(value.toString()),\n                })}\n                onMouseDown={() => onScaleSelected(selectedScales, value.toString())}\n              >\n                {renderScale(value)}\n              </button>\n            </li>\n          ))}\n          {isMultipleScalesMode && (\n            <li>\n              <button onMouseDown={onAddingNewScale} className=\"add-new-scale\">\n                {t('option.measurement.scaleOverlay.addNewScale')}\n              </button>\n            </li>\n          )}\n        </ul>\n      )}\n    </DataElementWrapper>\n  );\n};\n\nScaleSelector.propTypes = propTypes;\n\nexport default ScaleSelector;\n","import React from 'react';\nimport Icon from 'components/Icon';\nimport ScaleSelector from './ScaleSelector';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nconst propTypes = {\n  scales: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedScales: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onScaleSelected: PropTypes.func.isRequired,\n  onAddingNewScale: PropTypes.func.isRequired,\n};\n\nconst ScaleHeader = ({ scales, selectedScales, onScaleSelected, onAddingNewScale }) => {\n  const [t] = useTranslation();\n\n  return (\n    <div className=\"scale-overlay-header\">\n      <Icon glyph=\"ic-calibrate\" className=\"scale-overlay-icon\" />\n      <div className=\"scale-overlay-title\">{t('option.measurementOption.scale')}</div>\n      {scales.length ? (\n        <ScaleSelector\n          scales={scales}\n          selectedScales={selectedScales}\n          onScaleSelected={onScaleSelected}\n          onAddingNewScale={onAddingNewScale}\n        />\n      ) : (\n        <button className=\"add-new-scale\" onClick={onAddingNewScale} data-element=\"addNewScale\">{t('option.measurement.scaleOverlay.addNewScale')}</button>\n      )}\n    </div>\n  );\n};\n\nScaleHeader.propTypes = propTypes;\nexport default ScaleHeader;\n","export default (precision) => (precision === 1 ? 0 : precision?.toString().split('.')[1].length);\n","export default (pt1, pt2, pt3) => {\n  let angle;\n\n  if (pt1 && pt2) {\n    if (pt3) {\n      // calculate the angle using Law of cosines\n      const AB = Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n      const BC = Math.sqrt(Math.pow(pt2.x - pt3.x, 2) + Math.pow(pt2.y - pt3.y, 2));\n      const AC = Math.sqrt(Math.pow(pt3.x - pt1.x, 2) + Math.pow(pt3.y - pt1.y, 2));\n      angle = Math.acos((BC * BC + AB * AB - AC * AC) / (2 * BC * AB));\n    } else {\n      // if there are only two points returns the angle in the plane (in radians) between the positive x-axis and the ray from (0,0) to the point (x,y)\n      angle = Math.atan2(pt2.y - pt1.y, pt2.x - pt1.x);\n      // keep the angle range between 0 and Math.PI / 2\n      angle = Math.abs(angle);\n      angle = angle > Math.PI / 2 ? Math.PI - angle : angle;\n    }\n  }\n\n  return angle;\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport core from 'core';\nimport { isMobileDevice } from 'helpers/device';\nimport selectors from 'selectors';\nimport getAngleInRadians from 'helpers/getAngleInRadians';\n\nconst unitMap = {\n  'in\\\"': 'in',\n  'ft\\'': 'ft'\n};\n\nLineMeasurementInput.propTypes = {\n  annotation: PropTypes.object,\n  isOpen: PropTypes.bool.isRequired,\n  selectedTool: PropTypes.object,\n};\n\nconst Scale = window.Core.Scale;\n\nfunction LineMeasurementInput({ annotation, isOpen, selectedTool }) {\n  const [t] = useTranslation();\n  const isReadOnly = useSelector((state) => selectors.isDocumentReadOnly(state));\n  const factor = annotation?.Measure.axis[0].factor;\n  const unit = annotation?.DisplayUnits[0] || selectedTool?.Measure?.unit;\n  const [length, setLength] = useState((annotation?.getLineLength() * factor || 0).toFixed(2));\n  const [toggleDistanceInput, setDistanceInputToggle] = useState(false);\n  const [toggleAngleInput, setAngleToggle] = useState(false);\n\n  useEffect(() => {\n    if (!annotation) {\n      setAngle(computeAngle());\n      return;\n    }\n    const onAnnotationChanged = () => {\n      setLength((annotation.getLineLength() * factor).toFixed(2));\n      setAngle(computeAngle());\n    };\n    core.addEventListener('mouseMove', onAnnotationChanged);\n\n    return () => {\n      core.removeEventListener('mouseMove', onAnnotationChanged);\n    };\n  }, [annotation, computeAngle, factor, selectedTool]);\n\n  const onInputChanged = (event) => {\n    setLength(event.target.value);\n    validateLineLength(event);\n    finishAnnotation();\n  };\n\n  const finishAnnotation = () => {\n    const tool = core.getTool('AnnotationCreateDistanceMeasurement');\n    tool.finish();\n  };\n\n  const selectAnnotation = () => {\n    const annotationManager = core.getAnnotationManager();\n    annotationManager.selectAnnotation(annotation);\n  };\n\n  const deselectAnnotation = () => {\n    const annotationManager = core.getAnnotationManager();\n    annotationManager.deselectAnnotation(annotation);\n  };\n\n  const validateLineLength = (event) => {\n    if (!annotation) {\n      return;\n    }\n    let length = Math.abs(event.target.value);\n    if (length < annotation.Precision) {\n      length = annotation.Precision;\n      setLength(length);\n    }\n    const factor = annotation.Measure.axis[0].factor;\n    const lengthInPts = length / factor;\n    ensureLineIsWithinBounds(lengthInPts);\n  };\n\n  const isApproximatelyEqual = (value1, value2) => {\n    return Math.abs(value1 - value2) < 0.1;\n  };\n\n  const ensureLineIsWithinBounds = useCallback(\n    (lengthInPts) => {\n      if (!isApproximatelyEqual(annotation.getLineLength(), lengthInPts)) {\n        const maxLengthInPts = getMaxLineLengthInPts();\n        annotation.setLineLength(Math.min(maxLengthInPts, lengthInPts));\n        forceLineRedraw();\n      }\n    },\n    [annotation, forceLineRedraw, getMaxLineLengthInPts],\n  );\n\n  const getAnnotationUnit = (annotation) => {\n    let annotUnit;\n    if (annotation?.DisplayUnits?.length) {\n      if (annotation.DisplayUnits.length === 2 && annotation.DisplayUnits[0] === \"ft'\" && annotation.DisplayUnits[1] === 'in\"') {\n        annotUnit = 'in';\n      } else {\n        annotUnit = annotation.DisplayUnits[0];\n      }\n    }\n    return unitMap[annotUnit] || annotUnit || unitMap[unit] || unit;\n  };\n\n  const renderDeltas = () => {\n    const angle = (annotation && getAngleInRadians(annotation.Start, annotation.End)) || 0;\n    const unit = getAnnotationUnit(annotation);\n    const deltaX = Scale.getFormattedValue(annotation && Math.abs(length * Math.cos(angle)), unit, annotation?.Precision);\n    const deltaY = Scale.getFormattedValue(annotation && Math.abs(length * Math.sin(angle)), unit, annotation?.Precision);\n\n    return (\n      <>\n        <div className=\"measurement__detail-item\">\n          <div className=\"measurement_list\">X:</div>\n          <div>\n            {deltaX}\n          </div>\n        </div>\n        <div className=\"measurement__detail-item\">\n          <div className=\"measurement_list\">Y:</div>\n          <div>\n            {deltaY}\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  const forceLineRedraw = useCallback(() => {\n    const annotationManager = core.getAnnotationManager();\n    annotationManager.drawAnnotations(annotation.PageNumber);\n    annotationManager.trigger('annotationChanged', [[annotation], 'modify', {}]);\n  }, [annotation]);\n\n  const getMaxLineLengthInPts = useCallback(() => {\n    const currentPageNumber = core.getCurrentPage();\n    const documentWidth = core.getPageWidth(currentPageNumber);\n    const documentHeight = core.getPageHeight(currentPageNumber);\n    const angleInDegrees = annotation.getAngle() * (180 / Math.PI).toFixed(2);\n    const startPoint = annotation.getStartPoint();\n    const startX = startPoint.x;\n    const startY = startPoint.y;\n\n    let maxX;\n    let maxY;\n    if (Math.abs(angleInDegrees) < 90) {\n      maxX = documentWidth;\n    } else {\n      maxX = 0;\n    }\n\n    if (angleInDegrees > 0) {\n      maxY = documentHeight;\n    } else {\n      maxY = 0;\n    }\n\n    const maxLenX = Math.abs((maxX - startX) / Math.cos(annotation.getAngle()));\n    const maxLenY = Math.abs((maxY - startY) / Math.sin(annotation.getAngle()));\n\n    return Math.min(maxLenX, maxLenY);\n  }, [annotation]);\n\n  const setLineAngle = (event) => {\n    const angle = event.target.value;\n    const angleInRadians = angle * (Math.PI / 180) * -1;\n    const lengthInPts = annotation.getLineLength();\n    const start = annotation.Start;\n    const endX = Math.cos(angleInRadians) * lengthInPts + start.x;\n    const endY = Math.sin(angleInRadians) * lengthInPts + start.y;\n    annotation.setEndPoint(endX, endY);\n    annotation.adjustRect();\n    forceLineRedraw();\n  };\n\n  const onAngleChange = (event) => {\n    setAngle(event.target.value);\n    setLineAngle(event);\n    finishAnnotation();\n  };\n\n  const computeAngle = useCallback(() => {\n    if (!annotation) {\n      return 0;\n    }\n    let angleInRadians = annotation.getAngle();\n    // Multiply by -1 to achieve 0-360 degrees counterclockwise\n    angleInRadians *= -1;\n    angleInRadians = angleInRadians < 0 ? angleInRadians + 2 * Math.PI : angleInRadians;\n    return ((angleInRadians / Math.PI) * 180).toFixed(2);\n  }, [annotation]);\n\n  const [angle, setAngle] = useState(computeAngle());\n\n  useEffect(() => {\n    if (!isOpen) {\n      ensureLineIsWithinBounds(annotation.getLineLength());\n    }\n  }, [annotation, ensureLineIsWithinBounds, isOpen]);\n\n  return (\n    <>\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">\n          {t('option.measurementOverlay.distance')}:\n        </div>\n        {(!annotation || !toggleDistanceInput) ? (\n          <div onClick={() => setDistanceInputToggle(true)} className=\"distance-show\">\n            {annotation?.getContents() || 0}\n          </div>\n        ) : (\n          <>\n            <input\n              className=\"scale-input\"\n              type=\"number\"\n              min=\"0\"\n              disabled={isReadOnly}\n              value={length}\n              autoFocus={!isMobileDevice}\n              onChange={(event) => {\n                onInputChanged(event);\n                selectAnnotation();\n              }}\n              onBlur={(event) => {\n                validateLineLength(event);\n                setDistanceInputToggle(false);\n              }}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  onInputChanged(event);\n                  deselectAnnotation();\n                }\n              }}\n            />\n            {unit}\n          </>\n        )}\n      </div>\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">{t('option.measurementOverlay.angle')}:</div>\n        {(!annotation || !toggleAngleInput) ? (\n          <div onClick={() => setAngleToggle(true)} className=\"distance-show\">\n            {angle}&deg;\n          </div>\n        ) : (\n          <>\n            <input\n              className=\"scale-input\"\n              type=\"number\"\n              min=\"0\"\n              max=\"360\"\n              disabled={isReadOnly}\n              value={angle}\n              autoFocus={!isMobileDevice}\n              onChange={(event) => {\n                onAngleChange(event);\n                selectAnnotation();\n              }}\n              onBlur={() => setAngleToggle(false)}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  onAngleChange(event);\n                  deselectAnnotation();\n                }\n              }}\n            />\n            &deg;\n          </>\n        )}\n      </div>\n      {renderDeltas()}\n    </>\n  );\n}\n\nexport default LineMeasurementInput;\n","export default (unit) => {\n  switch (unit) {\n    case 'ft\\'':\n      return 'ft';\n    case 'in\"':\n      return 'in';\n    case 'ft-in':\n      return 'ft';\n    default:\n      return unit;\n  }\n};\n","import core from 'core';\nimport getNumberOfDecimalPlaces from 'helpers/getNumberOfDecimalPlaces';\nimport { isMobileDevice } from 'src/helpers/device';\nimport { precisionFractions } from 'constants/measurementScale';\nimport PropTypes from 'prop-types';\nimport selectors from 'selectors';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport getFormattedUnit from 'src/helpers/getFormattedUnit';\n\nconst propTypes = {\n  annotation: (props, propName, componentName) => {\n    if (!props.annotation && !props.selectedTool) {\n      return new Error(`One of props 'annotation' or 'selectedTool' was not specified in '${componentName}'.`);\n    }\n    if (props.annotation) {\n      PropTypes.checkPropTypes(\n        {\n          annotation: PropTypes.shape({\n            Precision: PropTypes.number,\n            DisplayUnits: PropTypes.arrayOf(PropTypes.string),\n            getContents: PropTypes.func,\n          }),\n        },\n        { annotation: props.annotation },\n        'prop',\n        'EllipseMeasurementOverlay',\n      );\n    }\n    return null;\n  },\n  selectedTool: (props, propName, componentName) => {\n    if (!props.annotation && !props.selectedTool) {\n      return new Error(`One of props 'annotation' or 'selectedTool' was not specified in '${componentName}'.`);\n    }\n    if (props.selectedTool) {\n      PropTypes.checkPropTypes(\n        {\n          selectedTool: PropTypes.shape({\n            defaults: PropTypes.shape({\n              Precision: PropTypes.number,\n            }),\n            Measure: PropTypes.shape({\n              unit: PropTypes.string,\n            }),\n          }),\n        },\n        { selectedTool: props.selectedTool },\n        'prop',\n        'EllipseMeasurementOverlay',\n      );\n    }\n    return null;\n  },\n  isOpen: PropTypes.bool.isRequired,\n};\n\nfunction EllipseMeasurementOverlay({ annotation, isOpen, selectedTool }) {\n  const { t } = useTranslation();\n\n  const isReadOnly = useSelector((state) => selectors.isDocumentReadOnly(state));\n  const data = {\n    precision: !annotation ? selectedTool?.defaults?.Precision : annotation.Precision,\n    unit: getFormattedUnit((annotation?.Scale || selectedTool?.defaults?.Scale)[1][1]),\n    area: annotation?.getContents() || 0,\n  };\n\n  const refreshRadius = () => {\n    setRadius(computeRadius());\n  };\n\n  useEffect(() => {\n    refreshRadius();\n    core.addEventListener('mouseMove', refreshRadius);\n\n    return () => {\n      core.removeEventListener('mouseMove', refreshRadius);\n    };\n  }, [annotation]);\n\n  useEffect(() => {\n    const onAnnotationDeselected = (annotations, action) => {\n      if (action === 'deselected') {\n        const annotation = annotations[0];\n        ensureDiameterIsWithinBounds(annotation.getWidth(), annotation);\n      }\n    };\n\n    core.addEventListener('annotationSelected', onAnnotationDeselected);\n\n    return () => {\n      core.removeEventListener('annotationSelected', onAnnotationDeselected);\n    };\n  }, []);\n\n  const computeRadius = () => {\n    if (!annotation) {\n      return 0;\n    }\n    const decimalPlaces = annotation && getNumberOfDecimalPlaces(annotation.Precision) || 0;\n    const factor = annotation.Measure.axis[0].factor;\n    const radiusInPts = (annotation.Width / 2).toFixed(decimalPlaces);\n    return (radiusInPts * factor).toFixed(decimalPlaces);\n  };\n\n  const finishAnnotation = () => {\n    const tool = core.getTool('AnnotationCreateEllipseMeasurement');\n    tool.finish();\n  };\n\n  const selectAnnotation = () => {\n    const annotationManager = core.getAnnotationManager();\n    annotationManager.selectAnnotation(annotation);\n  };\n\n  const deselectAnnot = () => {\n    const annotationManager = core.getAnnotationManager();\n    annotationManager.deselectAnnotation(annotation);\n  };\n\n  const onChangeRadiusLength = (event) => {\n    const radius = Math.abs(event.target.value);\n    const factor = annotation.Measure.axis[0].factor;\n    const radiusInPts = radius / factor;\n    const diameterInPts = radiusInPts * 2;\n    const rect = annotation.getRect();\n    let { X1, X2, Y1, Y2 } = 0;\n    X1 = rect['x1'];\n    Y1 = rect['y1'];\n    X2 = rect['x1'] + diameterInPts;\n    Y2 = rect['y1'] + diameterInPts;\n    const newRect = { x1: X1, y1: Y1, x2: X2, y2: Y2 };\n\n    annotation.setHeight(diameterInPts);\n    annotation.setWidth(diameterInPts);\n    annotation.resize(newRect);\n    setRadius(radius);\n    forceEllipseRedraw(annotation);\n    finishAnnotation();\n  };\n\n  const forceEllipseRedraw = (annotation) => {\n    const annotationManager = core.getAnnotationManager();\n    annotationManager.redrawAnnotation(annotation);\n    annotationManager.trigger('annotationChanged', [[annotation], 'modify', []]);\n  };\n\n  const getMaxDiameterInPts = useCallback((annotation) => {\n    const currentPageNumber = core.getCurrentPage();\n    const documentWidth = core.getPageWidth(currentPageNumber);\n    const documentHeight = core.getPageHeight(currentPageNumber);\n    const startX = annotation['X'];\n    const startY = annotation['Y'];\n\n    const maxX = documentWidth - startX;\n    const maxY = documentHeight - startY;\n\n    return Math.min(maxX, maxY);\n  });\n\n  const validateDiameter = (event) => {\n    const radius = Math.abs(event.target.value);\n    const factor = annotation.Measure.axis[0].factor;\n    const radiusInPts = radius / factor;\n    const diameterInPts = radiusInPts * 2;\n    ensureDiameterIsWithinBounds(diameterInPts, annotation);\n    refreshRadius();\n  };\n\n  const ensureDiameterIsWithinBounds = useCallback((diameterInPts, annotation) => {\n    const maxDiameterInPts = getMaxDiameterInPts(annotation);\n\n    if (diameterInPts > maxDiameterInPts) {\n      const boundingRect = annotation.getRect();\n      const { x1, x2, y1, y2 } = boundingRect;\n      let width = annotation.Width;\n      let height = annotation.Height;\n      const currentPageNumber = core.getCurrentPage();\n      const documentWidth = core.getPageWidth(currentPageNumber);\n      const documentHeight = core.getPageHeight(currentPageNumber);\n\n      if (x2 > documentWidth) {\n        boundingRect['x2'] = documentWidth;\n        width = documentWidth - x1;\n      }\n      if (y2 > documentHeight) {\n        boundingRect['y2'] = documentHeight;\n        height = documentHeight - y1;\n      }\n\n      if (width < documentWidth) {\n        annotation.setWidth(width);\n      } else {\n        annotation.setWidth(documentWidth);\n      }\n      if (height < documentHeight) {\n        annotation.setHeight(height);\n      } else {\n        annotation.setHeight(documentHeight);\n      }\n      annotation.resize(boundingRect);\n      forceEllipseRedraw(annotation);\n    }\n  }, [getMaxDiameterInPts]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      ensureDiameterIsWithinBounds(annotation.getWidth(), annotation);\n    }\n  }, [annotation, ensureDiameterIsWithinBounds, isOpen]);\n\n  const [radius, setRadius] = useState(computeRadius());\n\n  return (\n    <div className=\"measurement__detail-container\">\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">{t('option.shared.precision')}:</div>\n        {precisionFractions[data.precision] || data.precision}\n      </div>\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">{t('option.measurementOverlay.area')}:</div>\n        <div className=\"distance-show\">{data.area}</div>\n      </div>\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">{t('option.measurementOverlay.radius')}:</div>\n        {annotation ? (\n          <>\n            <input\n              autoFocus={!isMobileDevice}\n              className=\"scale-input\"\n              type=\"number\"\n              min=\"0\"\n              disabled={isReadOnly}\n              value={radius}\n              onChange={(event) => {\n                onChangeRadiusLength(event);\n                selectAnnotation();\n              }}\n              onBlur={(event) => validateDiameter(event)}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  onChangeRadiusLength(event);\n                  deselectAnnot();\n                }\n              }}\n            />\n            {data.unit}\n          </>\n        ) : (\n          <div>0</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nEllipseMeasurementOverlay.propTypes = propTypes;\n\nexport default EllipseMeasurementOverlay;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { mapAnnotationToKey, mapToolNameToKey, getDataWithKey } from 'constants/map';\nimport { precisionFractions } from 'constants/measurementScale';\nimport getNumberOfDecimalPlaces from 'helpers/getNumberOfDecimalPlaces';\nimport Icon from 'components/Icon';\nimport LineMeasurementInput from 'components/MeasurementOverlay/LineMeasurementInput';\nimport EllipseMeasurementOverlay from 'components/MeasurementOverlay/EllipseMeasurementOverlay';\nimport getAngleInRadians from 'helpers/getAngleInRadians';\n\nimport './ScaleOverlay.scss';\n\nconst propTypes = {\n  annotation: PropTypes.object,\n  isOpen: PropTypes.bool.isRequired,\n  selectedTool: PropTypes.object,\n};\n\nconst MeasurementDetail = ({ annotation, isOpen, selectedTool }) => {\n  const { t } = useTranslation();\n\n  const data = useMemo(() => {\n    const key = annotation ? mapAnnotationToKey(annotation) : mapToolNameToKey(selectedTool.name);\n    return {\n      key,\n      icon: getDataWithKey(key).icon,\n      color: annotation ? annotation.Color.toHexString() : selectedTool?.defaults?.StrokeColor?.toHexString(),\n      contents: annotation ? annotation.getContents() : 0,\n      precision: !annotation ? selectedTool?.defaults?.Precision : annotation.Precision,\n    };\n  });\n\n  const renderTitle = () => {\n    const { key, icon, color } = data;\n    const keyTitleMap = {\n      distanceMeasurement: t('option.measurementOverlay.distanceMeasurement'),\n      perimeterMeasurement: t('option.measurementOverlay.perimeterMeasurement'),\n      areaMeasurement: t('option.measurementOverlay.areaMeasurement'),\n      rectangularAreaMeasurement: t('option.measurementOverlay.areaMeasurement'),\n      cloudyRectangularAreaMeasurement: t('option.measurementOverlay.areaMeasurement'),\n      ellipseMeasurement: t('option.measurementOverlay.areaMeasurement'),\n      arcMeasurement: t('option.measurementOverlay.arcMeasurement'),\n    };\n\n    return (\n      <div className=\"header\">\n        <Icon glyph={icon} color={color} className=\"icon\" />\n        <div>{keyTitleMap[key]}</div>\n      </div>\n    );\n  };\n\n  const renderValue = () => {\n    const { key, contents } = data;\n\n    const keyDisplayNameMap = {\n      distanceMeasurement: t('option.measurementOverlay.distance'),\n      perimeterMeasurement: t('option.measurementOverlay.perimeter'),\n      areaMeasurement: t('option.measurementOverlay.area'),\n      rectangularAreaMeasurement: t('option.measurementOverlay.area'),\n      cloudyRectangularAreaMeasurement: t('option.measurementOverlay.area'),\n    };\n\n    return (\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">{keyDisplayNameMap[key]}:</div>\n        {contents}\n      </div>\n    );\n  };\n\n  const renderAngle = () => {\n    if (!annotation) {\n      return (\n        <div className=\"measurement__detail-item\">\n          <div className=\"measurement_list\">{t('option.measurementOverlay.angle')}:</div> 0&deg;\n        </div>\n      );\n    }\n    const { key } = data;\n    const getIPathAnnotationPts = (annotation) => {\n      const path = annotation.getPath();\n      const length = path.length;\n      return [path[length - 3], path[length - 2], path[length - 1]];\n    };\n    const keyPtMap = {\n      distanceMeasurement: ({ Start, End }) => [Start, End],\n      perimeterMeasurement: getIPathAnnotationPts,\n      areaMeasurement: getIPathAnnotationPts,\n      rectangularAreaMeasurement: getIPathAnnotationPts,\n      cloudyRectangularAreaMeasurement: getIPathAnnotationPts,\n      arcMeasurement: getIPathAnnotationPts,\n    };\n    const pts = keyPtMap[key](annotation).filter((pt) => !!pt);\n\n    let angle = getAngleInRadians(...pts);\n    if (angle) {\n      const decimalPlaces = getNumberOfDecimalPlaces(annotation.Precision);\n      angle = ((angle / Math.PI) * 180).toFixed(decimalPlaces);\n    }\n\n    if (key === 'arcMeasurement') {\n      angle = annotation.Angle.toFixed(2);\n    }\n\n    return (\n      angle !== undefined && (\n        <div className=\"measurement__detail-item\">\n          <div className=\"measurement_list\">{t('option.measurementOverlay.angle')}:</div>\n          {angle}&deg;\n        </div>\n      )\n    );\n  };\n\n  const renderLength = () => {\n    const length = annotation?.Length || 0;\n    return (\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">{t('option.measurementOverlay.length')}</div> {length}\n      </div>\n    );\n  };\n\n  const renderRadius = () => {\n    const radius = annotation?.Radius || 0;\n    return (\n      <div className=\"measurement__detail-item\">\n        <div className=\"measurement_list\">{t('option.measurementOverlay.radius')}</div> {radius}\n      </div>\n    );\n  };\n\n  const renderDetails = () => {\n    const { key, precision } = data;\n    if (key === 'ellipseMeasurement') {\n      return <EllipseMeasurementOverlay annotation={annotation} selectedTool={selectedTool} isOpen={isOpen} />;\n    }\n\n    return (\n      <div className=\"measurement__detail-container\">\n        <div className=\"measurement__detail-item\">\n          <div className=\"measurement_list\">{t('option.shared.precision')}:</div>\n          {precisionFractions[precision] || precision}\n        </div>\n        {key === 'distanceMeasurement' && (\n          <LineMeasurementInput annotation={annotation} isOpen={isOpen} selectedTool={selectedTool} />\n        )}\n        {[\n          'rectangularAreaMeasurement',\n          'cloudyRectangularAreaMeasurement',\n          'perimeterMeasurement',\n          'areaMeasurement',\n        ].includes(key) && renderValue()}\n        {key === 'arcMeasurement' && renderLength()}\n        {key === 'arcMeasurement' && renderRadius()}\n        {!['rectangularAreaMeasurement', 'distanceMeasurement', 'cloudyRectangularAreaMeasurement'].includes(key) &&\n          renderAngle()}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"MeasurementDetail\">\n      {renderTitle()}\n      {renderDetails()}\n    </div>\n  );\n};\n\nMeasurementDetail.propTypes = propTypes;\n\nexport default MeasurementDetail;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport selectors from 'selectors';\nimport Icon from 'components/Icon';\nimport PropTypes from 'prop-types';\n\nconst Scale = window.Core.Scale;\n\nconst CalibrationOverlayPropTypes = {\n  tempScale: PropTypes.string,\n  onCancelCalibrationMode: PropTypes.func,\n  onApplyCalibration: PropTypes.func\n};\n\nconst CalibrationOverlay = ({ tempScale, onCancelCalibrationMode, onApplyCalibration }) => {\n  const [t] = useTranslation();\n\n  const isCalibrationPopupOpen = useSelector((state) => selectors.isElementOpen(state, 'annotationPopup'));\n\n  const canApplyCalibration = isCalibrationPopupOpen && tempScale;\n\n  return (\n    <div className=\"scale-overlay-calibrate\">\n      <div className=\"scale-overlay-header\">\n        <Icon glyph=\"ic-calibrate\" className=\"scale-overlay-icon\" />\n        <div className=\"scale-overlay-title\">{t('option.measurement.scaleModal.calibrate')}</div>\n      </div>\n      <div className=\"scale-overlay-content\">\n        {!canApplyCalibration\n          ? t('option.measurement.scaleOverlay.selectTwoPoints')\n          : t('option.measurement.scaleOverlay.inputKnowDimension')}\n      </div>\n      <div className=\"divider\" />\n      <div className=\"scale-overlay-footer\">\n        <button\n          className=\"calibration-cancel\"\n          onMouseDown={onCancelCalibrationMode}\n        >\n          {t('action.cancel')}\n        </button>\n        <button\n          className=\"calibration-apply\"\n          disabled={!(isCalibrationPopupOpen && tempScale && (new Scale(tempScale).worldScale?.value > 0))}\n          data-element=\"calibrationApply\"\n          onMouseDown={onApplyCalibration}\n        >\n          {t('action.apply')}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nCalibrationOverlay.propTypes = CalibrationOverlayPropTypes;\n\nexport default CalibrationOverlay;","import ScaleHeader from './ScaleHeader';\nimport core from 'core';\nimport MeasurementDetail from './MeasurementDetail';\nimport PropTypes from 'prop-types';\nimport selectors from 'selectors';\nimport React, { useEffect, useState, useMemo, memo } from 'react';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport CalibrationOverlay from './CalibrationOverlay';\n\nimport './ScaleOverlay.scss';\n\nconst Scale = window.Core.Scale;\n\nconst propTypes = {\n  annotations: PropTypes.arrayOf(PropTypes.object).isRequired,\n  selectedTool: PropTypes.object,\n  updateIsCalibration: PropTypes.func.isRequired,\n  enableOrDisableToolElements: PropTypes.func.isRequired,\n  onScaleSelected: PropTypes.func.isRequired,\n  onCancelCalibrationMode: PropTypes.func.isRequired,\n  onApplyCalibration: PropTypes.func.isRequired,\n  onAddingNewScale: PropTypes.func.isRequired\n};\n\nconst ScaleOverlay = ({\n  annotations,\n  selectedTool,\n  updateIsCalibration,\n  enableOrDisableToolElements,\n  onScaleSelected,\n  onCancelCalibrationMode,\n  onApplyCalibration,\n  onAddingNewScale\n}) => {\n  const [\n    { isCalibration, tempScale, previousToolName = 'AnnotationCreateDistanceMeasurement', isFractionalUnit },\n    activeToolName\n  ] = useSelector((state) => [\n    selectors.getCalibrationInfo(state),\n    selectors.getActiveToolName(state)\n  ], shallowEqual);\n  const [scales, setScales] = useState(core.getScales());\n  const shouldShowMeasurementDetail = !!Object.keys(scales).length && !(!selectedTool && (!annotations.length || annotations.length > 1));\n\n  useEffect(() => {\n    const onScaleUpdated = (newScales) => {\n      setScales(newScales);\n    };\n    const updateScales = () => {\n      setScales(core.getScales());\n    };\n\n    const onCreateAnnotationWithNoScale = () => {\n      onAddingNewScale();\n    };\n    core.addEventListener('scaleUpdated', onScaleUpdated);\n    core.addEventListener('createAnnotationWithNoScale', onCreateAnnotationWithNoScale);\n    core.addEventListener('annotationsLoaded', updateScales);\n    core.addEventListener('annotationChanged', updateScales);\n\n    return () => {\n      core.removeEventListener('scaleUpdated', onScaleUpdated);\n      core.removeEventListener('createAnnotationWithNoScale', onCreateAnnotationWithNoScale);\n      core.removeEventListener('annotationsLoaded', updateScales);\n      core.removeEventListener('annotationChanged', updateScales);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (activeToolName === 'AnnotationCreateCalibrationMeasurement') {\n      !isCalibration && updateIsCalibration(true);\n      enableOrDisableToolElements(true);\n    } else {\n      updateIsCalibration(false);\n      enableOrDisableToolElements(false);\n    }\n  }, [activeToolName, updateIsCalibration, enableOrDisableToolElements]);\n\n  const selectedScales = useMemo(() => {\n    const scales = new Set();\n    [...annotations, selectedTool].forEach((measurementItem) => {\n      const scale = measurementItem?.Measure?.scale;\n      if (scale && !scales.has(scale)) {\n        scales.add(scale);\n      }\n    });\n    return [...scales];\n  }, [annotations, selectedTool, scales]);\n\n  const totalScales = Object.keys(scales).map((scale) => new Scale(scale));\n\n  return isCalibration ? (\n    <CalibrationOverlay\n      tempScale={tempScale}\n      onCancelCalibrationMode={() => onCancelCalibrationMode(previousToolName)}\n      onApplyCalibration={() => onApplyCalibration(previousToolName, tempScale, isFractionalUnit)}\n      previousToolName={previousToolName}\n    />\n  ) : (\n    <>\n      <ScaleHeader\n        scales={totalScales}\n        selectedScales={selectedScales}\n        onScaleSelected={onScaleSelected}\n        onAddingNewScale={onAddingNewScale}\n      />\n      {shouldShowMeasurementDetail && (\n        <MeasurementDetail\n          annotation={annotations.length > 1 ? null : annotations[0] || null}\n          selectedTool={selectedTool}\n          isOpen\n        />\n      )}\n    </>\n  );\n};\n\nScaleOverlay.propTypes = propTypes;\n\nexport default memo(ScaleOverlay);\n","import actions from 'actions';\nimport ScaleOverlay from './ScaleOverlay';\nimport classNames from 'classnames';\nimport core from 'core';\nimport Draggable from 'react-draggable';\nimport selectors from 'selectors';\nimport { useSelector, useDispatch } from 'react-redux';\nimport React, { useState, useRef, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport DataElements from 'constants/dataElement';\n\nimport './ScaleOverlay.scss';\n\nconst Scale = window.Core.Scale;\n\nconst measurementDataElements = [\n  'distanceToolGroupButton',\n  'arcMeasurementToolGroupButton',\n  'perimeterToolGroupButton',\n  'areaToolGroupButton',\n  'rectangleAreaToolGroupButton',\n  'ellipseAreaToolGroupButton',\n  'countToolGroupButton',\n  'cloudyRectangleAreaToolGroupButton',\n  'arcToolGroupButton'\n];\n\nconst DEFAULT_CONTAINER_TOP_OFFSET = 85;\nconst DEFAULT_CONTAINER_RIGHT_OFFSET = 35;\nconst DEFAULT_WIDTH_RATIO = 0.666;\nconst DEFAULT_DISTANCE = 10;\n\nconst ScaleOverlayContainer = ({ annotations, selectedTool }) => {\n  const dispatch = useDispatch();\n  const [t] = useTranslation();\n  const [\n    isDisabled,\n    isOpen,\n  ] = useSelector(\n    (state) => [\n      selectors.isElementDisabled(state, DataElements.SCALE_OVERLAY_CONTAINER),\n      selectors.isElementOpen(state, DataElements.SCALE_OVERLAY_CONTAINER),\n    ],\n  );\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n\n  const [\n    documentContainerWidth,\n    documentContainerHeight\n  ] = useSelector((state) => [\n    selectors.getDocumentContainerWidth(state),\n    selectors.getDocumentContainerHeight(state)\n  ]);\n\n  const containerRef = useRef(null);\n\n  const documentElement = core.getViewerElement();\n\n  const calculateStyle = () => {\n    const offset = {\n      left: documentContainerWidth * DEFAULT_WIDTH_RATIO,\n      top: documentElement?.offsetTop + DEFAULT_DISTANCE || DEFAULT_CONTAINER_TOP_OFFSET,\n    };\n\n    if (documentElement && containerRef?.current) {\n      offset.left = Math.min(\n        documentElement?.offsetLeft + documentElement?.offsetWidth + DEFAULT_DISTANCE || offset.left,\n        documentContainerWidth - containerRef.current.getBoundingClientRect().width,\n      );\n    }\n    return offset;\n  };\n  const style = calculateStyle();\n\n  const containerBounds = () => {\n    const bounds = {\n      top: 0,\n      bottom: documentContainerHeight - DEFAULT_CONTAINER_TOP_OFFSET,\n      left: 0 - documentContainerWidth,\n      right: documentContainerWidth / 3,\n    };\n    if (style) {\n      bounds.right = documentContainerWidth - style['left'] - DEFAULT_CONTAINER_RIGHT_OFFSET;\n    }\n    return bounds;\n  };\n\n  const syncDraggablePosition = (e, { x, y }) => {\n    setPosition({\n      x,\n      y,\n    });\n  };\n\n  const updateIsCalibration = useCallback((isCalibration) => {\n    dispatch(actions.updateCalibrationInfo({ isCalibration }));\n  }, []);\n\n  const enableOrDisableToolElements = useCallback((disabled) => {\n    measurementDataElements.forEach((dataElement) => {\n      dispatch(\n        actions.setCustomElementOverrides(dataElement, {\n          disabled,\n        }),\n      );\n    });\n  }, []);\n\n  const setSelectedScale = (scale) => dispatch(actions.setSelectedScale(scale));\n\n  const openScaleModal = useCallback((scale) => {\n    scale && setSelectedScale(new Scale(scale));\n    dispatch(actions.openElements([DataElements.SCALE_MODAL]));\n    dispatch(actions.setIsAddingNewScale());\n  }, []);\n\n  const onScaleSelected = useCallback((selectedScales, scale) => {\n    const newScale = new Scale(scale);\n    if (selectedScales.length === 1 && selectedScales.includes(scale)) {\n      openScaleModal(scale);\n    } else {\n      const applyTo = [...annotations, selectedTool];\n      const scaleToDelete = core.getDocumentViewer().getMeasurementManager().getOldScalesToDeleteAfterApplying({ scale: newScale, applyTo })[0];\n      const createAndApplyScale = () => {\n        core.createAndApplyScale(\n          newScale,\n          [...annotations, selectedTool]\n        );\n      };\n      if (scaleToDelete) {\n        confirmScaleToDelete(scaleToDelete, createAndApplyScale);\n      } else {\n        createAndApplyScale();\n      }\n    }\n  }, [annotations, selectedTool]);\n\n  const confirmScaleToDelete = (scaleToDelete, createAndApplyScale) => {\n    const message = (\n      <div>\n        <p>\n          <span>\n            {t('option.measurement.deleteScaleModal.ifChangeScale')}\n            <b>{scaleToDelete}</b>\n            {t('option.measurement.deleteScaleModal.notUsedWillDelete')}\n          </span>\n        </p>\n        <p>\n          <span>\n            {t('option.measurement.deleteScaleModal.ifToContinue')}\n          </span>\n        </p>\n      </div>\n    );\n    const title = `${t('option.measurement.deleteScaleModal.deleteScale')} ${scaleToDelete}`;\n    const confirmBtnText = t('action.confirm');\n\n    const warning = {\n      message,\n      title,\n      confirmBtnText,\n      onConfirm: () => createAndApplyScale()\n    };\n    dispatch(actions.showWarningMessage(warning));\n  };\n\n  const onCancelCalibrationMode = useCallback((previousToolName) => {\n    core.setToolMode(previousToolName);\n    updateIsCalibration(false);\n    dispatch(actions.setIsElementHidden(DataElements.SCALE_MODAL, false));\n  }, []);\n\n  const onApplyCalibration = useCallback((previousToolName, tempScale, isFractionalUnit) => {\n    dispatch(actions.updateCalibrationInfo({ isCalibration: false, tempScale, isFractionalUnit }));\n    dispatch(actions.setIsElementHidden(DataElements.SCALE_MODAL, false));\n    core.setToolMode(previousToolName);\n    core.deleteAnnotations([annotations[0]]);\n  }, [annotations]);\n\n  const onAddingNewScale = useCallback(() => {\n    openScaleModal();\n    dispatch(actions.setIsAddingNewScale(true));\n  }, []);\n\n  return !isDisabled && (\n    <Draggable\n      position={position}\n      bounds={containerBounds()}\n      onDrag={syncDraggablePosition}\n      onStop={syncDraggablePosition}\n      cancel={'.scale-overlay-selector, .add-new-scale'}\n    >\n      <div\n        className={classNames({\n          Overlay: true,\n          ScaleOverlay: true,\n          open: isOpen,\n          closed: !isOpen,\n        })}\n        data-element={DataElements.SCALE_OVERLAY_CONTAINER}\n        style={style}\n        ref={containerRef}\n      >\n        <ScaleOverlay\n          annotations={annotations}\n          selectedTool={selectedTool}\n          updateIsCalibration={updateIsCalibration}\n          enableOrDisableToolElements={enableOrDisableToolElements}\n          onScaleSelected={onScaleSelected}\n          onCancelCalibrationMode={onCancelCalibrationMode}\n          onApplyCalibration={onApplyCalibration}\n          onAddingNewScale={onAddingNewScale}\n        />\n      </div>\n    </Draggable>\n  );\n};\n\nexport default ScaleOverlayContainer;\n"],"sourceRoot":""}