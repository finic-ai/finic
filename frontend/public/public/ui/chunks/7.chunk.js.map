{"version":3,"sources":["webpack:///./src/ui/node_modules/core-js/modules/es.string.link.js","webpack:///./src/ui/node_modules/quill-mention/dist/quill.mention.esm.js","webpack:///./src/ui/node_modules/dompurify/dist/purify.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/utils.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/html-tag.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/anchor-tag-builder.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/truncate/truncate-smart.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/truncate/truncate-middle.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/truncate/truncate-end.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/match/match.js","webpack:///./src/ui/node_modules/autolinker/node_modules/tslib/tslib.es6.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/match/email-match.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/matcher/url-matcher.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/match/hashtag-match.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/match/mention-match.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/match/phone-match.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/match/url-match.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/matcher/matcher.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/regex-lib.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/matcher/tld-regex.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/matcher/email-matcher.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/matcher/url-match-validator.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/matcher/hashtag-matcher.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/matcher/phone-matcher.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/matcher/mention-matcher.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/htmlParser/parse-html.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/autolinker.js","webpack:///./src/ui/node_modules/autolinker/dist/es2015/index.js"],"names":["$","createHTML","target","proto","forced","forcedStringHTMLMethod","link","url","this","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_defineProperty","obj","value","_extends","assign","arguments","source","hasOwnProperty","call","apply","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","e","_isNativeReflectConstruct","result","Super","NewTarget","constructor","_superPropBase","object","property","_get","get","receiver","base","desc","getOwnPropertyDescriptor","_arrayLikeToArray","arr","len","arr2","Array","_createForOfIteratorHelper","allowArrayLike","it","Symbol","iterator","isArray","minLen","n","toString","slice","name","from","test","_unsupportedIterableToArray","F","s","done","f","err","normalCompletion","didErr","step","next","return","Keys","attachDataValues","element","data","dataAttributes","mention","keys","forEach","indexOf","dataset","MentionBlot","_Embed","subClass","superClass","create","_inherits","_super","scroll","node","_this","clickHandler","hoverHandler","mounted","getClickHandler","getHoverHandler","domNode","addEventListener","removeEventListener","_this2","event","buildEvent","window","dispatchEvent","preventDefault","_this3","Event","bubbles","cancelable","denotationChar","document","createElement","className","innerHTML","appendChild","setDataValues","blotName","tagName","register","Mention","quill","options","isOpen","itemIndex","mentionCharPos","cursorPos","values","suspendMouseEnter","existingSourceExecutionToken","renderItem","item","concat","renderLoading","onSelect","insertItem","mentionDenotationChars","showDenotationChar","allowedChars","minChars","maxChars","offsetTop","offsetLeft","isolateCharacter","fixMentionsToQuill","positioningStrategy","defaultMenuOrientation","linkTarget","onOpen","onBeforeClose","onClose","listItemClass","mentionContainerClass","mentionListClass","spaceAfterInsert","selectKeys","mentionContainer","style","cssText","onmousemove","onContainerMouseMove","bind","width","mentionList","id","root","setAttribute","on","onTextChange","onSelectionChange","container","setTimeout","range","getSelection","keyboard","addBinding","selectHandler","bindings","unshift","pop","_step","_iterator","selectKey","escapeHandler","upHandler","downHandler","selectItem","abandoned","hideMentionList","prevItem","nextItem","body","visibility","display","scrollTop","setMentionContainerPosition","setIsOpen","remove","removeAttribute","scrollItemInView","undefined","childNodes","classList","disabled","add","itemHeight","offsetHeight","itemPos","containerTop","containerBottom","hasLinkValue","itemTarget","getItemData","asyncData","programmaticInsert","insertAtPos","render","deleteText","sources","USER","insertEmbed","insertText","setSelection","index","Number","isNaN","highlightItem","button","stopImmediatePropagation","currentTarget","getElementsByClassName","showMentionList","loadingDiv","append","mentionChar","searchTerm","removeLoading","initialSelection","li","onmouseenter","onDisabledItemMouseEnter","onItemMouseEnter","onmouseup","onItemClick","onmousedown","onItemMouseDown","newIndex","increment","decrement","topPos","containerPos","top","pageYOffset","innerHeight","leftPos","offsetWidth","left","pageXOffset","documentElement","clientWidth","setMentionContainerPosition_Fixed","setMentionContainerPosition_Normal","getBoundingClientRect","getBounds","containerHeight","right","containerRightIsNotVisible","containerWidth","overMentionCharPos","height","bottom","containerBottomIsNotVisible","_overMentionCharPos","split","_this4","position","mentionCharPosAbsolute","relativeToPos","rightPos","availableSpaceTop","availableSpaceBottom","clientHeight","fitsBottom","fitsTop","startPos","Math","max","getText","_this5","text","textBeforeCursor","getTextBeforeCursor","_getMentionCharIndex","reduce","prev","mentionCharIndex","lastIndexOf","isolateChar","match","hasValidMentionCharIndex","textAfter","substring","hasValidChars","getAllowedCharsRegex","sourceRequestToken","renderList","RegExp","delta","oldDelta","onSomethingChange","selection","blur","focus","module","exports","entries","isFrozen","freeze","seal","fun","thisValue","args","x","Func","arrayForEach","unapply","arrayPop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringToString","stringMatch","stringReplace","replace","stringIndexOf","stringTrim","trim","regExpTest","typeErrorCreate","func","_len2","_key2","thisArg","_len","_key","addToSet","set","array","transformCaseFunc","_transformCaseFunc","l","lcElement","clone","newObject","lookupGetter","prop","console","warn","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","EXPRESSIONS","getGlobal","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","hasAttribute","getAttribute","policyName","createScriptURL","scriptUrl","_","createDOMPurify","DOMPurify","version","removed","nodeType","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","TRUSTED_TYPES_POLICY","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","namespaceURI","parentTagName","_forceRemove","parentNode","removeChild","_removeAttribute","attribute","getAttributeNode","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","createDocument","insertBefore","createTextNode","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","hook","_sanitizeElements","allowedTags","firstElementChild","_basicCustomElementTest","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","firstChild","nodeIterator","shadowroot","shadowrootmod","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","factory","fn","splice","throwUnhandledCaseError","theValue","Error","HtmlTag","attrs","whitespaceRegex","innerHtml","setTagName","getTagName","setAttr","getAttrs","getAttr","setAttrs","setClass","cssClass","addClass","newClass","classAttr","getClass","classes","newClasses","shift","join","removeClass","removeClasses","idx","hasClass","setInnerHTML","setInnerHtml","getInnerHTML","getInnerHtml","toAnchorString","attrsStr","buildAttrsStr","attrsArr","AnchorTagBuilder","newWindow","truncate","build","createAttrs","processAnchorText","getAnchorText","getAnchorHref","createCssClass","returnClasses","cssClassSuffixes","getCssClassSuffixes","anchorText","doTruncate","truncateLength","truncateLocation","location","truncateLen","ellipsisChars","ellipsisLengthBeforeParsing","ellipsisLength","buildUrl","urlObj","scheme","host","path","query","buildSegment","segment","remainingAvailableLength","remainingAvailableLengthHalf","startOffset","ceil","endOffset","floor","end","substr","availableLength","urlSub","parse_url","matchQuery","str","pathAndQuery","truncateSmart","truncateMiddle","ellipsis","truncateEnd","Match","__jsduckDummyDocProp","matchedText","offset","tagBuilder","getMatchedText","setOffset","getOffset","getType","buildTag","extendStatics","d","b","__extends","__","__assign","t","urlSuffixRegex","EmailMatch","email","getEmail","HashtagMatch","serviceName","hashtag","getServiceName","getHashtag","MentionMatch","getMention","PhoneMatch","number","plusSign","getPhoneNumber","getNumber","UrlMatch","urlMatchType","protocolUrlMatch","protocolRelativeMatch","stripPrefix","www","stripTrailingSlash","decodePercentEncoding","schemePrefixRegex","wwwPrefixRegex","protocolRelativeRegex","protocolPrepended","getUrlMatchType","getUrl","stripProtocolRelativePrefix","stripSchemePrefix","stripWwwPrefix","removeTrailingSlash","removePercentEncoding","charAt","preProcessedEntityAnchorText","decodeURIComponent","Matcher","letterRe","digitRe","nonDigitRe","whitespaceRe","quoteRe","controlCharsRe","alphaCharsStr","alphaCharsAndMarksStr","decimalNumbersStr","alphaNumericCharsStr","alphaNumericAndMarksCharsStr","ipStr","domainLabelStr","getDomainLabelStr","group","getDomainNameStr","domainNameCharRegex","tldRegex","EmailMatcher","localPartCharRegex","strictTldRegex","parseMatches","noCurrentEmailMatch","CurrentEmailMatch","mailtoTransitions","charIdx","state","currentEmailMatch","char","stateNonEmailAddress","stateMailTo","stateLocalPart","stateLocalPartDot","stateAtSign","stateDomainChar","stateDomainHyphen","stateDomainDot","captureMatchIfValidAndReset","beginEmailMatch","prevChar","hasMailtoPrefix","resetToNonEmailMatchState","hasDomainDot","newState","emailAddress","emailAddressNormalized","doesEmailHaveValidTld","UrlMatchValidator","isValid","urlMatch","isValidUriScheme","urlMatchDoesNotHaveProtocolOrDot","urlMatchDoesNotHaveAtLeastOneWordChar","isValidIpAddress","containsMultipleDots","uriSchemeMatch","newRegex","hasFullProtocolRegex","ipRegex","stringBeforeSlash","uriSchemeMatchArr","uriSchemeRegex","uriScheme","hasWordCharAfterProtocolRegex","wordCharRegExp","UrlMatcher","matcherRegex","_loop_1","matchStr","schemeUrlMatch","wwwUrlMatch","wwwProtocolRelativeMatch","tldProtocolRelativeMatch","this_1","matchHasUnbalancedClosingParen","pos","matchHasInvalidCharAfterTld","foundCommonScheme","find","commonScheme","indexOfSchemeStart","exec","startChar","endChar","numOpenBraces","res","HashtagMatcher","nonWordCharRegex","phoneMatcherRegex","PhoneMatcher","cleanNumber","before","after","contextClear","testMatch","twitterRegex","instagramRegex","soundcloudRegex","tiktokRegex","MentionMatcher","matcherRegexes","parseHtml","_a","onOpenTag","onCloseTag","onText","onComment","onDoctype","noCurrentTag","CurrentTag","currentDataIdx","currentTag","stateData","stateTagOpen","stateEndTagOpen","stateTagName","stateBeforeAttributeName","stateAttributeName","stateAfterAttributeName","stateBeforeAttributeValue","stateAttributeValueDoubleQuoted","stateAttributeValueSingleQuoted","stateAttributeValueUnquoted","stateAfterAttributeValueQuoted","stateSelfClosingStartTag","stateMarkupDeclarationOpen","stateCommentStart","stateCommentStartDash","stateComment","stateCommentEndDash","stateCommentEnd","stateCommentEndBang","stateDoctype","startNewTag","isClosing","isOpening","captureTagName","emitTagAndPreviousTextNode","resetToDataState","type","toUpperCase","textBeforeTag","startIdx","Autolinker","urls","phone","replaceFn","context","sanitizeHtml","matchers","normalizeUrlsCfg","normalizeStripPrefixCfg","normalizeTruncateCfg","textOrHtml","parse","schemeMatches","wwwMatches","tldMatches","dest","src","defaults","POSITIVE_INFINITY","skipTagNames","skipTagsStackCount","textSplit","splitRegex","global","lastIdx","splitAndCapture","currentOffset_1","splitText","textNodeMatches","parseText","compactMatches","removeUnwantedMatches","sort","a","matchedTextLength","endIdx","removeIdx","m","getMatchers","numMatchers","textMatches","j","numTextMatches","newHtml","lastIndex","createMatchReturnVal","replaceFnResult","getTagBuilder","matcher","Email","Hashtag","Phone","Url"],"mappings":"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","file":"chunks/7.chunk.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar createHTML = require('../internals/create-html');\nvar forcedStringHTMLMethod = require('../internals/string-html-forced');\n\n// `String.prototype.link` method\n// https://tc39.es/ecma262/#sec-string.prototype.link\n$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('link') }, {\n  link: function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  }\n});\n","import Quill from 'quill';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nvar Keys = {\n  TAB: 9,\n  ENTER: 13,\n  ESCAPE: 27,\n  UP: 38,\n  DOWN: 40\n};\n\nfunction attachDataValues(element, data, dataAttributes) {\n  var mention = element;\n  Object.keys(data).forEach(function (key) {\n    if (dataAttributes.indexOf(key) > -1) {\n      mention.dataset[key] = data[key];\n    } else {\n      delete mention.dataset[key];\n    }\n  });\n  return mention;\n}\n\nfunction getMentionCharIndex(text, mentionDenotationChars) {\n  return mentionDenotationChars.reduce(function (prev, mentionChar) {\n    var mentionCharIndex = text.lastIndexOf(mentionChar);\n\n    if (mentionCharIndex > prev.mentionCharIndex) {\n      return {\n        mentionChar: mentionChar,\n        mentionCharIndex: mentionCharIndex\n      };\n    }\n\n    return {\n      mentionChar: prev.mentionChar,\n      mentionCharIndex: prev.mentionCharIndex\n    };\n  }, {\n    mentionChar: null,\n    mentionCharIndex: -1\n  });\n}\n\nfunction hasValidChars(text, allowedChars) {\n  return allowedChars.test(text);\n}\n\nfunction hasValidMentionCharIndex(mentionCharIndex, text, isolateChar) {\n  if (mentionCharIndex > -1) {\n    if (isolateChar && !(mentionCharIndex === 0 || !!text[mentionCharIndex - 1].match(/\\s/g))) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n}\n\nvar Embed = Quill[\"import\"](\"blots/embed\");\n\nvar MentionBlot = /*#__PURE__*/function (_Embed) {\n  _inherits(MentionBlot, _Embed);\n\n  var _super = _createSuper(MentionBlot);\n\n  function MentionBlot(scroll, node) {\n    var _this;\n\n    _classCallCheck(this, MentionBlot);\n\n    _this = _super.call(this, scroll, node);\n\n    _defineProperty(_assertThisInitialized(_this), \"hoverHandler\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"hoverHandler\", void 0);\n\n    _this.clickHandler = null;\n    _this.hoverHandler = null;\n    _this.mounted = false;\n    return _this;\n  }\n\n  _createClass(MentionBlot, [{\n    key: \"attach\",\n    value: function attach() {\n      _get(_getPrototypeOf(MentionBlot.prototype), \"attach\", this).call(this);\n\n      if (!this.mounted) {\n        this.mounted = true;\n        this.clickHandler = this.getClickHandler();\n        this.hoverHandler = this.getHoverHandler();\n        this.domNode.addEventListener(\"click\", this.clickHandler, false);\n        this.domNode.addEventListener(\"mouseenter\", this.hoverHandler, false);\n      }\n    }\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      _get(_getPrototypeOf(MentionBlot.prototype), \"detach\", this).call(this);\n\n      this.mounted = false;\n\n      if (this.clickHandler) {\n        this.domNode.removeEventListener(\"click\", this.clickHandler);\n        this.clickHandler = null;\n      }\n    }\n  }, {\n    key: \"getClickHandler\",\n    value: function getClickHandler() {\n      var _this2 = this;\n\n      return function (e) {\n        var event = _this2.buildEvent(\"mention-clicked\", e);\n\n        window.dispatchEvent(event);\n        e.preventDefault();\n      };\n    }\n  }, {\n    key: \"getHoverHandler\",\n    value: function getHoverHandler() {\n      var _this3 = this;\n\n      return function (e) {\n        var event = _this3.buildEvent('mention-hovered', e);\n\n        window.dispatchEvent(event);\n        e.preventDefault();\n      };\n    }\n  }, {\n    key: \"buildEvent\",\n    value: function buildEvent(name, e) {\n      var event = new Event(name, {\n        bubbles: true,\n        cancelable: true\n      });\n      event.value = _extends({}, this.domNode.dataset);\n      event.event = e;\n      return event;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(data) {\n      var node = _get(_getPrototypeOf(MentionBlot), \"create\", this).call(this);\n\n      var denotationChar = document.createElement(\"span\");\n      denotationChar.className = \"ql-mention-denotation-char\";\n      denotationChar.innerHTML = data.denotationChar;\n      node.appendChild(denotationChar);\n      node.innerHTML += data.value;\n      return MentionBlot.setDataValues(node, data);\n    }\n  }, {\n    key: \"setDataValues\",\n    value: function setDataValues(element, data) {\n      var domNode = element;\n      Object.keys(data).forEach(function (key) {\n        domNode.dataset[key] = data[key];\n      });\n      return domNode;\n    }\n  }, {\n    key: \"value\",\n    value: function value(domNode) {\n      return domNode.dataset;\n    }\n  }]);\n\n  return MentionBlot;\n}(Embed);\n\nMentionBlot.blotName = \"mention\";\nMentionBlot.tagName = \"span\";\nMentionBlot.className = \"mention\";\nQuill.register(MentionBlot);\n\nvar Mention = /*#__PURE__*/function () {\n  function Mention(quill, options) {\n    var _this = this;\n\n    _classCallCheck(this, Mention);\n\n    this.isOpen = false;\n    this.itemIndex = 0;\n    this.mentionCharPos = null;\n    this.cursorPos = null;\n    this.values = [];\n    this.suspendMouseEnter = false; //this token is an object that may contains one key \"abandoned\", set to\n    //true when the previous source call should be ignored in favor or a\n    //more recent execution.  This token will be null unless a source call\n    //is in progress.\n\n    this.existingSourceExecutionToken = null;\n    this.quill = quill;\n    this.options = {\n      source: null,\n      renderItem: function renderItem(item) {\n        return \"\".concat(item.value);\n      },\n      renderLoading: function renderLoading() {\n        return null;\n      },\n      onSelect: function onSelect(item, insertItem) {\n        insertItem(item);\n      },\n      mentionDenotationChars: [\"@\"],\n      showDenotationChar: true,\n      allowedChars: /^[a-zA-Z0-9_]*$/,\n      minChars: 0,\n      maxChars: 31,\n      offsetTop: 2,\n      offsetLeft: 0,\n      isolateCharacter: false,\n      fixMentionsToQuill: false,\n      positioningStrategy: \"normal\",\n      defaultMenuOrientation: \"bottom\",\n      blotName: \"mention\",\n      dataAttributes: [\"id\", \"value\", \"denotationChar\", \"link\", \"target\", \"disabled\"],\n      linkTarget: \"_blank\",\n      onOpen: function onOpen() {\n        return true;\n      },\n      onBeforeClose: function onBeforeClose() {\n        return true;\n      },\n      onClose: function onClose() {\n        return true;\n      },\n      // Style options\n      listItemClass: \"ql-mention-list-item\",\n      mentionContainerClass: \"ql-mention-list-container\",\n      mentionListClass: \"ql-mention-list\",\n      spaceAfterInsert: true,\n      selectKeys: [Keys.ENTER]\n    };\n\n    _extends(this.options, options, {\n      dataAttributes: Array.isArray(options.dataAttributes) ? this.options.dataAttributes.concat(options.dataAttributes) : this.options.dataAttributes\n    }); //create mention container\n\n\n    this.mentionContainer = document.createElement(\"div\");\n    this.mentionContainer.className = this.options.mentionContainerClass ? this.options.mentionContainerClass : \"\";\n    this.mentionContainer.style.cssText = \"display: none; position: absolute;\";\n    this.mentionContainer.onmousemove = this.onContainerMouseMove.bind(this);\n\n    if (this.options.fixMentionsToQuill) {\n      this.mentionContainer.style.width = \"auto\";\n    }\n\n    this.mentionList = document.createElement(\"ul\");\n    this.mentionList.id = 'quill-mention-list';\n    quill.root.setAttribute('aria-owns', 'quill-mention-list');\n    this.mentionList.className = this.options.mentionListClass ? this.options.mentionListClass : \"\";\n    this.mentionContainer.appendChild(this.mentionList);\n    quill.on(\"text-change\", this.onTextChange.bind(this));\n    quill.on(\"selection-change\", this.onSelectionChange.bind(this)); //Pasting doesn't fire selection-change after the pasted text is\n    //inserted, so here we manually trigger one\n\n    quill.container.addEventListener(\"paste\", function () {\n      setTimeout(function () {\n        var range = quill.getSelection();\n\n        _this.onSelectionChange(range);\n      });\n    });\n    quill.keyboard.addBinding({\n      key: Keys.TAB\n    }, this.selectHandler.bind(this));\n    quill.keyboard.bindings[Keys.TAB].unshift(quill.keyboard.bindings[Keys.TAB].pop());\n\n    var _iterator = _createForOfIteratorHelper(this.options.selectKeys),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var selectKey = _step.value;\n        quill.keyboard.addBinding({\n          key: selectKey\n        }, this.selectHandler.bind(this));\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    quill.keyboard.bindings[Keys.ENTER].unshift(quill.keyboard.bindings[Keys.ENTER].pop());\n    quill.keyboard.addBinding({\n      key: Keys.ESCAPE\n    }, this.escapeHandler.bind(this));\n    quill.keyboard.addBinding({\n      key: Keys.UP\n    }, this.upHandler.bind(this));\n    quill.keyboard.addBinding({\n      key: Keys.DOWN\n    }, this.downHandler.bind(this));\n  }\n\n  _createClass(Mention, [{\n    key: \"selectHandler\",\n    value: function selectHandler() {\n      if (this.isOpen && !this.existingSourceExecutionToken) {\n        this.selectItem();\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"escapeHandler\",\n    value: function escapeHandler() {\n      if (this.isOpen) {\n        if (this.existingSourceExecutionToken) {\n          this.existingSourceExecutionToken.abandoned = true;\n        }\n\n        this.hideMentionList();\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"upHandler\",\n    value: function upHandler() {\n      if (this.isOpen && !this.existingSourceExecutionToken) {\n        this.prevItem();\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"downHandler\",\n    value: function downHandler() {\n      if (this.isOpen && !this.existingSourceExecutionToken) {\n        this.nextItem();\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"showMentionList\",\n    value: function showMentionList() {\n      if (this.options.positioningStrategy === \"fixed\") {\n        document.body.appendChild(this.mentionContainer);\n      } else {\n        this.quill.container.appendChild(this.mentionContainer);\n      }\n\n      this.mentionContainer.style.visibility = \"hidden\";\n      this.mentionContainer.style.display = \"\";\n      this.mentionContainer.scrollTop = 0;\n      this.setMentionContainerPosition();\n      this.setIsOpen(true);\n    }\n  }, {\n    key: \"hideMentionList\",\n    value: function hideMentionList() {\n      this.options.onBeforeClose();\n      this.mentionContainer.style.display = \"none\";\n      this.mentionContainer.remove();\n      this.setIsOpen(false);\n      this.quill.root.removeAttribute('aria-activedescendant');\n    }\n  }, {\n    key: \"highlightItem\",\n    value: function highlightItem() {\n      var scrollItemInView = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      for (var i = 0; i < this.mentionList.childNodes.length; i += 1) {\n        this.mentionList.childNodes[i].classList.remove(\"selected\");\n      }\n\n      if (this.itemIndex === -1 || this.mentionList.childNodes[this.itemIndex].dataset.disabled === \"true\") {\n        return;\n      }\n\n      this.mentionList.childNodes[this.itemIndex].classList.add(\"selected\");\n      this.quill.root.setAttribute('aria-activedescendant', this.mentionList.childNodes[this.itemIndex].id);\n\n      if (scrollItemInView) {\n        var itemHeight = this.mentionList.childNodes[this.itemIndex].offsetHeight;\n        var itemPos = this.mentionList.childNodes[this.itemIndex].offsetTop;\n        var containerTop = this.mentionContainer.scrollTop;\n        var containerBottom = containerTop + this.mentionContainer.offsetHeight;\n\n        if (itemPos < containerTop) {\n          // Scroll up if the item is above the top of the container\n          this.mentionContainer.scrollTop = itemPos;\n        } else if (itemPos > containerBottom - itemHeight) {\n          // scroll down if any part of the element is below the bottom of the container\n          this.mentionContainer.scrollTop += itemPos - containerBottom + itemHeight;\n        }\n      }\n    }\n  }, {\n    key: \"getItemData\",\n    value: function getItemData() {\n      var link = this.mentionList.childNodes[this.itemIndex].dataset.link;\n      var hasLinkValue = typeof link !== \"undefined\";\n      var itemTarget = this.mentionList.childNodes[this.itemIndex].dataset.target;\n\n      if (hasLinkValue) {\n        this.mentionList.childNodes[this.itemIndex].dataset.value = \"<a href=\\\"\".concat(link, \"\\\" target=\").concat(itemTarget || this.options.linkTarget, \">\").concat(this.mentionList.childNodes[this.itemIndex].dataset.value);\n      }\n\n      return this.mentionList.childNodes[this.itemIndex].dataset;\n    }\n  }, {\n    key: \"onContainerMouseMove\",\n    value: function onContainerMouseMove() {\n      this.suspendMouseEnter = false;\n    }\n  }, {\n    key: \"selectItem\",\n    value: function selectItem() {\n      var _this2 = this;\n\n      if (this.itemIndex === -1) {\n        return;\n      }\n\n      var data = this.getItemData();\n\n      if (data.disabled) {\n        return;\n      }\n\n      this.options.onSelect(data, function (asyncData) {\n        _this2.insertItem(asyncData);\n      });\n      this.hideMentionList();\n    }\n  }, {\n    key: \"insertItem\",\n    value: function insertItem(data, programmaticInsert) {\n      var render = data;\n\n      if (render === null) {\n        return;\n      }\n\n      if (!this.options.showDenotationChar) {\n        render.denotationChar = \"\";\n      }\n\n      var insertAtPos;\n\n      if (!programmaticInsert) {\n        insertAtPos = this.mentionCharPos;\n        this.quill.deleteText(this.mentionCharPos, this.cursorPos - this.mentionCharPos, Quill.sources.USER);\n      } else {\n        insertAtPos = this.cursorPos;\n      }\n\n      this.quill.insertEmbed(insertAtPos, this.options.blotName, render, Quill.sources.USER);\n\n      if (this.options.spaceAfterInsert) {\n        this.quill.insertText(insertAtPos + 1, \" \", Quill.sources.USER); // setSelection here sets cursor position\n\n        this.quill.setSelection(insertAtPos + 2, Quill.sources.USER);\n      } else {\n        this.quill.setSelection(insertAtPos + 1, Quill.sources.USER);\n      }\n\n      this.hideMentionList();\n    }\n  }, {\n    key: \"onItemMouseEnter\",\n    value: function onItemMouseEnter(e) {\n      if (this.suspendMouseEnter) {\n        return;\n      }\n\n      var index = Number(e.target.dataset.index);\n\n      if (!Number.isNaN(index) && index !== this.itemIndex) {\n        this.itemIndex = index;\n        this.highlightItem(false);\n      }\n    }\n  }, {\n    key: \"onDisabledItemMouseEnter\",\n    value: function onDisabledItemMouseEnter(e) {\n      if (this.suspendMouseEnter) {\n        return;\n      }\n\n      this.itemIndex = -1;\n      this.highlightItem(false);\n    }\n  }, {\n    key: \"onItemClick\",\n    value: function onItemClick(e) {\n      if (e.button !== 0) {\n        return;\n      }\n\n      e.preventDefault();\n      e.stopImmediatePropagation();\n      this.itemIndex = e.currentTarget.dataset.index;\n      this.highlightItem();\n      this.selectItem();\n    }\n  }, {\n    key: \"onItemMouseDown\",\n    value: function onItemMouseDown(e) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }, {\n    key: \"renderLoading\",\n    value: function renderLoading() {\n      var renderedLoading = this.options.renderLoading();\n\n      if (!renderedLoading) {\n        return;\n      }\n\n      if (this.mentionContainer.getElementsByClassName(\"ql-mention-loading\").length > 0) {\n        this.showMentionList();\n        return;\n      }\n\n      this.mentionList.innerHTML = \"\";\n      var loadingDiv = document.createElement(\"div\");\n      loadingDiv.className = \"ql-mention-loading\";\n      loadingDiv.innerHTML = this.options.renderLoading();\n      this.mentionContainer.append(loadingDiv);\n      this.showMentionList();\n    }\n  }, {\n    key: \"removeLoading\",\n    value: function removeLoading() {\n      var loadingDiv = this.mentionContainer.getElementsByClassName(\"ql-mention-loading\");\n\n      if (loadingDiv.length > 0) {\n        loadingDiv[0].remove();\n      }\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList(mentionChar, data, searchTerm) {\n      if (data && data.length > 0) {\n        this.removeLoading();\n        this.values = data;\n        this.mentionList.innerHTML = \"\";\n        var initialSelection = -1;\n\n        for (var i = 0; i < data.length; i += 1) {\n          var li = document.createElement(\"li\");\n          li.id = 'quill-mention-item-' + i;\n          li.className = this.options.listItemClass ? this.options.listItemClass : \"\";\n\n          if (data[i].disabled) {\n            li.className += \" disabled\";\n            li.setAttribute('aria-hidden', 'true');\n          } else if (initialSelection === -1) {\n            initialSelection = i;\n          }\n\n          li.dataset.index = i;\n          li.innerHTML = this.options.renderItem(data[i], searchTerm);\n\n          if (!data[i].disabled) {\n            li.onmouseenter = this.onItemMouseEnter.bind(this);\n            li.onmouseup = this.onItemClick.bind(this);\n            li.onmousedown = this.onItemMouseDown.bind(this);\n          } else {\n            li.onmouseenter = this.onDisabledItemMouseEnter.bind(this);\n          }\n\n          li.dataset.denotationChar = mentionChar;\n          this.mentionList.appendChild(attachDataValues(li, data[i], this.options.dataAttributes));\n        }\n\n        this.itemIndex = initialSelection;\n        this.highlightItem();\n        this.showMentionList();\n      } else {\n        this.hideMentionList();\n      }\n    }\n  }, {\n    key: \"nextItem\",\n    value: function nextItem() {\n      var increment = 0;\n      var newIndex;\n\n      do {\n        increment++;\n        newIndex = (this.itemIndex + increment) % this.values.length;\n        var disabled = this.mentionList.childNodes[newIndex].dataset.disabled === \"true\";\n\n        if (increment === this.values.length + 1) {\n          //we've wrapped around w/o finding an enabled item\n          newIndex = -1;\n          break;\n        }\n      } while (disabled);\n\n      this.itemIndex = newIndex;\n      this.suspendMouseEnter = true;\n      this.highlightItem();\n    }\n  }, {\n    key: \"prevItem\",\n    value: function prevItem() {\n      var decrement = 0;\n      var newIndex;\n\n      do {\n        decrement++;\n        newIndex = (this.itemIndex + this.values.length - decrement) % this.values.length;\n        var disabled = this.mentionList.childNodes[newIndex].dataset.disabled === \"true\";\n\n        if (decrement === this.values.length + 1) {\n          //we've wrapped around w/o finding an enabled item\n          newIndex = -1;\n          break;\n        }\n      } while (disabled);\n\n      this.itemIndex = newIndex;\n      this.suspendMouseEnter = true;\n      this.highlightItem();\n    }\n  }, {\n    key: \"containerBottomIsNotVisible\",\n    value: function containerBottomIsNotVisible(topPos, containerPos) {\n      var mentionContainerBottom = topPos + this.mentionContainer.offsetHeight + containerPos.top;\n      return mentionContainerBottom > window.pageYOffset + window.innerHeight;\n    }\n  }, {\n    key: \"containerRightIsNotVisible\",\n    value: function containerRightIsNotVisible(leftPos, containerPos) {\n      if (this.options.fixMentionsToQuill) {\n        return false;\n      }\n\n      var rightPos = leftPos + this.mentionContainer.offsetWidth + containerPos.left;\n      var browserWidth = window.pageXOffset + document.documentElement.clientWidth;\n      return rightPos > browserWidth;\n    }\n  }, {\n    key: \"setIsOpen\",\n    value: function setIsOpen(isOpen) {\n      if (this.isOpen !== isOpen) {\n        if (isOpen) {\n          this.options.onOpen();\n        } else {\n          this.options.onClose();\n        }\n\n        this.isOpen = isOpen;\n      }\n    }\n  }, {\n    key: \"setMentionContainerPosition\",\n    value: function setMentionContainerPosition() {\n      if (this.options.positioningStrategy === \"fixed\") {\n        this.setMentionContainerPosition_Fixed();\n      } else {\n        this.setMentionContainerPosition_Normal();\n      }\n    }\n  }, {\n    key: \"setMentionContainerPosition_Normal\",\n    value: function setMentionContainerPosition_Normal() {\n      var _this3 = this;\n\n      var containerPos = this.quill.container.getBoundingClientRect();\n      var mentionCharPos = this.quill.getBounds(this.mentionCharPos);\n      var containerHeight = this.mentionContainer.offsetHeight;\n      var topPos = this.options.offsetTop;\n      var leftPos = this.options.offsetLeft; // handle horizontal positioning\n\n      if (this.options.fixMentionsToQuill) {\n        var rightPos = 0;\n        this.mentionContainer.style.right = \"\".concat(rightPos, \"px\");\n      } else {\n        leftPos += mentionCharPos.left;\n      }\n\n      if (this.containerRightIsNotVisible(leftPos, containerPos)) {\n        var containerWidth = this.mentionContainer.offsetWidth + this.options.offsetLeft;\n        var quillWidth = containerPos.width;\n        leftPos = quillWidth - containerWidth;\n      } // handle vertical positioning\n\n\n      if (this.options.defaultMenuOrientation === \"top\") {\n        // Attempt to align the mention container with the top of the quill editor\n        if (this.options.fixMentionsToQuill) {\n          topPos = -1 * (containerHeight + this.options.offsetTop);\n        } else {\n          topPos = mentionCharPos.top - (containerHeight + this.options.offsetTop);\n        } // default to bottom if the top is not visible\n\n\n        if (topPos + containerPos.top <= 0) {\n          var overMentionCharPos = this.options.offsetTop;\n\n          if (this.options.fixMentionsToQuill) {\n            overMentionCharPos += containerPos.height;\n          } else {\n            overMentionCharPos += mentionCharPos.bottom;\n          }\n\n          topPos = overMentionCharPos;\n        }\n      } else {\n        // Attempt to align the mention container with the bottom of the quill editor\n        if (this.options.fixMentionsToQuill) {\n          topPos += containerPos.height;\n        } else {\n          topPos += mentionCharPos.bottom;\n        } // default to the top if the bottom is not visible\n\n\n        if (this.containerBottomIsNotVisible(topPos, containerPos)) {\n          var _overMentionCharPos = this.options.offsetTop * -1;\n\n          if (!this.options.fixMentionsToQuill) {\n            _overMentionCharPos += mentionCharPos.top;\n          }\n\n          topPos = _overMentionCharPos - containerHeight;\n        }\n      }\n\n      if (topPos >= 0) {\n        this.options.mentionContainerClass.split(' ').forEach(function (className) {\n          _this3.mentionContainer.classList.add(\"\".concat(className, \"-bottom\"));\n\n          _this3.mentionContainer.classList.remove(\"\".concat(className, \"-top\"));\n        });\n      } else {\n        this.options.mentionContainerClass.split(' ').forEach(function (className) {\n          _this3.mentionContainer.classList.add(\"\".concat(className, \"-top\"));\n\n          _this3.mentionContainer.classList.remove(\"\".concat(className, \"-bottom\"));\n        });\n      }\n\n      this.mentionContainer.style.top = \"\".concat(topPos, \"px\");\n      this.mentionContainer.style.left = \"\".concat(leftPos, \"px\");\n      this.mentionContainer.style.visibility = \"visible\";\n    }\n  }, {\n    key: \"setMentionContainerPosition_Fixed\",\n    value: function setMentionContainerPosition_Fixed() {\n      var _this4 = this;\n\n      this.mentionContainer.style.position = \"fixed\";\n      this.mentionContainer.style.height = null;\n      var containerPos = this.quill.container.getBoundingClientRect();\n      var mentionCharPos = this.quill.getBounds(this.mentionCharPos);\n      var mentionCharPosAbsolute = {\n        left: containerPos.left + mentionCharPos.left,\n        top: containerPos.top + mentionCharPos.top,\n        width: 0,\n        height: mentionCharPos.height\n      }; //Which rectangle should it be relative to\n\n      var relativeToPos = this.options.fixMentionsToQuill ? containerPos : mentionCharPosAbsolute;\n      var topPos = this.options.offsetTop;\n      var leftPos = this.options.offsetLeft; // handle horizontal positioning\n\n      if (this.options.fixMentionsToQuill) {\n        var rightPos = relativeToPos.right;\n        this.mentionContainer.style.right = \"\".concat(rightPos, \"px\");\n      } else {\n        leftPos += relativeToPos.left; //if its off the righ edge, push it back\n\n        if (leftPos + this.mentionContainer.offsetWidth > document.documentElement.clientWidth) {\n          leftPos -= leftPos + this.mentionContainer.offsetWidth - document.documentElement.clientWidth;\n        }\n      }\n\n      var availableSpaceTop = relativeToPos.top;\n      var availableSpaceBottom = document.documentElement.clientHeight - (relativeToPos.top + relativeToPos.height);\n      var fitsBottom = this.mentionContainer.offsetHeight <= availableSpaceBottom;\n      var fitsTop = this.mentionContainer.offsetHeight <= availableSpaceTop;\n      var placement;\n\n      if (this.options.defaultMenuOrientation === \"top\" && fitsTop) {\n        placement = \"top\";\n      } else if (this.options.defaultMenuOrientation === \"bottom\" && fitsBottom) {\n        placement = \"bottom\";\n      } else {\n        //it doesnt fit either so put it where there's the most space\n        placement = availableSpaceBottom > availableSpaceTop ? \"bottom\" : \"top\";\n      }\n\n      if (placement === \"bottom\") {\n        topPos = relativeToPos.top + relativeToPos.height;\n\n        if (!fitsBottom) {\n          //shrink it to fit\n          //3 is a bit of a fudge factor so it doesnt touch the edge of the screen\n          this.mentionContainer.style.height = availableSpaceBottom - 3 + \"px\";\n        }\n\n        this.options.mentionContainerClass.split(\" \").forEach(function (className) {\n          _this4.mentionContainer.classList.add(\"\".concat(className, \"-bottom\"));\n\n          _this4.mentionContainer.classList.remove(\"\".concat(className, \"-top\"));\n        });\n      } else {\n        topPos = relativeToPos.top - this.mentionContainer.offsetHeight;\n\n        if (!fitsTop) {\n          //shrink it to fit\n          //3 is a bit of a fudge factor so it doesnt touch the edge of the screen\n          this.mentionContainer.style.height = availableSpaceTop - 3 + \"px\";\n          topPos = 3;\n        }\n\n        this.options.mentionContainerClass.split(\" \").forEach(function (className) {\n          _this4.mentionContainer.classList.add(\"\".concat(className, \"-top\"));\n\n          _this4.mentionContainer.classList.remove(\"\".concat(className, \"-bottom\"));\n        });\n      }\n\n      this.mentionContainer.style.top = \"\".concat(topPos, \"px\");\n      this.mentionContainer.style.left = \"\".concat(leftPos, \"px\");\n      this.mentionContainer.style.visibility = \"visible\";\n    }\n  }, {\n    key: \"getTextBeforeCursor\",\n    value: function getTextBeforeCursor() {\n      var startPos = Math.max(0, this.cursorPos - this.options.maxChars);\n      var textBeforeCursorPos = this.quill.getText(startPos, this.cursorPos - startPos);\n      return textBeforeCursorPos;\n    }\n  }, {\n    key: \"onSomethingChange\",\n    value: function onSomethingChange() {\n      var _this5 = this;\n\n      var range = this.quill.getSelection();\n      if (range == null) return;\n      this.cursorPos = range.index;\n      var textBeforeCursor = this.getTextBeforeCursor();\n\n      var _getMentionCharIndex = getMentionCharIndex(textBeforeCursor, this.options.mentionDenotationChars),\n          mentionChar = _getMentionCharIndex.mentionChar,\n          mentionCharIndex = _getMentionCharIndex.mentionCharIndex;\n\n      if (hasValidMentionCharIndex(mentionCharIndex, textBeforeCursor, this.options.isolateCharacter)) {\n        var mentionCharPos = this.cursorPos - (textBeforeCursor.length - mentionCharIndex);\n        this.mentionCharPos = mentionCharPos;\n        var textAfter = textBeforeCursor.substring(mentionCharIndex + mentionChar.length);\n\n        if (textAfter.length >= this.options.minChars && hasValidChars(textAfter, this.getAllowedCharsRegex(mentionChar))) {\n          if (this.existingSourceExecutionToken) {\n            this.existingSourceExecutionToken.abandoned = true;\n          }\n\n          this.renderLoading();\n          var sourceRequestToken = {\n            abandoned: false\n          };\n          this.existingSourceExecutionToken = sourceRequestToken;\n          this.options.source(textAfter, function (data, searchTerm) {\n            if (sourceRequestToken.abandoned) {\n              return;\n            }\n\n            _this5.existingSourceExecutionToken = null;\n\n            _this5.renderList(mentionChar, data, searchTerm);\n          }, mentionChar);\n        } else {\n          if (this.existingSourceExecutionToken) {\n            this.existingSourceExecutionToken.abandoned = true;\n          }\n\n          this.hideMentionList();\n        }\n      } else {\n        if (this.existingSourceExecutionToken) {\n          this.existingSourceExecutionToken.abandoned = true;\n        }\n\n        this.hideMentionList();\n      }\n    }\n  }, {\n    key: \"getAllowedCharsRegex\",\n    value: function getAllowedCharsRegex(denotationChar) {\n      if (this.options.allowedChars instanceof RegExp) {\n        return this.options.allowedChars;\n      } else {\n        return this.options.allowedChars(denotationChar);\n      }\n    }\n  }, {\n    key: \"onTextChange\",\n    value: function onTextChange(delta, oldDelta, source) {\n      if (source === \"user\") {\n        this.onSomethingChange();\n      }\n    }\n  }, {\n    key: \"onSelectionChange\",\n    value: function onSelectionChange(range) {\n      if (range && range.length === 0) {\n        this.onSomethingChange();\n      } else {\n        this.hideMentionList();\n      }\n    }\n  }, {\n    key: \"openMenu\",\n    value: function openMenu(denotationChar) {\n      var selection = this.quill.getSelection(true);\n      this.quill.insertText(selection.index, denotationChar);\n      this.quill.blur();\n      this.quill.focus();\n    }\n  }]);\n\n  return Mention;\n}();\n\nQuill.register(\"modules/mention\", Mention);\n\nexport { Mention as default };\n","/*! @license DOMPurify 3.0.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.3/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DOMPurify = factory());\n})(this, (function () { 'use strict';\n\n  const {\n    entries,\n    setPrototypeOf,\n    isFrozen,\n    getPrototypeOf,\n    getOwnPropertyDescriptor\n  } = Object;\n  let {\n    freeze,\n    seal,\n    create\n  } = Object; // eslint-disable-line import/no-mutable-exports\n\n  let {\n    apply,\n    construct\n  } = typeof Reflect !== 'undefined' && Reflect;\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new Func(...args);\n    };\n  }\n\n  const arrayForEach = unapply(Array.prototype.forEach);\n  const arrayPop = unapply(Array.prototype.pop);\n  const arrayPush = unapply(Array.prototype.push);\n  const stringToLowerCase = unapply(String.prototype.toLowerCase);\n  const stringToString = unapply(String.prototype.toString);\n  const stringMatch = unapply(String.prototype.match);\n  const stringReplace = unapply(String.prototype.replace);\n  const stringIndexOf = unapply(String.prototype.indexOf);\n  const stringTrim = unapply(String.prototype.trim);\n  const regExpTest = unapply(RegExp.prototype.test);\n  const typeErrorCreate = unconstruct(TypeError);\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n  /* Add properties to a lookup table */\n\n  function addToSet(set, array, transformCaseFunc) {\n    var _transformCaseFunc;\n\n    transformCaseFunc = (_transformCaseFunc = transformCaseFunc) !== null && _transformCaseFunc !== void 0 ? _transformCaseFunc : stringToLowerCase;\n\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    let l = array.length;\n\n    while (l--) {\n      let element = array[l];\n\n      if (typeof element === 'string') {\n        const lcElement = transformCaseFunc(element);\n\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n  /* Shallow clone an object */\n\n  function clone(object) {\n    const newObject = create(null);\n\n    for (const [property, value] of entries(object)) {\n      newObject[property] = value;\n    }\n\n    return newObject;\n  }\n  /* This method automatically checks if the prop is function\n   * or getter and behaves accordingly. */\n\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      const desc = getOwnPropertyDescriptor(object, prop);\n\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n\n      object = getPrototypeOf(object);\n    }\n\n    function fallbackValue(element) {\n      console.warn('fallback value for', element);\n      return null;\n    }\n\n    return fallbackValue;\n  }\n\n  const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']); // SVG\n\n  const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']); // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n\n  const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']); // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n\n  const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  const text = freeze(['#text']);\n\n  const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n  const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n\n  const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n  const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\n  const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n\n  const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n\n  const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n  const DOCTYPE_NAME = seal(/^html$/i);\n\n  var EXPRESSIONS = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MUSTACHE_EXPR: MUSTACHE_EXPR,\n    ERB_EXPR: ERB_EXPR,\n    TMPLIT_EXPR: TMPLIT_EXPR,\n    DATA_ATTR: DATA_ATTR,\n    ARIA_ATTR: ARIA_ATTR,\n    IS_ALLOWED_URI: IS_ALLOWED_URI,\n    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE: ATTR_WHITESPACE,\n    DOCTYPE_NAME: DOCTYPE_NAME\n  });\n\n  const getGlobal = () => typeof window === 'undefined' ? null : window;\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {HTMLScriptElement} purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported or creating the policy failed).\n   */\n\n\n  const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n    if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    } // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n\n\n    let suffix = null;\n    const ATTR_NAME = 'data-tt-policy-suffix';\n\n    if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n      suffix = purifyHostElement.getAttribute(ATTR_NAME);\n    }\n\n    const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML(html) {\n          return html;\n        },\n\n        createScriptURL(scriptUrl) {\n          return scriptUrl;\n        }\n\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    const DOMPurify = root => createDOMPurify(root);\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n\n\n    DOMPurify.version = '3.0.3';\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n\n    const originalDocument = window.document;\n    const currentScript = originalDocument.currentScript;\n    let {\n      document\n    } = window;\n    const {\n      DocumentFragment,\n      HTMLTemplateElement,\n      Node,\n      Element,\n      NodeFilter,\n      NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n      HTMLFormElement,\n      DOMParser,\n      trustedTypes\n    } = window;\n    const ElementPrototype = Element.prototype;\n    const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    const getParentNode = lookupGetter(ElementPrototype, 'parentNode'); // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n\n    if (typeof HTMLTemplateElement === 'function') {\n      const template = document.createElement('template');\n\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    let trustedTypesPolicy;\n    let emptyHTML = '';\n    const {\n      implementation,\n      createNodeIterator,\n      createDocumentFragment,\n      getElementsByTagName\n    } = document;\n    const {\n      importNode\n    } = originalDocument;\n    let hooks = {};\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n\n    DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n    const {\n      MUSTACHE_EXPR,\n      ERB_EXPR,\n      TMPLIT_EXPR,\n      DATA_ATTR,\n      ARIA_ATTR,\n      IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE\n    } = EXPRESSIONS;\n    let {\n      IS_ALLOWED_URI: IS_ALLOWED_URI$1\n    } = EXPRESSIONS;\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    let ALLOWED_TAGS = null;\n    const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n    /* Allowed attribute names */\n\n    let ALLOWED_ATTR = null;\n    const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n    /*\n     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */\n\n    let CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n\n    let FORBID_TAGS = null;\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n\n    let FORBID_ATTR = null;\n    /* Decide if ARIA attributes are okay */\n\n    let ALLOW_ARIA_ATTR = true;\n    /* Decide if custom data attributes are okay */\n\n    let ALLOW_DATA_ATTR = true;\n    /* Decide if unknown protocols are okay */\n\n    let ALLOW_UNKNOWN_PROTOCOLS = false;\n    /* Decide if self-closing tags in attributes are allowed.\n     * Usually removed due to a mXSS issue in jQuery 3.0 */\n\n    let ALLOW_SELF_CLOSE_IN_ATTR = true;\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n\n    let SAFE_FOR_TEMPLATES = false;\n    /* Decide if document with <html>... should be returned */\n\n    let WHOLE_DOCUMENT = false;\n    /* Track whether config is already set on this instance of DOMPurify. */\n\n    let SET_CONFIG = false;\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n\n    let FORCE_BODY = false;\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n\n    let RETURN_DOM = false;\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n\n    let RETURN_DOM_FRAGMENT = false;\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n\n    let RETURN_TRUSTED_TYPE = false;\n    /* Output should be free from DOM clobbering attacks?\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n     */\n\n    let SANITIZE_DOM = true;\n    /* Achieve full DOM Clobbering protection by isolating the namespace of named\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n     *\n     * HTML/DOM spec rules that enable DOM Clobbering:\n     *   - Named Access on Window (§7.3.3)\n     *   - DOM Tree Accessors (§3.1.5)\n     *   - Form Element Parent-Child Relations (§4.10.3)\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n     *   - HTMLCollection (§4.2.10.2)\n     *\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\n     * with a constant string, i.e., `user-content-`\n     */\n\n    let SANITIZE_NAMED_PROPS = false;\n    const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n    /* Keep element content when removing element? */\n\n    let KEEP_CONTENT = true;\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n\n    let IN_PLACE = false;\n    /* Allow usage of profiles like html, svg and mathMl */\n\n    let USE_PROFILES = {};\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n\n    let FORBID_CONTENTS = null;\n    const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n    /* Tags that are safe for data: URIs */\n\n    let DATA_URI_TAGS = null;\n    const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n    /* Attributes safe for values like \"javascript:\" */\n\n    let URI_SAFE_ATTRIBUTES = null;\n    const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n    const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n\n    let NAMESPACE = HTML_NAMESPACE;\n    let IS_EMPTY_INPUT = false;\n    /* Allowed XHTML+XML namespaces */\n\n    let ALLOWED_NAMESPACES = null;\n    const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n    /* Parsing of strict XHTML documents */\n\n    let PARSER_MEDIA_TYPE;\n    const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    let transformCaseFunc;\n    /* Keep a reference to config to pass to hooks */\n\n    let CONFIG = null;\n    /* Ideally, do not touch anything below this line */\n\n    /* ______________________________________________ */\n\n    const formElement = document.createElement('form');\n\n    const isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n\n\n    const _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n      /* Shield configuration object from tampering */\n\n\n      if (!cfg || typeof cfg !== 'object') {\n        cfg = {};\n      }\n      /* Shield configuration object from prototype pollution */\n\n\n      cfg = clone(cfg);\n      PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE; // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n      /* Set configuration parameters */\n\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n      ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n      cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n      cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n\n      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n\n      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n      /* Parse profile info */\n\n\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, [...text]);\n        ALLOWED_ATTR = [];\n\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html$1);\n          addToSet(ALLOWED_ATTR, html);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg$1);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl$1);\n          addToSet(ALLOWED_ATTR, mathMl);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n      /* Merge configuration parameters */\n\n\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n      }\n\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n      }\n      /* Add #text in case KEEP_CONTENT is set to true */\n\n\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n\n\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n\n\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n\n      if (cfg.TRUSTED_TYPES_POLICY) {\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n        }\n\n        if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n          throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n        } // Overwrite existing TrustedTypes policy.\n\n\n        trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY; // Sign local variables required by `sanitize`.\n\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      } else {\n        // Uninitialized policy, attempt to initialize the internal dompurify policy.\n        if (trustedTypesPolicy === undefined) {\n          trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n        } // If creating the internal policy succeeded sign internal variables.\n\n\n        if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n          emptyHTML = trustedTypesPolicy.createHTML('');\n        }\n      } // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n\n\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']); // Certain elements are allowed in both SVG and HTML\n    // namespace. We need to specify them explicitly\n    // so that they don't get erroneously deleted from\n    // HTML namespace.\n\n    const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n\n    const ALL_SVG_TAGS = addToSet({}, svg$1);\n    addToSet(ALL_SVG_TAGS, svgFilters);\n    addToSet(ALL_SVG_TAGS, svgDisallowed);\n    const ALL_MATHML_TAGS = addToSet({}, mathMl$1);\n    addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n    /**\n     *\n     *\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n\n    const _checkValidNamespace = function _checkValidNamespace(element) {\n      let parent = getParentNode(element); // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: NAMESPACE,\n          tagName: 'template'\n        };\n      }\n\n      const tagName = stringToLowerCase(element.tagName);\n      const parentTagName = stringToLowerCase(parent.tagName);\n\n      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return false;\n      }\n\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        } // The only way to switch from MathML to SVG is via`\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n\n\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        } // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n\n\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        } // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n\n\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        } // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n\n\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        } // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n\n\n        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n      } // For XHTML and XML documents that support custom namespaces\n\n\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return true;\n      } // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n      // Return false just in case.\n\n\n      return false;\n    };\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n\n\n    const _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        node.remove();\n      }\n    };\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n\n\n    const _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name); // We void attribute values for unremovable \"is\"\" attributes\n\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n\n\n    const _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      let doc;\n      let leadingWhitespace;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n\n      const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n      /* Use createHTMLDocument in case DOMParser is not available */\n\n\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n        } catch (_) {// Syntax error if dirtyPayload is invalid xml\n        }\n      }\n\n      const body = doc.body || doc.documentElement;\n\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n      /* Work on whole document or just its body */\n\n\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n    /**\n     * _createIterator\n     *\n     * @param  {Document} root document/fragment to create iterator for\n     * @return {Iterator} iterator instance\n     */\n\n\n    const _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n    };\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n\n\n    const _isClobbered = function _isClobbered(elm) {\n      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n    };\n    /**\n     * _isNode\n     *\n     * @param  {Node} obj object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n\n\n    const _isNode = function _isNode(object) {\n      return typeof Node === 'object' ? object instanceof Node : object && typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n\n\n    const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], hook => {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n\n\n    const _sanitizeElements = function _sanitizeElements(currentNode) {\n      let content;\n      /* Execute a hook if present */\n\n      _executeHook('beforeSanitizeElements', currentNode, null);\n      /* Check if element is clobbered or can clobber */\n\n\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Now let's check the element's type and name */\n\n\n      const tagName = transformCaseFunc(currentNode.nodeName);\n      /* Execute a hook if present */\n\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n      /* Detect mXSS attempts abusing namespace confusion */\n\n\n      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Remove element if anything forbids its presence */\n\n\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Check if we have a custom element to handle */\n        if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\n        }\n        /* Keep content except for bad-listed elements */\n\n\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n          if (childNodes && parentNode) {\n            const childCount = childNodes.length;\n\n            for (let i = childCount - 1; i >= 0; --i) {\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n            }\n          }\n        }\n\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Check whether element has a valid namespace */\n\n\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Make sure that older browsers don't get noscript mXSS */\n\n\n      if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Sanitize element content to be template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR, ' ');\n        content = stringReplace(content, ERB_EXPR, ' ');\n        content = stringReplace(content, TMPLIT_EXPR, ' ');\n\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n\n\n    const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n\n\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if ( // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n        return false;\n      } else ;\n\n      return true;\n    };\n    /**\n     * _basicCustomElementCheck\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     * @param {string} tagName name of the tag of the node to sanitize\n     */\n\n\n    const _basicCustomElementTest = function _basicCustomElementTest(tagName) {\n      return tagName.indexOf('-') > 0;\n    };\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n\n\n    const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      let attr;\n      let value;\n      let lcName;\n      let l;\n      /* Execute a hook if present */\n\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      const {\n        attributes\n      } = currentNode;\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      const hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n      /* Go backwards over all attributes; safely remove bad ones */\n\n      while (l--) {\n        attr = attributes[l];\n        const {\n          name,\n          namespaceURI\n        } = attr;\n        value = name === 'value' ? attr.value : stringTrim(attr.value);\n        lcName = transformCaseFunc(name);\n        /* Execute a hook if present */\n\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n        /* Remove attribute */\n\n\n        _removeAttribute(name, currentNode);\n        /* Did the hooks approve of the attribute? */\n\n\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n        /* Work around a security issue in jQuery 3.0 */\n\n\n        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n\n          continue;\n        }\n        /* Sanitize attribute content to be template-safe */\n\n\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR, ' ');\n          value = stringReplace(value, ERB_EXPR, ' ');\n          value = stringReplace(value, TMPLIT_EXPR, ' ');\n        }\n        /* Is `value` valid for this attribute? */\n\n\n        const lcTag = transformCaseFunc(currentNode.nodeName);\n\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n        /* Full DOM Clobbering protection via namespace isolation,\n         * Prefix id and name attributes with `user-content-`\n         */\n\n\n        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n          // Remove the attribute with this value\n          _removeAttribute(name, currentNode); // Prefix the value and later re-create the attribute with the sanitized value\n\n\n          value = SANITIZE_NAMED_PROPS_PREFIX + value;\n        }\n        /* Handle attributes that require Trusted Types */\n\n\n        if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n          if (namespaceURI) ; else {\n            switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n              case 'TrustedHTML':\n                {\n                  value = trustedTypesPolicy.createHTML(value);\n                  break;\n                }\n\n              case 'TrustedScriptURL':\n                {\n                  value = trustedTypesPolicy.createScriptURL(value);\n                  break;\n                }\n            }\n          }\n        }\n        /* Handle invalid data-* attribute set by try-catching it */\n\n\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n\n\n    const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      let shadowNode;\n\n      const shadowIterator = _createIterator(fragment);\n      /* Execute a hook if present */\n\n\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n        /* Sanitize tags and elements */\n\n\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n        /* Deep shadow DOM detected */\n\n\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n        /* Check attributes, sanitize if necessary */\n\n\n        _sanitizeAttributes(shadowNode);\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    // eslint-disable-next-line complexity\n\n\n    DOMPurify.sanitize = function (dirty) {\n      let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let body;\n      let importedNode;\n      let currentNode;\n      let returnNode;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n\n      IS_EMPTY_INPUT = !dirty;\n\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n      /* Stringify, in case dirty is an object */\n\n\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        if (typeof dirty.toString === 'function') {\n          dirty = dirty.toString();\n\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        } else {\n          throw typeErrorCreate('toString is not a function');\n        }\n      }\n      /* Return dirty HTML if DOMPurify cannot run */\n\n\n      if (!DOMPurify.isSupported) {\n        return dirty;\n      }\n      /* Assign config vars */\n\n\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n      /* Clean up removed elements */\n\n\n      DOMPurify.removed = [];\n      /* Check if dirty is correctly typed for IN_PLACE */\n\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) {\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\n        if (dirty.nodeName) {\n          const tagName = transformCaseFunc(dirty.nodeName);\n\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n          }\n        }\n      } else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n        /* Initialize the document to work on */\n\n\n        body = _initDocument(dirty);\n        /* Check we have a DOM node from the data */\n\n        if (!body) {\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n        }\n      }\n      /* Remove first element node (ours) if FORCE_BODY is set */\n\n\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n      /* Get node iterator */\n\n\n      const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n      /* Now start iterating over the created document */\n\n\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n        /* Shadow DOM detected, sanitize it */\n\n\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n        /* Check attributes, sanitize if necessary */\n\n\n        _sanitizeAttributes(currentNode);\n      }\n      /* If we sanitized `dirty` in-place, return it. */\n\n\n      if (IN_PLACE) {\n        return dirty;\n      }\n      /* Return sanitized string or DOM */\n\n\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n      /* Serialize doctype if allowed */\n\n      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n      }\n      /* Sanitize final string template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n        serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n\n\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n\n      SET_CONFIG = true;\n    };\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n\n\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {string} tag Tag name of containing element.\n     * @param  {string} attr Attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n\n\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      const lcTag = transformCaseFunc(tag);\n      const lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n\n\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     * @return {Function} removed(popped) hook\n     */\n\n\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        return arrayPop(hooks[entryPoint]);\n      }\n    };\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n\n\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     */\n\n\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","/**\n * Assigns (shallow copies) the properties of `src` onto `dest`, if the\n * corresponding property on `dest` === `undefined`.\n *\n * @param {Object} dest The destination object.\n * @param {Object} src The source object.\n * @return {Object} The destination object (`dest`)\n */\nexport function defaults(dest, src) {\n    for (var prop in src) {\n        if (src.hasOwnProperty(prop) && dest[prop] === undefined) {\n            dest[prop] = src[prop];\n        }\n    }\n    return dest;\n}\n/**\n * Truncates the `str` at `len - ellipsisChars.length`, and adds the `ellipsisChars` to the\n * end of the string (by default, two periods: '..'). If the `str` length does not exceed\n * `len`, the string will be returned unchanged.\n *\n * @param {String} str The string to truncate and add an ellipsis to.\n * @param {Number} truncateLen The length to truncate the string at.\n * @param {String} [ellipsisChars=...] The ellipsis character(s) to add to the end of `str`\n *   when truncated. Defaults to '...'\n */\nexport function ellipsis(str, truncateLen, ellipsisChars) {\n    var ellipsisLength;\n    if (str.length > truncateLen) {\n        if (ellipsisChars == null) {\n            ellipsisChars = '&hellip;';\n            ellipsisLength = 3;\n        }\n        else {\n            ellipsisLength = ellipsisChars.length;\n        }\n        str = str.substring(0, truncateLen - ellipsisLength) + ellipsisChars;\n    }\n    return str;\n}\n/**\n * Supports `Array.prototype.indexOf()` functionality for old IE (IE8 and below).\n *\n * @param {Array} arr The array to find an element of.\n * @param {*} element The element to find in the array, and return the index of.\n * @return {Number} The index of the `element`, or -1 if it was not found.\n */\nexport function indexOf(arr, element) {\n    // @ts-ignore - As far as TypeScript is concerned, this method will always\n    // exist (lowest \"lib\" in TS is \"ES5\"). Hence we need to ignore this error\n    // to support IE8 which only implements ES3 and doesn't have this method\n    if (Array.prototype.indexOf) {\n        return arr.indexOf(element);\n    }\n    else {\n        for (var i = 0, len = arr.length; i < len; i++) {\n            if (arr[i] === element)\n                return i;\n        }\n        return -1;\n    }\n}\n/**\n * Removes array elements based on a filtering function. Mutates the input\n * array.\n *\n * Using this instead of the ES5 Array.prototype.filter() function, to allow\n * Autolinker compatibility with IE8, and also to prevent creating many new\n * arrays in memory for filtering.\n *\n * @param {Array} arr The array to remove elements from. This array is\n *   mutated.\n * @param {Function} fn A function which should return `true` to\n *   remove an element.\n * @return {Array} The mutated input `arr`.\n */\nexport function remove(arr, fn) {\n    for (var i = arr.length - 1; i >= 0; i--) {\n        if (fn(arr[i]) === true) {\n            arr.splice(i, 1);\n        }\n    }\n}\n/**\n * Performs the functionality of what modern browsers do when `String.prototype.split()` is called\n * with a regular expression that contains capturing parenthesis.\n *\n * For example:\n *\n *     // Modern browsers:\n *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', ',', 'b', ',', 'c' ]\n *\n *     // Old IE (including IE8):\n *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', 'b', 'c' ]\n *\n * This method emulates the functionality of modern browsers for the old IE case.\n *\n * @param {String} str The string to split.\n * @param {RegExp} splitRegex The regular expression to split the input `str` on. The splitting\n *   character(s) will be spliced into the array, as in the \"modern browsers\" example in the\n *   description of this method.\n *   Note #1: the supplied regular expression **must** have the 'g' flag specified.\n *   Note #2: for simplicity's sake, the regular expression does not need\n *   to contain capturing parenthesis - it will be assumed that any match has them.\n * @return {String[]} The split array of strings, with the splitting character(s) included.\n */\nexport function splitAndCapture(str, splitRegex) {\n    if (!splitRegex.global)\n        throw new Error(\"`splitRegex` must have the 'g' flag set\");\n    var result = [], lastIdx = 0, match;\n    while (match = splitRegex.exec(str)) {\n        result.push(str.substring(lastIdx, match.index));\n        result.push(match[0]); // push the splitting char(s)\n        lastIdx = match.index + match[0].length;\n    }\n    result.push(str.substring(lastIdx));\n    return result;\n}\n/**\n * Function that should never be called but is used to check that every\n * enum value is handled using TypeScript's 'never' type.\n */\nexport function throwUnhandledCaseError(theValue) {\n    throw new Error(\"Unhandled case for value: '\".concat(theValue, \"'\"));\n}\n\n//# sourceMappingURL=utils.js.map\n","import { indexOf } from \"./utils\";\n/**\n * @class Autolinker.HtmlTag\n * @extends Object\n *\n * Represents an HTML tag, which can be used to easily build/modify HTML tags programmatically.\n *\n * Autolinker uses this abstraction to create HTML tags, and then write them out as strings. You may also use\n * this class in your code, especially within a {@link Autolinker#replaceFn replaceFn}.\n *\n * ## Examples\n *\n * Example instantiation:\n *\n *     var tag = new Autolinker.HtmlTag( {\n *         tagName : 'a',\n *         attrs   : { 'href': 'http://google.com', 'class': 'external-link' },\n *         innerHtml : 'Google'\n *     } );\n *\n *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"external-link\">Google</a>\n *\n *     // Individual accessor methods\n *     tag.getTagName();                 // 'a'\n *     tag.getAttr( 'href' );            // 'http://google.com'\n *     tag.hasClass( 'external-link' );  // true\n *\n *\n * Using mutator methods (which may be used in combination with instantiation config properties):\n *\n *     var tag = new Autolinker.HtmlTag();\n *     tag.setTagName( 'a' );\n *     tag.setAttr( 'href', 'http://google.com' );\n *     tag.addClass( 'external-link' );\n *     tag.setInnerHtml( 'Google' );\n *\n *     tag.getTagName();                 // 'a'\n *     tag.getAttr( 'href' );            // 'http://google.com'\n *     tag.hasClass( 'external-link' );  // true\n *\n *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"external-link\">Google</a>\n *\n *\n * ## Example use within a {@link Autolinker#replaceFn replaceFn}\n *\n *     var html = Autolinker.link( \"Test google.com\", {\n *         replaceFn : function( match ) {\n *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance, configured with the Match's href and anchor text\n *             tag.setAttr( 'rel', 'nofollow' );\n *\n *             return tag;\n *         }\n *     } );\n *\n *     // generated html:\n *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n *\n *\n * ## Example use with a new tag for the replacement\n *\n *     var html = Autolinker.link( \"Test google.com\", {\n *         replaceFn : function( match ) {\n *             var tag = new Autolinker.HtmlTag( {\n *                 tagName : 'button',\n *                 attrs   : { 'title': 'Load URL: ' + match.getAnchorHref() },\n *                 innerHtml : 'Load URL: ' + match.getAnchorText()\n *             } );\n *\n *             return tag;\n *         }\n *     } );\n *\n *     // generated html:\n *     //   Test <button title=\"Load URL: http://google.com\">Load URL: google.com</button>\n */\nvar HtmlTag = /** @class */ (function () {\n    /**\n     * @method constructor\n     * @param {Object} [cfg] The configuration properties for this class, in an Object (map)\n     */\n    function HtmlTag(cfg) {\n        if (cfg === void 0) { cfg = {}; }\n        /**\n         * @cfg {String} tagName\n         *\n         * The tag name. Ex: 'a', 'button', etc.\n         *\n         * Not required at instantiation time, but should be set using {@link #setTagName} before {@link #toAnchorString}\n         * is executed.\n         */\n        this.tagName = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Object.<String, String>} attrs\n         *\n         * An key/value Object (map) of attributes to create the tag with. The keys are the attribute names, and the\n         * values are the attribute values.\n         */\n        this.attrs = {}; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {String} innerHTML\n         *\n         * The inner HTML for the tag.\n         */\n        this.innerHTML = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @protected\n         * @property {RegExp} whitespaceRegex\n         *\n         * Regular expression used to match whitespace in a string of CSS classes.\n         */\n        this.whitespaceRegex = /\\s+/; // default value just to get the above doc comment in the ES5 output and documentation generator\n        this.tagName = cfg.tagName || '';\n        this.attrs = cfg.attrs || {};\n        this.innerHTML = cfg.innerHtml || cfg.innerHTML || ''; // accept either the camelCased form or the fully capitalized acronym as in the DOM\n    }\n    /**\n     * Sets the tag name that will be used to generate the tag with.\n     *\n     * @param {String} tagName\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    HtmlTag.prototype.setTagName = function (tagName) {\n        this.tagName = tagName;\n        return this;\n    };\n    /**\n     * Retrieves the tag name.\n     *\n     * @return {String}\n     */\n    HtmlTag.prototype.getTagName = function () {\n        return this.tagName || '';\n    };\n    /**\n     * Sets an attribute on the HtmlTag.\n     *\n     * @param {String} attrName The attribute name to set.\n     * @param {String} attrValue The attribute value to set.\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    HtmlTag.prototype.setAttr = function (attrName, attrValue) {\n        var tagAttrs = this.getAttrs();\n        tagAttrs[attrName] = attrValue;\n        return this;\n    };\n    /**\n     * Retrieves an attribute from the HtmlTag. If the attribute does not exist, returns `undefined`.\n     *\n     * @param {String} attrName The attribute name to retrieve.\n     * @return {String} The attribute's value, or `undefined` if it does not exist on the HtmlTag.\n     */\n    HtmlTag.prototype.getAttr = function (attrName) {\n        return this.getAttrs()[attrName];\n    };\n    /**\n     * Sets one or more attributes on the HtmlTag.\n     *\n     * @param {Object.<String, String>} attrs A key/value Object (map) of the attributes to set.\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    HtmlTag.prototype.setAttrs = function (attrs) {\n        Object.assign(this.getAttrs(), attrs);\n        return this;\n    };\n    /**\n     * Retrieves the attributes Object (map) for the HtmlTag.\n     *\n     * @return {Object.<String, String>} A key/value object of the attributes for the HtmlTag.\n     */\n    HtmlTag.prototype.getAttrs = function () {\n        return this.attrs || (this.attrs = {});\n    };\n    /**\n     * Sets the provided `cssClass`, overwriting any current CSS classes on the HtmlTag.\n     *\n     * @param {String} cssClass One or more space-separated CSS classes to set (overwrite).\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    HtmlTag.prototype.setClass = function (cssClass) {\n        return this.setAttr('class', cssClass);\n    };\n    /**\n     * Convenience method to add one or more CSS classes to the HtmlTag. Will not add duplicate CSS classes.\n     *\n     * @param {String} cssClass One or more space-separated CSS classes to add.\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    HtmlTag.prototype.addClass = function (cssClass) {\n        var classAttr = this.getClass(), whitespaceRegex = this.whitespaceRegex, classes = (!classAttr) ? [] : classAttr.split(whitespaceRegex), newClasses = cssClass.split(whitespaceRegex), newClass;\n        while (newClass = newClasses.shift()) {\n            if (indexOf(classes, newClass) === -1) {\n                classes.push(newClass);\n            }\n        }\n        this.getAttrs()['class'] = classes.join(\" \");\n        return this;\n    };\n    /**\n     * Convenience method to remove one or more CSS classes from the HtmlTag.\n     *\n     * @param {String} cssClass One or more space-separated CSS classes to remove.\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    HtmlTag.prototype.removeClass = function (cssClass) {\n        var classAttr = this.getClass(), whitespaceRegex = this.whitespaceRegex, classes = (!classAttr) ? [] : classAttr.split(whitespaceRegex), removeClasses = cssClass.split(whitespaceRegex), removeClass;\n        while (classes.length && (removeClass = removeClasses.shift())) {\n            var idx = indexOf(classes, removeClass);\n            if (idx !== -1) {\n                classes.splice(idx, 1);\n            }\n        }\n        this.getAttrs()['class'] = classes.join(\" \");\n        return this;\n    };\n    /**\n     * Convenience method to retrieve the CSS class(es) for the HtmlTag, which will each be separated by spaces when\n     * there are multiple.\n     *\n     * @return {String}\n     */\n    HtmlTag.prototype.getClass = function () {\n        return this.getAttrs()['class'] || \"\";\n    };\n    /**\n     * Convenience method to check if the tag has a CSS class or not.\n     *\n     * @param {String} cssClass The CSS class to check for.\n     * @return {Boolean} `true` if the HtmlTag has the CSS class, `false` otherwise.\n     */\n    HtmlTag.prototype.hasClass = function (cssClass) {\n        return (' ' + this.getClass() + ' ').indexOf(' ' + cssClass + ' ') !== -1;\n    };\n    /**\n     * Sets the inner HTML for the tag.\n     *\n     * @param {String} html The inner HTML to set.\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    HtmlTag.prototype.setInnerHTML = function (html) {\n        this.innerHTML = html;\n        return this;\n    };\n    /**\n     * Backwards compatibility method name.\n     *\n     * @param {String} html The inner HTML to set.\n     * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n     */\n    HtmlTag.prototype.setInnerHtml = function (html) {\n        return this.setInnerHTML(html);\n    };\n    /**\n     * Retrieves the inner HTML for the tag.\n     *\n     * @return {String}\n     */\n    HtmlTag.prototype.getInnerHTML = function () {\n        return this.innerHTML || \"\";\n    };\n    /**\n     * Backward compatibility method name.\n     *\n     * @return {String}\n     */\n    HtmlTag.prototype.getInnerHtml = function () {\n        return this.getInnerHTML();\n    };\n    /**\n     * Override of superclass method used to generate the HTML string for the tag.\n     *\n     * @return {String}\n     */\n    HtmlTag.prototype.toAnchorString = function () {\n        var tagName = this.getTagName(), attrsStr = this.buildAttrsStr();\n        attrsStr = (attrsStr) ? ' ' + attrsStr : ''; // prepend a space if there are actually attributes\n        return ['<', tagName, attrsStr, '>', this.getInnerHtml(), '</', tagName, '>'].join(\"\");\n    };\n    /**\n     * Support method for {@link #toAnchorString}, returns the string space-separated key=\"value\" pairs, used to populate\n     * the stringified HtmlTag.\n     *\n     * @protected\n     * @return {String} Example return: `attr1=\"value1\" attr2=\"value2\"`\n     */\n    HtmlTag.prototype.buildAttrsStr = function () {\n        if (!this.attrs)\n            return \"\"; // no `attrs` Object (map) has been set, return empty string\n        var attrs = this.getAttrs(), attrsArr = [];\n        for (var prop in attrs) {\n            if (attrs.hasOwnProperty(prop)) {\n                attrsArr.push(prop + '=\"' + attrs[prop] + '\"');\n            }\n        }\n        return attrsArr.join(\" \");\n    };\n    return HtmlTag;\n}());\nexport { HtmlTag };\n\n//# sourceMappingURL=html-tag.js.map\n","import { HtmlTag } from \"./html-tag\";\nimport { truncateSmart } from \"./truncate/truncate-smart\";\nimport { truncateMiddle } from \"./truncate/truncate-middle\";\nimport { truncateEnd } from \"./truncate/truncate-end\";\n/**\n * @protected\n * @class Autolinker.AnchorTagBuilder\n * @extends Object\n *\n * Builds anchor (&lt;a&gt;) tags for the Autolinker utility when a match is\n * found.\n *\n * Normally this class is instantiated, configured, and used internally by an\n * {@link Autolinker} instance, but may actually be used indirectly in a\n * {@link Autolinker#replaceFn replaceFn} to create {@link Autolinker.HtmlTag HtmlTag}\n * instances which may be modified before returning from the\n * {@link Autolinker#replaceFn replaceFn}. For example:\n *\n *     var html = Autolinker.link( \"Test google.com\", {\n *         replaceFn : function( match ) {\n *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance\n *             tag.setAttr( 'rel', 'nofollow' );\n *\n *             return tag;\n *         }\n *     } );\n *\n *     // generated html:\n *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n */\nvar AnchorTagBuilder = /** @class */ (function () {\n    /**\n     * @method constructor\n     * @param {Object} [cfg] The configuration options for the AnchorTagBuilder instance, specified in an Object (map).\n     */\n    function AnchorTagBuilder(cfg) {\n        if (cfg === void 0) { cfg = {}; }\n        /**\n         * @cfg {Boolean} newWindow\n         * @inheritdoc Autolinker#newWindow\n         */\n        this.newWindow = false; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Object} truncate\n         * @inheritdoc Autolinker#truncate\n         */\n        this.truncate = {}; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {String} className\n         * @inheritdoc Autolinker#className\n         */\n        this.className = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n        this.newWindow = cfg.newWindow || false;\n        this.truncate = cfg.truncate || {};\n        this.className = cfg.className || '';\n    }\n    /**\n     * Generates the actual anchor (&lt;a&gt;) tag to use in place of the\n     * matched text, via its `match` object.\n     *\n     * @param {Autolinker.match.Match} match The Match instance to generate an\n     *   anchor tag from.\n     * @return {Autolinker.HtmlTag} The HtmlTag instance for the anchor tag.\n     */\n    AnchorTagBuilder.prototype.build = function (match) {\n        return new HtmlTag({\n            tagName: 'a',\n            attrs: this.createAttrs(match),\n            innerHtml: this.processAnchorText(match.getAnchorText())\n        });\n    };\n    /**\n     * Creates the Object (map) of the HTML attributes for the anchor (&lt;a&gt;)\n     *   tag being generated.\n     *\n     * @protected\n     * @param {Autolinker.match.Match} match The Match instance to generate an\n     *   anchor tag from.\n     * @return {Object} A key/value Object (map) of the anchor tag's attributes.\n     */\n    AnchorTagBuilder.prototype.createAttrs = function (match) {\n        var attrs = {\n            'href': match.getAnchorHref() // we'll always have the `href` attribute\n        };\n        var cssClass = this.createCssClass(match);\n        if (cssClass) {\n            attrs['class'] = cssClass;\n        }\n        if (this.newWindow) {\n            attrs['target'] = \"_blank\";\n            attrs['rel'] = \"noopener noreferrer\"; // Issue #149. See https://mathiasbynens.github.io/rel-noopener/\n        }\n        if (this.truncate) {\n            if (this.truncate.length && this.truncate.length < match.getAnchorText().length) {\n                attrs['title'] = match.getAnchorHref();\n            }\n        }\n        return attrs;\n    };\n    /**\n     * Creates the CSS class that will be used for a given anchor tag, based on\n     * the `matchType` and the {@link #className} config.\n     *\n     * Example returns:\n     *\n     * - \"\"                                      // no {@link #className}\n     * - \"myLink myLink-url\"                     // url match\n     * - \"myLink myLink-email\"                   // email match\n     * - \"myLink myLink-phone\"                   // phone match\n     * - \"myLink myLink-hashtag\"                 // hashtag match\n     * - \"myLink myLink-mention myLink-twitter\"  // mention match with Twitter service\n     *\n     * @protected\n     * @param {Autolinker.match.Match} match The Match instance to generate an\n     *   anchor tag from.\n     * @return {String} The CSS class string for the link. Example return:\n     *   \"myLink myLink-url\". If no {@link #className} was configured, returns\n     *   an empty string.\n     */\n    AnchorTagBuilder.prototype.createCssClass = function (match) {\n        var className = this.className;\n        if (!className) {\n            return \"\";\n        }\n        else {\n            var returnClasses = [className], cssClassSuffixes = match.getCssClassSuffixes();\n            for (var i = 0, len = cssClassSuffixes.length; i < len; i++) {\n                returnClasses.push(className + '-' + cssClassSuffixes[i]);\n            }\n            return returnClasses.join(' ');\n        }\n    };\n    /**\n     * Processes the `anchorText` by truncating the text according to the\n     * {@link #truncate} config.\n     *\n     * @private\n     * @param {String} anchorText The anchor tag's text (i.e. what will be\n     *   displayed).\n     * @return {String} The processed `anchorText`.\n     */\n    AnchorTagBuilder.prototype.processAnchorText = function (anchorText) {\n        anchorText = this.doTruncate(anchorText);\n        return anchorText;\n    };\n    /**\n     * Performs the truncation of the `anchorText` based on the {@link #truncate}\n     * option. If the `anchorText` is longer than the length specified by the\n     * {@link #truncate} option, the truncation is performed based on the\n     * `location` property. See {@link #truncate} for details.\n     *\n     * @private\n     * @param {String} anchorText The anchor tag's text (i.e. what will be\n     *   displayed).\n     * @return {String} The truncated anchor text.\n     */\n    AnchorTagBuilder.prototype.doTruncate = function (anchorText) {\n        var truncate = this.truncate;\n        if (!truncate || !truncate.length)\n            return anchorText;\n        var truncateLength = truncate.length, truncateLocation = truncate.location;\n        if (truncateLocation === 'smart') {\n            return truncateSmart(anchorText, truncateLength);\n        }\n        else if (truncateLocation === 'middle') {\n            return truncateMiddle(anchorText, truncateLength);\n        }\n        else {\n            return truncateEnd(anchorText, truncateLength);\n        }\n    };\n    return AnchorTagBuilder;\n}());\nexport { AnchorTagBuilder };\n\n//# sourceMappingURL=anchor-tag-builder.js.map\n","/**\n * Date: 2015-10-05\n * Author: Kasper Søfren <soefritz@gmail.com> (https://github.com/kafoso)\n *\n * A truncation feature, where the ellipsis will be placed at a section within\n * the URL making it still somewhat human readable.\n *\n * @param {String} url\t\t\t\t\t\t A URL.\n * @param {Number} truncateLen\t\t The maximum length of the truncated output URL string.\n * @param {String} ellipsisChars\t The characters to place within the url, e.g. \"...\".\n * @return {String} The truncated URL.\n */\nexport function truncateSmart(url, truncateLen, ellipsisChars) {\n    var ellipsisLengthBeforeParsing;\n    var ellipsisLength;\n    if (ellipsisChars == null) {\n        ellipsisChars = '&hellip;';\n        ellipsisLength = 3;\n        ellipsisLengthBeforeParsing = 8;\n    }\n    else {\n        ellipsisLength = ellipsisChars.length;\n        ellipsisLengthBeforeParsing = ellipsisChars.length;\n    }\n    var parse_url = function (url) {\n        var urlObj = {};\n        var urlSub = url;\n        var match = urlSub.match(/^([a-z]+):\\/\\//i);\n        if (match) {\n            urlObj.scheme = match[1];\n            urlSub = urlSub.substr(match[0].length);\n        }\n        match = urlSub.match(/^(.*?)(?=(\\?|#|\\/|$))/i);\n        if (match) {\n            urlObj.host = match[1];\n            urlSub = urlSub.substr(match[0].length);\n        }\n        match = urlSub.match(/^\\/(.*?)(?=(\\?|#|$))/i);\n        if (match) {\n            urlObj.path = match[1];\n            urlSub = urlSub.substr(match[0].length);\n        }\n        match = urlSub.match(/^\\?(.*?)(?=(#|$))/i);\n        if (match) {\n            urlObj.query = match[1];\n            urlSub = urlSub.substr(match[0].length);\n        }\n        match = urlSub.match(/^#(.*?)$/i);\n        if (match) {\n            urlObj.fragment = match[1];\n            //urlSub = urlSub.substr(match[0].length);  -- not used. Uncomment if adding another block.\n        }\n        return urlObj;\n    };\n    var buildUrl = function (urlObj) {\n        var url = \"\";\n        if (urlObj.scheme && urlObj.host) {\n            url += urlObj.scheme + \"://\";\n        }\n        if (urlObj.host) {\n            url += urlObj.host;\n        }\n        if (urlObj.path) {\n            url += \"/\" + urlObj.path;\n        }\n        if (urlObj.query) {\n            url += \"?\" + urlObj.query;\n        }\n        if (urlObj.fragment) {\n            url += \"#\" + urlObj.fragment;\n        }\n        return url;\n    };\n    var buildSegment = function (segment, remainingAvailableLength) {\n        var remainingAvailableLengthHalf = remainingAvailableLength / 2, startOffset = Math.ceil(remainingAvailableLengthHalf), endOffset = (-1) * Math.floor(remainingAvailableLengthHalf), end = \"\";\n        if (endOffset < 0) {\n            end = segment.substr(endOffset);\n        }\n        return segment.substr(0, startOffset) + ellipsisChars + end;\n    };\n    if (url.length <= truncateLen) {\n        return url;\n    }\n    var availableLength = truncateLen - ellipsisLength;\n    var urlObj = parse_url(url);\n    // Clean up the URL\n    if (urlObj.query) {\n        var matchQuery = urlObj.query.match(/^(.*?)(?=(\\?|\\#))(.*?)$/i);\n        if (matchQuery) {\n            // Malformed URL; two or more \"?\". Removed any content behind the 2nd.\n            urlObj.query = urlObj.query.substr(0, matchQuery[1].length);\n            url = buildUrl(urlObj);\n        }\n    }\n    if (url.length <= truncateLen) {\n        return url;\n    }\n    if (urlObj.host) {\n        urlObj.host = urlObj.host.replace(/^www\\./, \"\");\n        url = buildUrl(urlObj);\n    }\n    if (url.length <= truncateLen) {\n        return url;\n    }\n    // Process and build the URL\n    var str = \"\";\n    if (urlObj.host) {\n        str += urlObj.host;\n    }\n    if (str.length >= availableLength) {\n        if (urlObj.host.length == truncateLen) {\n            return (urlObj.host.substr(0, (truncateLen - ellipsisLength)) + ellipsisChars).substr(0, availableLength + ellipsisLengthBeforeParsing);\n        }\n        return buildSegment(str, availableLength).substr(0, availableLength + ellipsisLengthBeforeParsing);\n    }\n    var pathAndQuery = \"\";\n    if (urlObj.path) {\n        pathAndQuery += \"/\" + urlObj.path;\n    }\n    if (urlObj.query) {\n        pathAndQuery += \"?\" + urlObj.query;\n    }\n    if (pathAndQuery) {\n        if ((str + pathAndQuery).length >= availableLength) {\n            if ((str + pathAndQuery).length == truncateLen) {\n                return (str + pathAndQuery).substr(0, truncateLen);\n            }\n            var remainingAvailableLength = availableLength - str.length;\n            return (str + buildSegment(pathAndQuery, remainingAvailableLength)).substr(0, availableLength + ellipsisLengthBeforeParsing);\n        }\n        else {\n            str += pathAndQuery;\n        }\n    }\n    if (urlObj.fragment) {\n        var fragment = \"#\" + urlObj.fragment;\n        if ((str + fragment).length >= availableLength) {\n            if ((str + fragment).length == truncateLen) {\n                return (str + fragment).substr(0, truncateLen);\n            }\n            var remainingAvailableLength2 = availableLength - str.length;\n            return (str + buildSegment(fragment, remainingAvailableLength2)).substr(0, availableLength + ellipsisLengthBeforeParsing);\n        }\n        else {\n            str += fragment;\n        }\n    }\n    if (urlObj.scheme && urlObj.host) {\n        var scheme = urlObj.scheme + \"://\";\n        if ((str + scheme).length < availableLength) {\n            return (scheme + str).substr(0, truncateLen);\n        }\n    }\n    if (str.length <= truncateLen) {\n        return str;\n    }\n    var end = \"\";\n    if (availableLength > 0) {\n        end = str.substr((-1) * Math.floor(availableLength / 2));\n    }\n    return (str.substr(0, Math.ceil(availableLength / 2)) + ellipsisChars + end).substr(0, availableLength + ellipsisLengthBeforeParsing);\n}\n\n//# sourceMappingURL=truncate-smart.js.map\n","/**\n * Date: 2015-10-05\n * Author: Kasper Søfren <soefritz@gmail.com> (https://github.com/kafoso)\n *\n * A truncation feature, where the ellipsis will be placed in the dead-center of the URL.\n *\n * @param {String} url             A URL.\n * @param {Number} truncateLen     The maximum length of the truncated output URL string.\n * @param {String} ellipsisChars   The characters to place within the url, e.g. \"..\".\n * @return {String} The truncated URL.\n */\nexport function truncateMiddle(url, truncateLen, ellipsisChars) {\n    if (url.length <= truncateLen) {\n        return url;\n    }\n    var ellipsisLengthBeforeParsing;\n    var ellipsisLength;\n    if (ellipsisChars == null) {\n        ellipsisChars = '&hellip;';\n        ellipsisLengthBeforeParsing = 8;\n        ellipsisLength = 3;\n    }\n    else {\n        ellipsisLengthBeforeParsing = ellipsisChars.length;\n        ellipsisLength = ellipsisChars.length;\n    }\n    var availableLength = truncateLen - ellipsisLength;\n    var end = \"\";\n    if (availableLength > 0) {\n        end = url.substr((-1) * Math.floor(availableLength / 2));\n    }\n    return (url.substr(0, Math.ceil(availableLength / 2)) + ellipsisChars + end).substr(0, availableLength + ellipsisLengthBeforeParsing);\n}\n\n//# sourceMappingURL=truncate-middle.js.map\n","import { ellipsis } from \"../utils\";\n/**\n * A truncation feature where the ellipsis will be placed at the end of the URL.\n *\n * @param {String} anchorText\n * @param {Number} truncateLen The maximum length of the truncated output URL string.\n * @param {String} ellipsisChars The characters to place within the url, e.g. \"..\".\n * @return {String} The truncated URL.\n */\nexport function truncateEnd(anchorText, truncateLen, ellipsisChars) {\n    return ellipsis(anchorText, truncateLen, ellipsisChars);\n}\n\n//# sourceMappingURL=truncate-end.js.map\n","/**\n * @abstract\n * @class Autolinker.match.Match\n *\n * Represents a match found in an input string which should be Autolinked. A Match object is what is provided in a\n * {@link Autolinker#replaceFn replaceFn}, and may be used to query for details about the match.\n *\n * For example:\n *\n *     var input = \"...\";  // string with URLs, Email Addresses, and Mentions (Twitter, Instagram, Soundcloud)\n *\n *     var linkedText = Autolinker.link( input, {\n *         replaceFn : function( match ) {\n *             console.log( \"href = \", match.getAnchorHref() );\n *             console.log( \"text = \", match.getAnchorText() );\n *\n *             switch( match.getType() ) {\n *                 case 'url' :\n *                     console.log( \"url: \", match.getUrl() );\n *\n *                 case 'email' :\n *                     console.log( \"email: \", match.getEmail() );\n *\n *                 case 'mention' :\n *                     console.log( \"mention: \", match.getMention() );\n *             }\n *         }\n *     } );\n *\n * See the {@link Autolinker} class for more details on using the {@link Autolinker#replaceFn replaceFn}.\n */\nvar Match = /** @class */ (function () {\n    /**\n     * @member Autolinker.match.Match\n     * @method constructor\n     * @param {Object} cfg The configuration properties for the Match\n     *   instance, specified in an Object (map).\n     */\n    function Match(cfg) {\n        /**\n         * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)\n         *\n         * Reference to the AnchorTagBuilder instance to use to generate an anchor\n         * tag for the Match.\n         */\n        this.__jsduckDummyDocProp = null; // property used just to get the above doc comment into the ES5 output and documentation generator\n        /**\n         * @cfg {String} matchedText (required)\n         *\n         * The original text that was matched by the {@link Autolinker.matcher.Matcher}.\n         */\n        this.matchedText = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Number} offset (required)\n         *\n         * The offset of where the match was made in the input string.\n         */\n        this.offset = 0; // default value just to get the above doc comment in the ES5 output and documentation generator\n        this.tagBuilder = cfg.tagBuilder;\n        this.matchedText = cfg.matchedText;\n        this.offset = cfg.offset;\n    }\n    /**\n     * Returns the original text that was matched.\n     *\n     * @return {String}\n     */\n    Match.prototype.getMatchedText = function () {\n        return this.matchedText;\n    };\n    /**\n     * Sets the {@link #offset} of where the match was made in the input string.\n     *\n     * A {@link Autolinker.matcher.Matcher} will be fed only HTML text nodes,\n     * and will therefore set an original offset that is relative to the HTML\n     * text node itself. However, we want this offset to be relative to the full\n     * HTML input string, and thus if using {@link Autolinker#parse} (rather\n     * than calling a {@link Autolinker.matcher.Matcher} directly), then this\n     * offset is corrected after the Matcher itself has done its job.\n     *\n     * @param {Number} offset\n     */\n    Match.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Returns the offset of where the match was made in the input string. This\n     * is the 0-based index of the match.\n     *\n     * @return {Number}\n     */\n    Match.prototype.getOffset = function () {\n        return this.offset;\n    };\n    /**\n     * Returns the CSS class suffix(es) for this match.\n     *\n     * A CSS class suffix is appended to the {@link Autolinker#className} in\n     * the {@link Autolinker.AnchorTagBuilder} when a match is translated into\n     * an anchor tag.\n     *\n     * For example, if {@link Autolinker#className} was configured as 'myLink',\n     * and this method returns `[ 'url' ]`, the final class name of the element\n     * will become: 'myLink myLink-url'.\n     *\n     * The match may provide multiple CSS class suffixes to be appended to the\n     * {@link Autolinker#className} in order to facilitate better styling\n     * options for different match criteria. See {@link Autolinker.match.Mention}\n     * for an example.\n     *\n     * By default, this method returns a single array with the match's\n     * {@link #getType type} name, but may be overridden by subclasses.\n     *\n     * @return {String[]}\n     */\n    Match.prototype.getCssClassSuffixes = function () {\n        return [this.getType()];\n    };\n    /**\n     * Builds and returns an {@link Autolinker.HtmlTag} instance based on the\n     * Match.\n     *\n     * This can be used to easily generate anchor tags from matches, and either\n     * return their HTML string, or modify them before doing so.\n     *\n     * Example Usage:\n     *\n     *     var tag = match.buildTag();\n     *     tag.addClass( 'cordova-link' );\n     *     tag.setAttr( 'target', '_system' );\n     *\n     *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"cordova-link\" target=\"_system\">Google</a>\n     *\n     * Example Usage in {@link Autolinker#replaceFn}:\n     *\n     *     var html = Autolinker.link( \"Test google.com\", {\n     *         replaceFn : function( match ) {\n     *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance\n     *             tag.setAttr( 'rel', 'nofollow' );\n     *\n     *             return tag;\n     *         }\n     *     } );\n     *\n     *     // generated html:\n     *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n     */\n    Match.prototype.buildTag = function () {\n        return this.tagBuilder.build(this);\n    };\n    return Match;\n}());\nexport { Match };\n\n//# sourceMappingURL=match.js.map\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { __extends } from \"tslib\";\nimport { Match } from \"./match\";\n/**\n * @class Autolinker.match.Email\n * @extends Autolinker.match.Match\n *\n * Represents a Email match found in an input string which should be Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n */\nvar EmailMatch = /** @class */ (function (_super) {\n    __extends(EmailMatch, _super);\n    /**\n     * @method constructor\n     * @param {Object} cfg The configuration properties for the Match\n     *   instance, specified in an Object (map).\n     */\n    function EmailMatch(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        /**\n         * @cfg {String} email (required)\n         *\n         * The email address that was matched.\n         */\n        _this.email = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n        _this.email = cfg.email;\n        return _this;\n    }\n    /**\n     * Returns a string name for the type of match that this class represents.\n     * For the case of EmailMatch, returns 'email'.\n     *\n     * @return {String}\n     */\n    EmailMatch.prototype.getType = function () {\n        return 'email';\n    };\n    /**\n     * Returns the email address that was matched.\n     *\n     * @return {String}\n     */\n    EmailMatch.prototype.getEmail = function () {\n        return this.email;\n    };\n    /**\n     * Returns the anchor href that should be generated for the match.\n     *\n     * @return {String}\n     */\n    EmailMatch.prototype.getAnchorHref = function () {\n        return 'mailto:' + this.email;\n    };\n    /**\n     * Returns the anchor text that should be generated for the match.\n     *\n     * @return {String}\n     */\n    EmailMatch.prototype.getAnchorText = function () {\n        return this.email;\n    };\n    return EmailMatch;\n}(Match));\nexport { EmailMatch };\n\n//# sourceMappingURL=email-match.js.map\n","import { __extends } from \"tslib\";\nimport { Matcher } from \"./matcher\";\nimport { alphaNumericCharsStr, alphaNumericAndMarksCharsStr, getDomainNameStr } from \"../regex-lib\";\nimport { tldRegex } from \"./tld-regex\";\nimport { UrlMatch } from \"../match/url-match\";\nimport { UrlMatchValidator } from \"./url-match-validator\";\n// RegExp objects which are shared by all instances of UrlMatcher. These are\n// here to avoid re-instantiating the RegExp objects if `Autolinker.link()` is\n// called multiple times, thus instantiating UrlMatcher and its RegExp \n// objects each time (which is very expensive - see https://github.com/gregjacobs/Autolinker.js/issues/314). \n// See descriptions of the properties where they are used for details about them\nvar matcherRegex = (function () {\n    var schemeRegex = /(?:[A-Za-z][-.+A-Za-z0-9]{0,63}:(?![A-Za-z][-.+A-Za-z0-9]{0,63}:\\/\\/)(?!\\d+\\/?)(?:\\/\\/)?)/, // match protocol, allow in format \"http://\" or \"mailto:\". However, do not match the first part of something like 'link:http://www.google.com' (i.e. don't match \"link:\"). Also, make sure we don't interpret 'google.com:8000' as if 'google.com' was a protocol here (i.e. ignore a trailing port number in this regex)\n    wwwRegex = /(?:www\\.)/, // starting with 'www.'\n    // Allow optional path, query string, and hash anchor, not ending in the following characters: \"?!:,.;\"\n    // http://blog.codinghorror.com/the-problem-with-urls/\n    urlSuffixRegex = new RegExp('[/?#](?:[' + alphaNumericAndMarksCharsStr + '\\\\-+&@#/%=~_()|\\'$*\\\\[\\\\]{}?!:,.;^\\u2713]*[' + alphaNumericAndMarksCharsStr + '\\\\-+&@#/%=~_()|\\'$*\\\\[\\\\]{}\\u2713])?');\n    return new RegExp([\n        '(?:',\n        '(',\n        schemeRegex.source,\n        getDomainNameStr(2),\n        ')',\n        '|',\n        '(',\n        '(//)?',\n        wwwRegex.source,\n        getDomainNameStr(6),\n        ')',\n        '|',\n        '(',\n        '(//)?',\n        getDomainNameStr(10) + '\\\\.',\n        tldRegex.source,\n        '(?![-' + alphaNumericCharsStr + '])',\n        ')',\n        ')',\n        '(?::[0-9]+)?',\n        '(?:' + urlSuffixRegex.source + ')?' // match for path, query string, and/or hash anchor - optional\n    ].join(\"\"), 'gi');\n})();\nvar wordCharRegExp = new RegExp('[' + alphaNumericAndMarksCharsStr + ']');\n/**\n * @class Autolinker.matcher.Url\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find URL matches in an input string.\n *\n * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more details.\n */\nvar UrlMatcher = /** @class */ (function (_super) {\n    __extends(UrlMatcher, _super);\n    /**\n     * @method constructor\n     * @param {Object} cfg The configuration properties for the Match instance,\n     *   specified in an Object (map).\n     */\n    function UrlMatcher(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        /**\n         * @cfg {Object} stripPrefix (required)\n         *\n         * The Object form of {@link Autolinker#cfg-stripPrefix}.\n         */\n        _this.stripPrefix = { scheme: true, www: true }; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Boolean} stripTrailingSlash (required)\n         * @inheritdoc Autolinker#stripTrailingSlash\n         */\n        _this.stripTrailingSlash = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Boolean} decodePercentEncoding (required)\n         * @inheritdoc Autolinker#decodePercentEncoding\n         */\n        _this.decodePercentEncoding = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @protected\n         * @property {RegExp} matcherRegex\n         *\n         * The regular expression to match URLs with an optional scheme, port\n         * number, path, query string, and hash anchor.\n         *\n         * Example matches:\n         *\n         *     http://google.com\n         *     www.google.com\n         *     google.com/path/to/file?q1=1&q2=2#myAnchor\n         *\n         *\n         * This regular expression will have the following capturing groups:\n         *\n         * 1.  Group that matches a scheme-prefixed URL (i.e. 'http://google.com').\n         *     This is used to match scheme URLs with just a single word, such as\n         *     'http://localhost', where we won't double check that the domain name\n         *     has at least one dot ('.') in it.\n         * 2.  Group that matches a 'www.' prefixed URL. This is only matched if the\n         *     'www.' text was not prefixed by a scheme (i.e.: not prefixed by\n         *     'http://', 'ftp:', etc.)\n         * 3.  A protocol-relative ('//') match for the case of a 'www.' prefixed\n         *     URL. Will be an empty string if it is not a protocol-relative match.\n         *     We need to know the character before the '//' in order to determine\n         *     if it is a valid match or the // was in a string we don't want to\n         *     auto-link.\n         * 4.  Group that matches a known TLD (top level domain), when a scheme\n         *     or 'www.'-prefixed domain is not matched.\n         * 5.  A protocol-relative ('//') match for the case of a known TLD prefixed\n         *     URL. Will be an empty string if it is not a protocol-relative match.\n         *     See #3 for more info.\n         */\n        _this.matcherRegex = matcherRegex;\n        /**\n         * A regular expression to use to check the character before a protocol-relative\n         * URL match. We don't want to match a protocol-relative URL if it is part\n         * of another word.\n         *\n         * For example, we want to match something like \"Go to: //google.com\",\n         * but we don't want to match something like \"abc//google.com\"\n         *\n         * This regular expression is used to test the character before the '//'.\n         *\n         * @protected\n         * @type {RegExp} wordCharRegExp\n         */\n        _this.wordCharRegExp = wordCharRegExp;\n        _this.stripPrefix = cfg.stripPrefix;\n        _this.stripTrailingSlash = cfg.stripTrailingSlash;\n        _this.decodePercentEncoding = cfg.decodePercentEncoding;\n        return _this;\n    }\n    /**\n     * @inheritdoc\n     */\n    UrlMatcher.prototype.parseMatches = function (text) {\n        var matcherRegex = this.matcherRegex, stripPrefix = this.stripPrefix, stripTrailingSlash = this.stripTrailingSlash, decodePercentEncoding = this.decodePercentEncoding, tagBuilder = this.tagBuilder, matches = [], match;\n        var _loop_1 = function () {\n            var matchStr = match[0], schemeUrlMatch = match[1], wwwUrlMatch = match[4], wwwProtocolRelativeMatch = match[5], \n            //tldUrlMatch = match[ 8 ],  -- not needed at the moment\n            tldProtocolRelativeMatch = match[9], offset = match.index, protocolRelativeMatch = wwwProtocolRelativeMatch || tldProtocolRelativeMatch, prevChar = text.charAt(offset - 1);\n            if (!UrlMatchValidator.isValid(matchStr, schemeUrlMatch)) {\n                return \"continue\";\n            }\n            // If the match is preceded by an '@' character, then it is either\n            // an email address or a username. Skip these types of matches.\n            if (offset > 0 && prevChar === '@') {\n                return \"continue\";\n            }\n            // If it's a protocol-relative '//' match, but the character before the '//'\n            // was a word character (i.e. a letter/number), then we found the '//' in the\n            // middle of another word (such as \"asdf//asdf.com\"). In this case, skip the\n            // match.\n            if (offset > 0 && protocolRelativeMatch && this_1.wordCharRegExp.test(prevChar)) {\n                return \"continue\";\n            }\n            // If the URL ends with a question mark, don't include the question\n            // mark as part of the URL. We'll assume the question mark was the\n            // end of a sentence, such as: \"Going to google.com?\"\n            if (/\\?$/.test(matchStr)) {\n                matchStr = matchStr.substr(0, matchStr.length - 1);\n            }\n            // Handle a closing parenthesis or square bracket at the end of the \n            // match, and exclude it if there is not a matching open parenthesis \n            // or square bracket in the match itself.\n            if (this_1.matchHasUnbalancedClosingParen(matchStr)) {\n                matchStr = matchStr.substr(0, matchStr.length - 1); // remove the trailing \")\"\n            }\n            else {\n                // Handle an invalid character after the TLD\n                var pos = this_1.matchHasInvalidCharAfterTld(matchStr, schemeUrlMatch);\n                if (pos > -1) {\n                    matchStr = matchStr.substr(0, pos); // remove the trailing invalid chars\n                }\n            }\n            // The autolinker accepts many characters in a url's scheme (like `fake://test.com`).\n            // However, in cases where a URL is missing whitespace before an obvious link,\n            // (for example: `nowhitespacehttp://www.test.com`), we only want the match to start\n            // at the http:// part. We will check if the match contains a common scheme and then \n            // shift the match to start from there. \t\t\n            var foundCommonScheme = ['http://', 'https://'].find(function (commonScheme) { return !!schemeUrlMatch && schemeUrlMatch.indexOf(commonScheme) !== -1; });\n            if (foundCommonScheme) {\n                // If we found an overmatched URL, we want to find the index\n                // of where the match should start and shift the match to\n                // start from the beginning of the common scheme\n                var indexOfSchemeStart = matchStr.indexOf(foundCommonScheme);\n                matchStr = matchStr.substr(indexOfSchemeStart);\n                schemeUrlMatch = schemeUrlMatch.substr(indexOfSchemeStart);\n                offset = offset + indexOfSchemeStart;\n            }\n            var urlMatchType = schemeUrlMatch ? 'scheme' : (wwwUrlMatch ? 'www' : 'tld'), protocolUrlMatch = !!schemeUrlMatch;\n            matches.push(new UrlMatch({\n                tagBuilder: tagBuilder,\n                matchedText: matchStr,\n                offset: offset,\n                urlMatchType: urlMatchType,\n                url: matchStr,\n                protocolUrlMatch: protocolUrlMatch,\n                protocolRelativeMatch: !!protocolRelativeMatch,\n                stripPrefix: stripPrefix,\n                stripTrailingSlash: stripTrailingSlash,\n                decodePercentEncoding: decodePercentEncoding,\n            }));\n        };\n        var this_1 = this;\n        while ((match = matcherRegex.exec(text)) !== null) {\n            _loop_1();\n        }\n        return matches;\n    };\n    /**\n     * Determines if a match found has an unmatched closing parenthesis,\n     * square bracket or curly bracket. If so, the symbol will be removed\n     * from the match itself, and appended after the generated anchor tag.\n     *\n     * A match may have an extra closing parenthesis at the end of the match\n     * because the regular expression must include parenthesis for URLs such as\n     * \"wikipedia.com/something_(disambiguation)\", which should be auto-linked.\n     *\n     * However, an extra parenthesis *will* be included when the URL itself is\n     * wrapped in parenthesis, such as in the case of:\n     *     \"(wikipedia.com/something_(disambiguation))\"\n     * In this case, the last closing parenthesis should *not* be part of the\n     * URL itself, and this method will return `true`.\n     *\n     * For square brackets in URLs such as in PHP arrays, the same behavior as\n     * parenthesis discussed above should happen:\n     *     \"[http://www.example.com/foo.php?bar[]=1&bar[]=2&bar[]=3]\"\n     * The closing square bracket should not be part of the URL itself, and this\n     * method will return `true`.\n     *\n     * @protected\n     * @param {String} matchStr The full match string from the {@link #matcherRegex}.\n     * @return {Boolean} `true` if there is an unbalanced closing parenthesis or\n     *   square bracket at the end of the `matchStr`, `false` otherwise.\n     */\n    UrlMatcher.prototype.matchHasUnbalancedClosingParen = function (matchStr) {\n        var endChar = matchStr.charAt(matchStr.length - 1);\n        var startChar;\n        if (endChar === ')') {\n            startChar = '(';\n        }\n        else if (endChar === ']') {\n            startChar = '[';\n        }\n        else if (endChar === '}') {\n            startChar = '{';\n        }\n        else {\n            return false; // not a close parenthesis or square bracket\n        }\n        // Find if there are the same number of open braces as close braces in\n        // the URL string, minus the last character (which we have already \n        // determined to be either ')', ']' or '}'\n        var numOpenBraces = 0;\n        for (var i = 0, len = matchStr.length - 1; i < len; i++) {\n            var char = matchStr.charAt(i);\n            if (char === startChar) {\n                numOpenBraces++;\n            }\n            else if (char === endChar) {\n                numOpenBraces = Math.max(numOpenBraces - 1, 0);\n            }\n        }\n        // If the number of open braces matches the number of close braces in\n        // the URL minus the last character, then the match has *unbalanced*\n        // braces because of the last character. Example of unbalanced braces\n        // from the regex match:\n        //     \"http://example.com?a[]=1]\"\n        if (numOpenBraces === 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Determine if there's an invalid character after the TLD in a URL. Valid\n     * characters after TLD are ':/?#'. Exclude scheme matched URLs from this\n     * check.\n     *\n     * @protected\n     * @param {String} urlMatch The matched URL, if there was one. Will be an\n     *   empty string if the match is not a URL match.\n     * @param {String} schemeUrlMatch The match URL string for a scheme\n     *   match. Ex: 'http://yahoo.com'. This is used to match something like\n     *   'http://localhost', where we won't double check that the domain name\n     *   has at least one '.' in it.\n     * @return {Number} the position where the invalid character was found. If\n     *   no such character was found, returns -1\n     */\n    UrlMatcher.prototype.matchHasInvalidCharAfterTld = function (urlMatch, schemeUrlMatch) {\n        if (!urlMatch) {\n            return -1;\n        }\n        var offset = 0;\n        if (schemeUrlMatch) {\n            offset = urlMatch.indexOf(':');\n            urlMatch = urlMatch.slice(offset);\n        }\n        var re = new RegExp(\"^((.?\\/\\/)?[-.\" + alphaNumericAndMarksCharsStr + \"]*[-\" + alphaNumericAndMarksCharsStr + \"]\\\\.[-\" + alphaNumericAndMarksCharsStr + \"]+)\");\n        var res = re.exec(urlMatch);\n        if (res === null) {\n            return -1;\n        }\n        offset += res[1].length;\n        urlMatch = urlMatch.slice(res[1].length);\n        if (/^[^-.A-Za-z0-9:\\/?#]/.test(urlMatch)) {\n            return offset;\n        }\n        return -1;\n    };\n    return UrlMatcher;\n}(Matcher));\nexport { UrlMatcher };\n\n//# sourceMappingURL=url-matcher.js.map\n","import { __extends } from \"tslib\";\nimport { Match } from \"./match\";\n/**\n * @class Autolinker.match.Hashtag\n * @extends Autolinker.match.Match\n *\n * Represents a Hashtag match found in an input string which should be\n * Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more\n * details.\n */\nvar HashtagMatch = /** @class */ (function (_super) {\n    __extends(HashtagMatch, _super);\n    /**\n     * @method constructor\n     * @param {Object} cfg The configuration properties for the Match\n     *   instance, specified in an Object (map).\n     */\n    function HashtagMatch(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        /**\n         * @cfg {String} serviceName\n         *\n         * The service to point hashtag matches to. See {@link Autolinker#hashtag}\n         * for available values.\n         */\n        _this.serviceName = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {String} hashtag (required)\n         *\n         * The HashtagMatch that was matched, without the '#'.\n         */\n        _this.hashtag = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n        _this.serviceName = cfg.serviceName;\n        _this.hashtag = cfg.hashtag;\n        return _this;\n    }\n    /**\n     * Returns a string name for the type of match that this class represents.\n     * For the case of HashtagMatch, returns 'hashtag'.\n     *\n     * @return {String}\n     */\n    HashtagMatch.prototype.getType = function () {\n        return 'hashtag';\n    };\n    /**\n     * Returns the configured {@link #serviceName} to point the HashtagMatch to.\n     * Ex: 'facebook', 'twitter'.\n     *\n     * @return {String}\n     */\n    HashtagMatch.prototype.getServiceName = function () {\n        return this.serviceName;\n    };\n    /**\n     * Returns the matched hashtag, without the '#' character.\n     *\n     * @return {String}\n     */\n    HashtagMatch.prototype.getHashtag = function () {\n        return this.hashtag;\n    };\n    /**\n     * Returns the anchor href that should be generated for the match.\n     *\n     * @return {String}\n     */\n    HashtagMatch.prototype.getAnchorHref = function () {\n        var serviceName = this.serviceName, hashtag = this.hashtag;\n        switch (serviceName) {\n            case 'twitter':\n                return 'https://twitter.com/hashtag/' + hashtag;\n            case 'facebook':\n                return 'https://www.facebook.com/hashtag/' + hashtag;\n            case 'instagram':\n                return 'https://instagram.com/explore/tags/' + hashtag;\n            case 'tiktok':\n                return 'https://www.tiktok.com/tag/' + hashtag;\n            default: // Shouldn't happen because Autolinker's constructor should block any invalid values, but just in case.\n                throw new Error('Unknown service name to point hashtag to: ' + serviceName);\n        }\n    };\n    /**\n     * Returns the anchor text that should be generated for the match.\n     *\n     * @return {String}\n     */\n    HashtagMatch.prototype.getAnchorText = function () {\n        return '#' + this.hashtag;\n    };\n    return HashtagMatch;\n}(Match));\nexport { HashtagMatch };\n\n//# sourceMappingURL=hashtag-match.js.map\n","import { __extends } from \"tslib\";\nimport { Match } from \"./match\";\n/**\n * @class Autolinker.match.Mention\n * @extends Autolinker.match.Match\n *\n * Represents a Mention match found in an input string which should be Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n */\nvar MentionMatch = /** @class */ (function (_super) {\n    __extends(MentionMatch, _super);\n    /**\n     * @method constructor\n     * @param {Object} cfg The configuration properties for the Match\n     *   instance, specified in an Object (map).\n     */\n    function MentionMatch(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        /**\n         * @cfg {String} serviceName\n         *\n         * The service to point mention matches to. See {@link Autolinker#mention}\n         * for available values.\n         */\n        _this.serviceName = 'twitter'; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {String} mention (required)\n         *\n         * The Mention that was matched, without the '@' character.\n         */\n        _this.mention = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n        _this.mention = cfg.mention;\n        _this.serviceName = cfg.serviceName;\n        return _this;\n    }\n    /**\n     * Returns a string name for the type of match that this class represents.\n     * For the case of MentionMatch, returns 'mention'.\n     *\n     * @return {String}\n     */\n    MentionMatch.prototype.getType = function () {\n        return 'mention';\n    };\n    /**\n     * Returns the mention, without the '@' character.\n     *\n     * @return {String}\n     */\n    MentionMatch.prototype.getMention = function () {\n        return this.mention;\n    };\n    /**\n     * Returns the configured {@link #serviceName} to point the mention to.\n     * Ex: 'instagram', 'twitter', 'soundcloud'.\n     *\n     * @return {String}\n     */\n    MentionMatch.prototype.getServiceName = function () {\n        return this.serviceName;\n    };\n    /**\n     * Returns the anchor href that should be generated for the match.\n     *\n     * @return {String}\n     */\n    MentionMatch.prototype.getAnchorHref = function () {\n        switch (this.serviceName) {\n            case 'twitter':\n                return 'https://twitter.com/' + this.mention;\n            case 'instagram':\n                return 'https://instagram.com/' + this.mention;\n            case 'soundcloud':\n                return 'https://soundcloud.com/' + this.mention;\n            case 'tiktok':\n                return 'https://www.tiktok.com/@' + this.mention;\n            default: // Shouldn't happen because Autolinker's constructor should block any invalid values, but just in case.\n                throw new Error('Unknown service name to point mention to: ' + this.serviceName);\n        }\n    };\n    /**\n     * Returns the anchor text that should be generated for the match.\n     *\n     * @return {String}\n     */\n    MentionMatch.prototype.getAnchorText = function () {\n        return '@' + this.mention;\n    };\n    /**\n     * Returns the CSS class suffixes that should be used on a tag built with\n     * the match. See {@link Autolinker.match.Match#getCssClassSuffixes} for\n     * details.\n     *\n     * @return {String[]}\n     */\n    MentionMatch.prototype.getCssClassSuffixes = function () {\n        var cssClassSuffixes = _super.prototype.getCssClassSuffixes.call(this), serviceName = this.getServiceName();\n        if (serviceName) {\n            cssClassSuffixes.push(serviceName);\n        }\n        return cssClassSuffixes;\n    };\n    return MentionMatch;\n}(Match));\nexport { MentionMatch };\n\n//# sourceMappingURL=mention-match.js.map\n","import { __extends } from \"tslib\";\nimport { Match } from \"./match\";\n/**\n * @class Autolinker.match.Phone\n * @extends Autolinker.match.Match\n *\n * Represents a Phone number match found in an input string which should be\n * Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more\n * details.\n */\nvar PhoneMatch = /** @class */ (function (_super) {\n    __extends(PhoneMatch, _super);\n    /**\n     * @method constructor\n     * @param {Object} cfg The configuration properties for the Match\n     *   instance, specified in an Object (map).\n     */\n    function PhoneMatch(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        /**\n         * @protected\n         * @property {String} number (required)\n         *\n         * The phone number that was matched, without any delimiter characters.\n         *\n         * Note: This is a string to allow for prefixed 0's.\n         */\n        _this.number = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @protected\n         * @property  {Boolean} plusSign (required)\n         *\n         * `true` if the matched phone number started with a '+' sign. We'll include\n         * it in the `tel:` URL if so, as this is needed for international numbers.\n         *\n         * Ex: '+1 (123) 456 7879'\n         */\n        _this.plusSign = false; // default value just to get the above doc comment in the ES5 output and documentation generator\n        _this.number = cfg.number;\n        _this.plusSign = cfg.plusSign;\n        return _this;\n    }\n    /**\n     * Returns a string name for the type of match that this class represents.\n     * For the case of PhoneMatch, returns 'phone'.\n     *\n     * @return {String}\n     */\n    PhoneMatch.prototype.getType = function () {\n        return 'phone';\n    };\n    /**\n     * Returns the phone number that was matched as a string, without any\n     * delimiter characters.\n     *\n     * Note: This is a string to allow for prefixed 0's.\n     *\n     * @return {String}\n     */\n    PhoneMatch.prototype.getPhoneNumber = function () {\n        return this.number;\n    };\n    /**\n     * Alias of {@link #getPhoneNumber}, returns the phone number that was\n     * matched as a string, without any delimiter characters.\n     *\n     * Note: This is a string to allow for prefixed 0's.\n     *\n     * @return {String}\n     */\n    PhoneMatch.prototype.getNumber = function () {\n        return this.getPhoneNumber();\n    };\n    /**\n     * Returns the anchor href that should be generated for the match.\n     *\n     * @return {String}\n     */\n    PhoneMatch.prototype.getAnchorHref = function () {\n        return 'tel:' + (this.plusSign ? '+' : '') + this.number;\n    };\n    /**\n     * Returns the anchor text that should be generated for the match.\n     *\n     * @return {String}\n     */\n    PhoneMatch.prototype.getAnchorText = function () {\n        return this.matchedText;\n    };\n    return PhoneMatch;\n}(Match));\nexport { PhoneMatch };\n\n//# sourceMappingURL=phone-match.js.map\n","import { __extends } from \"tslib\";\nimport { Match } from \"./match\";\n/**\n * @class Autolinker.match.Url\n * @extends Autolinker.match.Match\n *\n * Represents a Url match found in an input string which should be Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n */\nvar UrlMatch = /** @class */ (function (_super) {\n    __extends(UrlMatch, _super);\n    /**\n     * @method constructor\n     * @param {Object} cfg The configuration properties for the Match\n     *   instance, specified in an Object (map).\n     */\n    function UrlMatch(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        /**\n         * @cfg {String} url (required)\n         *\n         * The url that was matched.\n         */\n        _this.url = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {\"scheme\"/\"www\"/\"tld\"} urlMatchType (required)\n         *\n         * The type of URL match that this class represents. This helps to determine\n         * if the match was made in the original text with a prefixed scheme (ex:\n         * 'http://www.google.com'), a prefixed 'www' (ex: 'www.google.com'), or\n         * was matched by a known top-level domain (ex: 'google.com').\n         */\n        _this.urlMatchType = 'scheme'; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Boolean} protocolUrlMatch (required)\n         *\n         * `true` if the URL is a match which already has a protocol (i.e.\n         * 'http://'), `false` if the match was from a 'www' or known TLD match.\n         */\n        _this.protocolUrlMatch = false; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Boolean} protocolRelativeMatch (required)\n         *\n         * `true` if the URL is a protocol-relative match. A protocol-relative match\n         * is a URL that starts with '//', and will be either http:// or https://\n         * based on the protocol that the site is loaded under.\n         */\n        _this.protocolRelativeMatch = false; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Object} stripPrefix (required)\n         *\n         * The Object form of {@link Autolinker#cfg-stripPrefix}.\n         */\n        _this.stripPrefix = { scheme: true, www: true }; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Boolean} stripTrailingSlash (required)\n         * @inheritdoc Autolinker#cfg-stripTrailingSlash\n         */\n        _this.stripTrailingSlash = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Boolean} decodePercentEncoding (required)\n         * @inheritdoc Autolinker#cfg-decodePercentEncoding\n         */\n        _this.decodePercentEncoding = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @private\n         * @property {RegExp} schemePrefixRegex\n         *\n         * A regular expression used to remove the 'http://' or 'https://' from\n         * URLs.\n         */\n        _this.schemePrefixRegex = /^(https?:\\/\\/)?/i;\n        /**\n         * @private\n         * @property {RegExp} wwwPrefixRegex\n         *\n         * A regular expression used to remove the 'www.' from URLs.\n         */\n        _this.wwwPrefixRegex = /^(https?:\\/\\/)?(www\\.)?/i;\n        /**\n         * @private\n         * @property {RegExp} protocolRelativeRegex\n         *\n         * The regular expression used to remove the protocol-relative '//' from the {@link #url} string, for purposes\n         * of {@link #getAnchorText}. A protocol-relative URL is, for example, \"//yahoo.com\"\n         */\n        _this.protocolRelativeRegex = /^\\/\\//;\n        /**\n         * @private\n         * @property {Boolean} protocolPrepended\n         *\n         * Will be set to `true` if the 'http://' protocol has been prepended to the {@link #url} (because the\n         * {@link #url} did not have a protocol)\n         */\n        _this.protocolPrepended = false;\n        _this.urlMatchType = cfg.urlMatchType;\n        _this.url = cfg.url;\n        _this.protocolUrlMatch = cfg.protocolUrlMatch;\n        _this.protocolRelativeMatch = cfg.protocolRelativeMatch;\n        _this.stripPrefix = cfg.stripPrefix;\n        _this.stripTrailingSlash = cfg.stripTrailingSlash;\n        _this.decodePercentEncoding = cfg.decodePercentEncoding;\n        return _this;\n    }\n    /**\n     * Returns a string name for the type of match that this class represents.\n     * For the case of UrlMatch, returns 'url'.\n     *\n     * @return {String}\n     */\n    UrlMatch.prototype.getType = function () {\n        return 'url';\n    };\n    /**\n     * Returns a string name for the type of URL match that this class\n     * represents.\n     *\n     * This helps to determine if the match was made in the original text with a\n     * prefixed scheme (ex: 'http://www.google.com'), a prefixed 'www' (ex:\n     * 'www.google.com'), or was matched by a known top-level domain (ex:\n     * 'google.com').\n     *\n     * @return {\"scheme\"/\"www\"/\"tld\"}\n     */\n    UrlMatch.prototype.getUrlMatchType = function () {\n        return this.urlMatchType;\n    };\n    /**\n     * Returns the url that was matched, assuming the protocol to be 'http://' if the original\n     * match was missing a protocol.\n     *\n     * @return {String}\n     */\n    UrlMatch.prototype.getUrl = function () {\n        var url = this.url;\n        // if the url string doesn't begin with a protocol, assume 'http://'\n        if (!this.protocolRelativeMatch && !this.protocolUrlMatch && !this.protocolPrepended) {\n            url = this.url = 'http://' + url;\n            this.protocolPrepended = true;\n        }\n        return url;\n    };\n    /**\n     * Returns the anchor href that should be generated for the match.\n     *\n     * @return {String}\n     */\n    UrlMatch.prototype.getAnchorHref = function () {\n        var url = this.getUrl();\n        return url.replace(/&amp;/g, '&'); // any &amp;'s in the URL should be converted back to '&' if they were displayed as &amp; in the source html\n    };\n    /**\n     * Returns the anchor text that should be generated for the match.\n     *\n     * @return {String}\n     */\n    UrlMatch.prototype.getAnchorText = function () {\n        var anchorText = this.getMatchedText();\n        if (this.protocolRelativeMatch) {\n            // Strip off any protocol-relative '//' from the anchor text\n            anchorText = this.stripProtocolRelativePrefix(anchorText);\n        }\n        if (this.stripPrefix.scheme) {\n            anchorText = this.stripSchemePrefix(anchorText);\n        }\n        if (this.stripPrefix.www) {\n            anchorText = this.stripWwwPrefix(anchorText);\n        }\n        if (this.stripTrailingSlash) {\n            anchorText = this.removeTrailingSlash(anchorText); // remove trailing slash, if there is one\n        }\n        if (this.decodePercentEncoding) {\n            anchorText = this.removePercentEncoding(anchorText);\n        }\n        return anchorText;\n    };\n    // ---------------------------------------\n    // Utility Functionality\n    /**\n     * Strips the scheme prefix (such as \"http://\" or \"https://\") from the given\n     * `url`.\n     *\n     * @private\n     * @param {String} url The text of the anchor that is being generated, for\n     *   which to strip off the url scheme.\n     * @return {String} The `url`, with the scheme stripped.\n     */\n    UrlMatch.prototype.stripSchemePrefix = function (url) {\n        return url.replace(this.schemePrefixRegex, '');\n    };\n    /**\n     * Strips the 'www' prefix from the given `url`.\n     *\n     * @private\n     * @param {String} url The text of the anchor that is being generated, for\n     *   which to strip off the 'www' if it exists.\n     * @return {String} The `url`, with the 'www' stripped.\n     */\n    UrlMatch.prototype.stripWwwPrefix = function (url) {\n        return url.replace(this.wwwPrefixRegex, '$1'); // leave any scheme ($1), it one exists\n    };\n    /**\n     * Strips any protocol-relative '//' from the anchor text.\n     *\n     * @private\n     * @param {String} text The text of the anchor that is being generated, for which to strip off the\n     *   protocol-relative prefix (such as stripping off \"//\")\n     * @return {String} The `anchorText`, with the protocol-relative prefix stripped.\n     */\n    UrlMatch.prototype.stripProtocolRelativePrefix = function (text) {\n        return text.replace(this.protocolRelativeRegex, '');\n    };\n    /**\n     * Removes any trailing slash from the given `anchorText`, in preparation for the text to be displayed.\n     *\n     * @private\n     * @param {String} anchorText The text of the anchor that is being generated, for which to remove any trailing\n     *   slash ('/') that may exist.\n     * @return {String} The `anchorText`, with the trailing slash removed.\n     */\n    UrlMatch.prototype.removeTrailingSlash = function (anchorText) {\n        if (anchorText.charAt(anchorText.length - 1) === '/') {\n            anchorText = anchorText.slice(0, -1);\n        }\n        return anchorText;\n    };\n    /**\n     * Decodes percent-encoded characters from the given `anchorText`, in\n     * preparation for the text to be displayed.\n     *\n     * @private\n     * @param {String} anchorText The text of the anchor that is being\n     *   generated, for which to decode any percent-encoded characters.\n     * @return {String} The `anchorText`, with the percent-encoded characters\n     *   decoded.\n     */\n    UrlMatch.prototype.removePercentEncoding = function (anchorText) {\n        // First, convert a few of the known % encodings to the corresponding\n        // HTML entities that could accidentally be interpretted as special\n        // HTML characters\n        var preProcessedEntityAnchorText = anchorText\n            .replace(/%22/gi, '&quot;') // \" char\n            .replace(/%26/gi, '&amp;') // & char\n            .replace(/%27/gi, '&#39;') // ' char\n            .replace(/%3C/gi, '&lt;') // < char\n            .replace(/%3E/gi, '&gt;'); // > char\n        try {\n            // Now attempt to decode the rest of the anchor text\n            return decodeURIComponent(preProcessedEntityAnchorText);\n        }\n        catch (e) { // Invalid % escape sequence in the anchor text\n            return preProcessedEntityAnchorText;\n        }\n    };\n    return UrlMatch;\n}(Match));\nexport { UrlMatch };\n\n//# sourceMappingURL=url-match.js.map\n","/**\n * @abstract\n * @class Autolinker.matcher.Matcher\n *\n * An abstract class and interface for individual matchers to find matches in\n * an input string with linkified versions of them.\n *\n * Note that Matchers do not take HTML into account - they must be fed the text\n * nodes of any HTML string, which is handled by {@link Autolinker#parse}.\n */\nvar Matcher = /** @class */ (function () {\n    /**\n     * @method constructor\n     * @param {Object} cfg The configuration properties for the Matcher\n     *   instance, specified in an Object (map).\n     */\n    function Matcher(cfg) {\n        /**\n         * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)\n         *\n         * Reference to the AnchorTagBuilder instance to use to generate HTML tags\n         * for {@link Autolinker.match.Match Matches}.\n         */\n        this.__jsduckDummyDocProp = null; // property used just to get the above doc comment into the ES5 output and documentation generator\n        this.tagBuilder = cfg.tagBuilder;\n    }\n    return Matcher;\n}());\nexport { Matcher };\n\n//# sourceMappingURL=matcher.js.map\n","/*\n * This file builds and stores a library of the common regular expressions used\n * by the Autolinker utility.\n *\n * Other regular expressions may exist ad-hoc, but these are generally the\n * regular expressions that are shared between source files.\n */\n/**\n * Regular expression to match upper and lowercase ASCII letters\n */\nexport var letterRe = /[A-Za-z]/;\n/**\n * Regular expression to match ASCII digits\n */\nexport var digitRe = /[\\d]/;\n/**\n * Regular expression to match everything *except* ASCII digits\n */\nexport var nonDigitRe = /[\\D]/;\n/**\n * Regular expression to match whitespace\n */\nexport var whitespaceRe = /\\s/;\n/**\n * Regular expression to match quote characters\n */\nexport var quoteRe = /['\"]/;\n/**\n * Regular expression to match the range of ASCII control characters (0-31), and\n * the backspace char (127)\n */\nexport var controlCharsRe = /[\\x00-\\x1F\\x7F]/;\n/**\n * The string form of a regular expression that would match all of the\n * alphabetic (\"letter\") chars in the unicode character set when placed in a\n * RegExp character class (`[]`). This includes all international alphabetic\n * characters.\n *\n * These would be the characters matched by unicode regex engines `\\p{L}`\n * escape (\"all letters\").\n *\n * Taken from the XRegExp library: http://xregexp.com/ (thanks @https://github.com/slevithan)\n * Specifically: http://xregexp.com/v/3.2.0/xregexp-all.js, the 'Letter'\n *   regex's bmp\n *\n * VERY IMPORTANT: This set of characters is defined inside of a Regular\n *   Expression literal rather than a string literal to prevent UglifyJS from\n *   compressing the unicode escape sequences into their actual unicode\n *   characters. If Uglify compresses these into the unicode characters\n *   themselves, this results in the error \"Range out of order in character\n *   class\" when these characters are used inside of a Regular Expression\n *   character class (`[]`). See usages of this const. Alternatively, we can set\n *   the UglifyJS option `ascii_only` to true for the build, but that doesn't\n *   help others who are pulling in Autolinker into their own build and running\n *   UglifyJS themselves.\n */\nexport var alphaCharsStr = /A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC/\n    .source; // see note in above variable description\n/**\n * The string form of a regular expression that would match all emoji characters\n * Based on the emoji regex defined in this article: https://thekevinscott.com/emojis-in-javascript/\n */\nexport var emojiStr = /\\u2700-\\u27bf\\udde6-\\uddff\\ud800-\\udbff\\udc00-\\udfff\\ufe0e\\ufe0f\\u0300-\\u036f\\ufe20-\\ufe23\\u20d0-\\u20f0\\ud83c\\udffb-\\udfff\\u200d\\u3299\\u3297\\u303d\\u3030\\u24c2\\ud83c\\udd70-\\udd71\\udd7e-\\udd7f\\udd8e\\udd91-\\udd9a\\udde6-\\uddff\\ude01-\\ude02\\ude1a\\ude2f\\ude32-\\ude3a\\ude50-\\ude51\\u203c\\u2049\\u25aa-\\u25ab\\u25b6\\u25c0\\u25fb-\\u25fe\\u00a9\\u00ae\\u2122\\u2139\\udc04\\u2600-\\u26FF\\u2b05\\u2b06\\u2b07\\u2b1b\\u2b1c\\u2b50\\u2b55\\u231a\\u231b\\u2328\\u23cf\\u23e9-\\u23f3\\u23f8-\\u23fa\\udccf\\u2935\\u2934\\u2190-\\u21ff/\n    .source;\n/**\n * The string form of a regular expression that would match all of the\n * combining mark characters in the unicode character set when placed in a\n * RegExp character class (`[]`).\n *\n * These would be the characters matched by unicode regex engines `\\p{M}`\n * escape (\"all marks\").\n *\n * Taken from the XRegExp library: http://xregexp.com/ (thanks @https://github.com/slevithan)\n * Specifically: http://xregexp.com/v/3.2.0/xregexp-all.js, the 'Mark'\n *   regex's bmp\n *\n * VERY IMPORTANT: This set of characters is defined inside of a Regular\n *   Expression literal rather than a string literal to prevent UglifyJS from\n *   compressing the unicode escape sequences into their actual unicode\n *   characters. If Uglify compresses these into the unicode characters\n *   themselves, this results in the error \"Range out of order in character\n *   class\" when these characters are used inside of a Regular Expression\n *   character class (`[]`). See usages of this const. Alternatively, we can set\n *   the UglifyJS option `ascii_only` to true for the build, but that doesn't\n *   help others who are pulling in Autolinker into their own build and running\n *   UglifyJS themselves.\n */\nexport var marksStr = /\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D4-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u1885\\u1886\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFB-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F/\n    .source; // see note in above variable description\n/**\n * The string form of a regular expression that would match all of the\n * alphabetic (\"letter\") chars, emoji, and combining marks in the unicode character set\n * when placed in a RegExp character class (`[]`). This includes all\n * international alphabetic characters.\n *\n * These would be the characters matched by unicode regex engines `\\p{L}\\p{M}`\n * escapes and emoji characters.\n */\nexport var alphaCharsAndMarksStr = alphaCharsStr + emojiStr + marksStr;\n/**\n * The string form of a regular expression that would match all of the\n * decimal number chars in the unicode character set when placed in a RegExp\n * character class (`[]`).\n *\n * These would be the characters matched by unicode regex engines `\\p{Nd}`\n * escape (\"all decimal numbers\")\n *\n * Taken from the XRegExp library: http://xregexp.com/ (thanks @https://github.com/slevithan)\n * Specifically: http://xregexp.com/v/3.2.0/xregexp-all.js, the 'Decimal_Number'\n *   regex's bmp\n *\n * VERY IMPORTANT: This set of characters is defined inside of a Regular\n *   Expression literal rather than a string literal to prevent UglifyJS from\n *   compressing the unicode escape sequences into their actual unicode\n *   characters. If Uglify compresses these into the unicode characters\n *   themselves, this results in the error \"Range out of order in character\n *   class\" when these characters are used inside of a Regular Expression\n *   character class (`[]`). See usages of this const. Alternatively, we can set\n *   the UglifyJS option `ascii_only` to true for the build, but that doesn't\n *   help others who are pulling in Autolinker into their own build and running\n *   UglifyJS themselves.\n */\nexport var decimalNumbersStr = /0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19/\n    .source; // see note in above variable description\n/**\n * The string form of a regular expression that would match all of the\n * letters and decimal number chars in the unicode character set when placed in\n * a RegExp character class (`[]`).\n *\n * These would be the characters matched by unicode regex engines\n * `[\\p{L}\\p{Nd}]` escape (\"all letters and decimal numbers\")\n */\nexport var alphaNumericCharsStr = alphaCharsAndMarksStr + decimalNumbersStr;\n/**\n * The string form of a regular expression that would match all of the\n * letters, combining marks, and decimal number chars in the unicode character\n * set when placed in a RegExp character class (`[]`).\n *\n * These would be the characters matched by unicode regex engines\n * `[\\p{L}\\p{M}\\p{Nd}]` escape (\"all letters, combining marks, and decimal\n * numbers\")\n */\nexport var alphaNumericAndMarksCharsStr = alphaCharsAndMarksStr + decimalNumbersStr;\n// Simplified IP regular expression\nvar ipStr = '(?:[' + decimalNumbersStr + ']{1,3}\\\\.){3}[' + decimalNumbersStr + ']{1,3}';\n// Protected domain label which do not allow \"-\" character on the beginning and the end of a single label\nvar domainLabelStr = '[' + alphaNumericAndMarksCharsStr + '](?:[' + alphaNumericAndMarksCharsStr + '\\\\-]{0,61}[' + alphaNumericAndMarksCharsStr + '])?';\nvar getDomainLabelStr = function (group) {\n    return '(?=(' + domainLabelStr + '))\\\\' + group;\n};\n/**\n * A function to match domain names of a URL or email address.\n * Ex: 'google', 'yahoo', 'some-other-company', etc.\n */\nexport var getDomainNameStr = function (group) {\n    return '(?:' + getDomainLabelStr(group) + '(?:\\\\.' + getDomainLabelStr(group + 1) + '){0,126}|' + ipStr + ')';\n};\n/**\n * A regular expression to match domain names of a URL or email address.\n * Ex: 'google', 'yahoo', 'some-other-company', etc.\n */\nexport var domainNameRegex = new RegExp('[' + alphaNumericAndMarksCharsStr + '.\\\\-]*[' + alphaNumericAndMarksCharsStr + '\\\\-]');\n/**\n * A regular expression that is simply the character class of the characters\n * that may be used in a domain name, minus the '-' or '.'\n */\nexport var domainNameCharRegex = new RegExp(\"[\".concat(alphaNumericAndMarksCharsStr, \"]\"));\n\n//# sourceMappingURL=regex-lib.js.map\n","// NOTE: THIS IS A GENERATED FILE\n// To update with the latest TLD list, run `npm run update-tld-regex` or `yarn update-tld-regex` (depending on which you have installed)\nexport var tldRegex = /(?:xn--vermgensberatung-pwb|xn--vermgensberater-ctb|xn--clchc0ea0b2g2a9gcd|xn--w4r85el8fhu5dnra|northwesternmutual|travelersinsurance|vermögensberatung|xn--3oq18vl8pn36a|xn--5su34j936bgsg|xn--bck1b9a5dre4c|xn--mgbah1a3hjkrd|xn--mgbai9azgqp6j|xn--mgberp4a5d4ar|xn--xkc2dl3a5ee0h|vermögensberater|xn--fzys8d69uvgm|xn--mgba7c0bbn0a|xn--mgbcpq6gpa1a|xn--xkc2al3hye2a|americanexpress|kerryproperties|sandvikcoromant|xn--i1b6b1a6a2e|xn--kcrx77d1x4a|xn--lgbbat1ad8j|xn--mgba3a4f16a|xn--mgbaakc7dvf|xn--mgbc0a9azcg|xn--nqv7fs00ema|afamilycompany|americanfamily|bananarepublic|cancerresearch|cookingchannel|kerrylogistics|weatherchannel|xn--54b7fta0cc|xn--6qq986b3xl|xn--80aqecdr1a|xn--b4w605ferd|xn--fiq228c5hs|xn--h2breg3eve|xn--jlq480n2rg|xn--jlq61u9w7b|xn--mgba3a3ejt|xn--mgbaam7a8h|xn--mgbayh7gpa|xn--mgbbh1a71e|xn--mgbca7dzdo|xn--mgbi4ecexp|xn--mgbx4cd0ab|xn--rvc1e0am3e|international|lifeinsurance|travelchannel|wolterskluwer|xn--cckwcxetd|xn--eckvdtc9d|xn--fpcrj9c3d|xn--fzc2c9e2c|xn--h2brj9c8c|xn--tiq49xqyj|xn--yfro4i67o|xn--ygbi2ammx|construction|lplfinancial|scholarships|versicherung|xn--3e0b707e|xn--45br5cyl|xn--4dbrk0ce|xn--80adxhks|xn--80asehdb|xn--8y0a063a|xn--gckr3f0f|xn--mgb9awbf|xn--mgbab2bd|xn--mgbgu82a|xn--mgbpl2fh|xn--mgbt3dhd|xn--mk1bu44c|xn--ngbc5azd|xn--ngbe9e0a|xn--ogbpf8fl|xn--qcka1pmc|accountants|barclaycard|blackfriday|blockbuster|bridgestone|calvinklein|contractors|creditunion|engineering|enterprises|foodnetwork|investments|kerryhotels|lamborghini|motorcycles|olayangroup|photography|playstation|productions|progressive|redumbrella|williamhill|xn--11b4c3d|xn--1ck2e1b|xn--1qqw23a|xn--2scrj9c|xn--3bst00m|xn--3ds443g|xn--3hcrj9c|xn--42c2d9a|xn--45brj9c|xn--55qw42g|xn--6frz82g|xn--80ao21a|xn--9krt00a|xn--cck2b3b|xn--czr694b|xn--d1acj3b|xn--efvy88h|xn--fct429k|xn--fjq720a|xn--flw351e|xn--g2xx48c|xn--gecrj9c|xn--gk3at1e|xn--h2brj9c|xn--hxt814e|xn--imr513n|xn--j6w193g|xn--jvr189m|xn--kprw13d|xn--kpry57d|xn--mgbbh1a|xn--mgbtx2b|xn--mix891f|xn--nyqy26a|xn--otu796d|xn--pgbs0dh|xn--q9jyb4c|xn--rhqv96g|xn--rovu88b|xn--s9brj9c|xn--ses554g|xn--t60b56a|xn--vuq861b|xn--w4rs40l|xn--xhq521b|xn--zfr164b|சிங்கப்பூர்|accountant|apartments|associates|basketball|bnpparibas|boehringer|capitalone|consulting|creditcard|cuisinella|eurovision|extraspace|foundation|healthcare|immobilien|industries|management|mitsubishi|nextdirect|properties|protection|prudential|realestate|republican|restaurant|schaeffler|swiftcover|tatamotors|technology|university|vlaanderen|volkswagen|xn--30rr7y|xn--3pxu8k|xn--45q11c|xn--4gbrim|xn--55qx5d|xn--5tzm5g|xn--80aswg|xn--90a3ac|xn--9dbq2a|xn--9et52u|xn--c2br7g|xn--cg4bki|xn--czrs0t|xn--czru2d|xn--fiq64b|xn--fiqs8s|xn--fiqz9s|xn--io0a7i|xn--kput3i|xn--mxtq1m|xn--o3cw4h|xn--pssy2u|xn--q7ce6a|xn--unup4y|xn--wgbh1c|xn--wgbl6a|xn--y9a3aq|accenture|alfaromeo|allfinanz|amsterdam|analytics|aquarelle|barcelona|bloomberg|christmas|community|directory|education|equipment|fairwinds|financial|firestone|fresenius|frontdoor|furniture|goldpoint|hisamitsu|homedepot|homegoods|homesense|institute|insurance|kuokgroup|lancaster|landrover|lifestyle|marketing|marshalls|melbourne|microsoft|panasonic|passagens|pramerica|richardli|scjohnson|shangrila|solutions|statebank|statefarm|stockholm|travelers|vacations|xn--90ais|xn--c1avg|xn--d1alf|xn--e1a4c|xn--fhbei|xn--j1aef|xn--j1amh|xn--l1acc|xn--ngbrx|xn--nqv7f|xn--p1acf|xn--qxa6a|xn--tckwe|xn--vhquv|yodobashi|موريتانيا|abudhabi|airforce|allstate|attorney|barclays|barefoot|bargains|baseball|boutique|bradesco|broadway|brussels|budapest|builders|business|capetown|catering|catholic|cipriani|cityeats|cleaning|clinique|clothing|commbank|computer|delivery|deloitte|democrat|diamonds|discount|discover|download|engineer|ericsson|etisalat|exchange|feedback|fidelity|firmdale|football|frontier|goodyear|grainger|graphics|guardian|hdfcbank|helsinki|holdings|hospital|infiniti|ipiranga|istanbul|jpmorgan|lighting|lundbeck|marriott|maserati|mckinsey|memorial|merckmsd|mortgage|observer|partners|pharmacy|pictures|plumbing|property|redstone|reliance|saarland|samsclub|security|services|shopping|showtime|softbank|software|stcgroup|supplies|training|vanguard|ventures|verisign|woodside|xn--90ae|xn--node|xn--p1ai|xn--qxam|yokohama|السعودية|abogado|academy|agakhan|alibaba|android|athleta|auction|audible|auspost|avianca|banamex|bauhaus|bentley|bestbuy|booking|brother|bugatti|capital|caravan|careers|channel|charity|chintai|citadel|clubmed|college|cologne|comcast|company|compare|contact|cooking|corsica|country|coupons|courses|cricket|cruises|dentist|digital|domains|exposed|express|farmers|fashion|ferrari|ferrero|finance|fishing|fitness|flights|florist|flowers|forsale|frogans|fujitsu|gallery|genting|godaddy|grocery|guitars|hamburg|hangout|hitachi|holiday|hosting|hoteles|hotmail|hyundai|ismaili|jewelry|juniper|kitchen|komatsu|lacaixa|lanxess|lasalle|latrobe|leclerc|limited|lincoln|markets|monster|netbank|netflix|network|neustar|okinawa|oldnavy|organic|origins|philips|pioneer|politie|realtor|recipes|rentals|reviews|rexroth|samsung|sandvik|schmidt|schwarz|science|shiksha|singles|staples|storage|support|surgery|systems|temasek|theater|theatre|tickets|tiffany|toshiba|trading|walmart|wanggou|watches|weather|website|wedding|whoswho|windows|winners|xfinity|yamaxun|youtube|zuerich|католик|اتصالات|البحرين|الجزائر|العليان|پاکستان|كاثوليك|இந்தியா|abarth|abbott|abbvie|africa|agency|airbus|airtel|alipay|alsace|alstom|amazon|anquan|aramco|author|bayern|beauty|berlin|bharti|bostik|boston|broker|camera|career|casino|center|chanel|chrome|church|circle|claims|clinic|coffee|comsec|condos|coupon|credit|cruise|dating|datsun|dealer|degree|dental|design|direct|doctor|dunlop|dupont|durban|emerck|energy|estate|events|expert|family|flickr|futbol|gallup|garden|george|giving|global|google|gratis|health|hermes|hiphop|hockey|hotels|hughes|imamat|insure|intuit|jaguar|joburg|juegos|kaufen|kinder|kindle|kosher|lancia|latino|lawyer|lefrak|living|locker|london|luxury|madrid|maison|makeup|market|mattel|mobile|monash|mormon|moscow|museum|mutual|nagoya|natura|nissan|nissay|norton|nowruz|office|olayan|online|oracle|orange|otsuka|pfizer|photos|physio|pictet|quebec|racing|realty|reisen|repair|report|review|rocher|rogers|ryukyu|safety|sakura|sanofi|school|schule|search|secure|select|shouji|soccer|social|stream|studio|supply|suzuki|swatch|sydney|taipei|taobao|target|tattoo|tennis|tienda|tjmaxx|tkmaxx|toyota|travel|unicom|viajes|viking|villas|virgin|vision|voting|voyage|vuelos|walter|webcam|xihuan|yachts|yandex|zappos|москва|онлайн|ابوظبي|ارامكو|الاردن|المغرب|امارات|فلسطين|مليسيا|भारतम्|இலங்கை|ファッション|actor|adult|aetna|amfam|amica|apple|archi|audio|autos|azure|baidu|beats|bible|bingo|black|boats|bosch|build|canon|cards|chase|cheap|cisco|citic|click|cloud|coach|codes|crown|cymru|dabur|dance|deals|delta|drive|dubai|earth|edeka|email|epson|faith|fedex|final|forex|forum|gallo|games|gifts|gives|glade|glass|globo|gmail|green|gripe|group|gucci|guide|homes|honda|horse|house|hyatt|ikano|irish|jetzt|koeln|kyoto|lamer|lease|legal|lexus|lilly|linde|lipsy|lixil|loans|locus|lotte|lotto|macys|mango|media|miami|money|movie|nexus|nikon|ninja|nokia|nowtv|omega|osaka|paris|parts|party|phone|photo|pizza|place|poker|praxi|press|prime|promo|quest|radio|rehab|reise|ricoh|rocks|rodeo|rugby|salon|sener|seven|sharp|shell|shoes|skype|sling|smart|smile|solar|space|sport|stada|store|study|style|sucks|swiss|tatar|tires|tirol|tmall|today|tokyo|tools|toray|total|tours|trade|trust|tunes|tushu|ubank|vegas|video|vodka|volvo|wales|watch|weber|weibo|works|world|xerox|yahoo|ישראל|ایران|بازار|بھارت|سودان|سورية|همراه|भारोत|संगठन|বাংলা|భారత్|ഭാരതം|嘉里大酒店|aarp|able|adac|aero|akdn|ally|amex|arab|army|arpa|arte|asda|asia|audi|auto|baby|band|bank|bbva|beer|best|bike|bing|blog|blue|bofa|bond|book|buzz|cafe|call|camp|care|cars|casa|case|cash|cbre|cern|chat|citi|city|club|cool|coop|cyou|data|date|dclk|deal|dell|desi|diet|dish|docs|duck|dvag|erni|fage|fail|fans|farm|fast|fiat|fido|film|fire|fish|flir|food|ford|free|fund|game|gbiz|gent|ggee|gift|gmbh|gold|golf|goog|guge|guru|hair|haus|hdfc|help|here|hgtv|host|hsbc|icbc|ieee|imdb|immo|info|itau|java|jeep|jobs|jprs|kddi|kiwi|kpmg|kred|land|lego|lgbt|lidl|life|like|limo|link|live|loan|loft|love|ltda|luxe|maif|meet|meme|menu|mini|mint|mobi|moda|moto|name|navy|news|next|nico|nike|ollo|open|page|pars|pccw|pics|ping|pink|play|plus|pohl|porn|post|prod|prof|qpon|raid|read|reit|rent|rest|rich|rmit|room|rsvp|ruhr|safe|sale|sarl|save|saxo|scot|seat|seek|sexy|shaw|shia|shop|show|silk|sina|site|skin|sncf|sohu|song|sony|spot|star|surf|talk|taxi|team|tech|teva|tiaa|tips|town|toys|tube|vana|visa|viva|vivo|vote|voto|wang|weir|wien|wiki|wine|work|xbox|yoga|zara|zero|zone|дети|сайт|بارت|بيتك|ڀارت|تونس|شبكة|عراق|عمان|موقع|भारत|ভারত|ভাৰত|ਭਾਰਤ|ભારત|ଭାରତ|ಭಾರತ|ලංකා|アマゾン|グーグル|クラウド|ポイント|大众汽车|组织机构|電訊盈科|香格里拉|aaa|abb|abc|aco|ads|aeg|afl|aig|anz|aol|app|art|aws|axa|bar|bbc|bbt|bcg|bcn|bet|bid|bio|biz|bms|bmw|bom|boo|bot|box|buy|bzh|cab|cal|cam|car|cat|cba|cbn|cbs|ceo|cfa|cfd|com|cpa|crs|csc|dad|day|dds|dev|dhl|diy|dnp|dog|dot|dtv|dvr|eat|eco|edu|esq|eus|fan|fit|fly|foo|fox|frl|ftr|fun|fyi|gal|gap|gay|gdn|gea|gle|gmo|gmx|goo|gop|got|gov|hbo|hiv|hkt|hot|how|ibm|ice|icu|ifm|inc|ing|ink|int|ist|itv|jcb|jio|jll|jmp|jnj|jot|joy|kfh|kia|kim|kpn|krd|lat|law|lds|llc|llp|lol|lpl|ltd|man|map|mba|med|men|mil|mit|mlb|mls|mma|moe|moi|mom|mov|msd|mtn|mtr|nab|nba|nec|net|new|nfl|ngo|nhk|now|nra|nrw|ntt|nyc|obi|off|one|ong|onl|ooo|org|ott|ovh|pay|pet|phd|pid|pin|pnc|pro|pru|pub|pwc|qvc|red|ren|ril|rio|rip|run|rwe|sap|sas|sbi|sbs|sca|scb|ses|sew|sex|sfr|ski|sky|soy|spa|srl|stc|tab|tax|tci|tdk|tel|thd|tjx|top|trv|tui|tvs|ubs|uno|uol|ups|vet|vig|vin|vip|wed|win|wme|wow|wtc|wtf|xin|xxx|xyz|you|yun|zip|бел|ком|қаз|мкд|мон|орг|рус|срб|укр|հայ|קום|عرب|قطر|كوم|مصر|कॉम|नेट|คอม|ไทย|ລາວ|ストア|セール|みんな|中文网|亚马逊|天主教|我爱你|新加坡|淡马锡|诺基亚|飞利浦|ac|ad|ae|af|ag|ai|al|am|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cd|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cw|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gg|gh|gi|gl|gm|gn|gp|gq|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|je|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|ss|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tr|tt|tv|tw|tz|ua|ug|uk|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw|ελ|ευ|бг|ею|рф|გე|닷넷|닷컴|삼성|한국|コム|世界|中信|中国|中國|企业|佛山|信息|健康|八卦|公司|公益|台湾|台灣|商城|商店|商标|嘉里|在线|大拿|娱乐|家電|广东|微博|慈善|手机|招聘|政务|政府|新闻|时尚|書籍|机构|游戏|澳門|点看|移动|网址|网店|网站|网络|联通|谷歌|购物|通販|集团|食品|餐厅|香港)/;\n\n//# sourceMappingURL=tld-regex.js.map\n","import { __assign, __extends } from \"tslib\";\nimport { Matcher } from \"./matcher\";\nimport { alphaNumericAndMarksCharsStr, domainNameCharRegex } from \"../regex-lib\";\nimport { EmailMatch } from \"../match/email-match\";\nimport { throwUnhandledCaseError } from '../utils';\nimport { tldRegex } from \"./tld-regex\";\n// For debugging: search for other \"For debugging\" lines\n// import CliTable from 'cli-table';\n// RegExp objects which are shared by all instances of EmailMatcher. These are\n// here to avoid re-instantiating the RegExp objects if `Autolinker.link()` is\n// called multiple times, thus instantiating EmailMatcher and its RegExp \n// objects each time (which is very expensive - see https://github.com/gregjacobs/Autolinker.js/issues/314). \n// See descriptions of the properties where they are used for details about them\nvar localPartCharRegex = new RegExp(\"[\".concat(alphaNumericAndMarksCharsStr, \"!#$%&'*+/=?^_`{|}~-]\"));\nvar strictTldRegex = new RegExp(\"^\".concat(tldRegex.source, \"$\"));\n/**\n * @class Autolinker.matcher.Email\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find email matches in an input string.\n *\n * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more details.\n */\nvar EmailMatcher = /** @class */ (function (_super) {\n    __extends(EmailMatcher, _super);\n    function EmailMatcher() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Valid characters that can be used in the \"local\" part of an email address,\n         * i.e. the \"name\" part of \"name@site.com\"\n         */\n        _this.localPartCharRegex = localPartCharRegex;\n        /**\n         * Stricter TLD regex which adds a beginning and end check to ensure\n         * the string is a valid TLD\n         */\n        _this.strictTldRegex = strictTldRegex;\n        return _this;\n    }\n    /**\n     * @inheritdoc\n     */\n    EmailMatcher.prototype.parseMatches = function (text) {\n        var tagBuilder = this.tagBuilder, localPartCharRegex = this.localPartCharRegex, strictTldRegex = this.strictTldRegex, matches = [], len = text.length, noCurrentEmailMatch = new CurrentEmailMatch();\n        // for matching a 'mailto:' prefix\n        var mailtoTransitions = {\n            'm': 'a',\n            'a': 'i',\n            'i': 'l',\n            'l': 't',\n            't': 'o',\n            'o': ':',\n        };\n        var charIdx = 0, state = 0 /* NonEmailMatch */, currentEmailMatch = noCurrentEmailMatch;\n        // For debugging: search for other \"For debugging\" lines\n        // const table = new CliTable( {\n        // \thead: [ 'charIdx', 'char', 'state', 'charIdx', 'currentEmailAddress.idx', 'hasDomainDot' ]\n        // } );\n        while (charIdx < len) {\n            var char = text.charAt(charIdx);\n            // For debugging: search for other \"For debugging\" lines\n            // table.push( \n            // \t[ charIdx, char, State[ state ], charIdx, currentEmailAddress.idx, currentEmailAddress.hasDomainDot ] \n            // );\n            switch (state) {\n                case 0 /* NonEmailMatch */:\n                    stateNonEmailAddress(char);\n                    break;\n                case 1 /* Mailto */:\n                    stateMailTo(text.charAt(charIdx - 1), char);\n                    break;\n                case 2 /* LocalPart */:\n                    stateLocalPart(char);\n                    break;\n                case 3 /* LocalPartDot */:\n                    stateLocalPartDot(char);\n                    break;\n                case 4 /* AtSign */:\n                    stateAtSign(char);\n                    break;\n                case 5 /* DomainChar */:\n                    stateDomainChar(char);\n                    break;\n                case 6 /* DomainHyphen */:\n                    stateDomainHyphen(char);\n                    break;\n                case 7 /* DomainDot */:\n                    stateDomainDot(char);\n                    break;\n                default:\n                    throwUnhandledCaseError(state);\n            }\n            // For debugging: search for other \"For debugging\" lines\n            // table.push( \n            // \t[ charIdx, char, State[ state ], charIdx, currentEmailAddress.idx, currentEmailAddress.hasDomainDot ] \n            // );\n            charIdx++;\n        }\n        // Capture any valid match at the end of the string\n        captureMatchIfValidAndReset();\n        // For debugging: search for other \"For debugging\" lines\n        //console.log( '\\n' + table.toString() );\n        return matches;\n        // Handles the state when we're not in an email address\n        function stateNonEmailAddress(char) {\n            if (char === 'm') {\n                beginEmailMatch(1 /* Mailto */);\n            }\n            else if (localPartCharRegex.test(char)) {\n                beginEmailMatch();\n            }\n            else {\n                // not an email address character, continue\n            }\n        }\n        // Handles if we're reading a 'mailto:' prefix on the string\n        function stateMailTo(prevChar, char) {\n            if (prevChar === ':') {\n                // We've reached the end of the 'mailto:' prefix\n                if (localPartCharRegex.test(char)) {\n                    state = 2 /* LocalPart */;\n                    currentEmailMatch = new CurrentEmailMatch(__assign(__assign({}, currentEmailMatch), { hasMailtoPrefix: true }));\n                }\n                else {\n                    // we've matched 'mailto:' but didn't get anything meaningful\n                    // immediately afterwards (for example, we encountered a \n                    // space character, or an '@' character which formed 'mailto:@'\n                    resetToNonEmailMatchState();\n                }\n            }\n            else if (mailtoTransitions[prevChar] === char) {\n                // We're currently reading the 'mailto:' prefix, stay in\n                // Mailto state\n            }\n            else if (localPartCharRegex.test(char)) {\n                // We we're reading a prefix of 'mailto:', but encountered a\n                // different character that didn't continue the prefix\n                state = 2 /* LocalPart */;\n            }\n            else if (char === '.') {\n                // We we're reading a prefix of 'mailto:', but encountered a\n                // dot character\n                state = 3 /* LocalPartDot */;\n            }\n            else if (char === '@') {\n                // We we're reading a prefix of 'mailto:', but encountered a\n                // an @ character\n                state = 4 /* AtSign */;\n            }\n            else {\n                // not an email address character, return to \"NonEmailAddress\" state\n                resetToNonEmailMatchState();\n            }\n        }\n        // Handles the state when we're currently in the \"local part\" of an \n        // email address (as opposed to the \"domain part\")\n        function stateLocalPart(char) {\n            if (char === '.') {\n                state = 3 /* LocalPartDot */;\n            }\n            else if (char === '@') {\n                state = 4 /* AtSign */;\n            }\n            else if (localPartCharRegex.test(char)) {\n                // stay in the \"local part\" of the email address\n            }\n            else {\n                // not an email address character, return to \"NonEmailAddress\" state\n                resetToNonEmailMatchState();\n            }\n        }\n        // Handles the state where we've read \n        function stateLocalPartDot(char) {\n            if (char === '.') {\n                // We read a second '.' in a row, not a valid email address \n                // local part\n                resetToNonEmailMatchState();\n            }\n            else if (char === '@') {\n                // We read the '@' character immediately after a dot ('.'), not \n                // an email address\n                resetToNonEmailMatchState();\n            }\n            else if (localPartCharRegex.test(char)) {\n                state = 2 /* LocalPart */;\n            }\n            else {\n                // Anything else, not an email address\n                resetToNonEmailMatchState();\n            }\n        }\n        function stateAtSign(char) {\n            if (domainNameCharRegex.test(char)) {\n                state = 5 /* DomainChar */;\n            }\n            else {\n                // Anything else, not an email address\n                resetToNonEmailMatchState();\n            }\n        }\n        function stateDomainChar(char) {\n            if (char === '.') {\n                state = 7 /* DomainDot */;\n            }\n            else if (char === '-') {\n                state = 6 /* DomainHyphen */;\n            }\n            else if (domainNameCharRegex.test(char)) {\n                // Stay in the DomainChar state\n            }\n            else {\n                // Anything else, we potentially matched if the criteria has\n                // been met\n                captureMatchIfValidAndReset();\n            }\n        }\n        function stateDomainHyphen(char) {\n            if (char === '-' || char === '.') {\n                // Not valid to have two hyphens (\"--\") or hypen+dot (\"-.\")\n                captureMatchIfValidAndReset();\n            }\n            else if (domainNameCharRegex.test(char)) {\n                state = 5 /* DomainChar */;\n            }\n            else {\n                // Anything else\n                captureMatchIfValidAndReset();\n            }\n        }\n        function stateDomainDot(char) {\n            if (char === '.' || char === '-') {\n                // not valid to have two dots (\"..\") or dot+hypen (\".-\")\n                captureMatchIfValidAndReset();\n            }\n            else if (domainNameCharRegex.test(char)) {\n                state = 5 /* DomainChar */;\n                // After having read a '.' and then a valid domain character,\n                // we now know that the domain part of the email is valid, and\n                // we have found at least a partial EmailMatch (however, the\n                // email address may have additional characters from this point)\n                currentEmailMatch = new CurrentEmailMatch(__assign(__assign({}, currentEmailMatch), { hasDomainDot: true }));\n            }\n            else {\n                // Anything else\n                captureMatchIfValidAndReset();\n            }\n        }\n        function beginEmailMatch(newState) {\n            if (newState === void 0) { newState = 2 /* LocalPart */; }\n            state = newState;\n            currentEmailMatch = new CurrentEmailMatch({ idx: charIdx });\n        }\n        function resetToNonEmailMatchState() {\n            state = 0 /* NonEmailMatch */;\n            currentEmailMatch = noCurrentEmailMatch;\n        }\n        /*\n         * Captures the current email address as an EmailMatch if it's valid,\n         * and resets the state to read another email address.\n         */\n        function captureMatchIfValidAndReset() {\n            if (currentEmailMatch.hasDomainDot) { // we need at least one dot in the domain to be considered a valid email address\n                var matchedText = text.slice(currentEmailMatch.idx, charIdx);\n                // If we read a '.' or '-' char that ended the email address\n                // (valid domain name characters, but only valid email address\n                // characters if they are followed by something else), strip \n                // it off now\n                if (/[-.]$/.test(matchedText)) {\n                    matchedText = matchedText.slice(0, -1);\n                }\n                var emailAddress = currentEmailMatch.hasMailtoPrefix\n                    ? matchedText.slice('mailto:'.length)\n                    : matchedText;\n                // if the email address has a valid TLD, add it to the list of matches\n                if (doesEmailHaveValidTld(emailAddress)) {\n                    matches.push(new EmailMatch({\n                        tagBuilder: tagBuilder,\n                        matchedText: matchedText,\n                        offset: currentEmailMatch.idx,\n                        email: emailAddress\n                    }));\n                }\n            }\n            resetToNonEmailMatchState();\n            /**\n             * Determines if the given email address has a valid TLD or not\n             * @param {string} emailAddress - email address\n             * @return {Boolean} - true is email have valid TLD, false otherwise\n             */\n            function doesEmailHaveValidTld(emailAddress) {\n                var emailAddressTld = emailAddress.split('.').pop() || '';\n                var emailAddressNormalized = emailAddressTld.toLowerCase();\n                var isValidTld = strictTldRegex.test(emailAddressNormalized);\n                return isValidTld;\n            }\n        }\n    };\n    return EmailMatcher;\n}(Matcher));\nexport { EmailMatcher };\nvar CurrentEmailMatch = /** @class */ (function () {\n    function CurrentEmailMatch(cfg) {\n        if (cfg === void 0) { cfg = {}; }\n        this.idx = cfg.idx !== undefined ? cfg.idx : -1;\n        this.hasMailtoPrefix = !!cfg.hasMailtoPrefix;\n        this.hasDomainDot = !!cfg.hasDomainDot;\n    }\n    return CurrentEmailMatch;\n}());\n\n//# sourceMappingURL=email-matcher.js.map\n","import { alphaCharsStr } from \"../regex-lib\";\n/**\n * @private\n * @class Autolinker.matcher.UrlMatchValidator\n * @singleton\n *\n * Used by Autolinker to filter out false URL positives from the\n * {@link Autolinker.matcher.Url UrlMatcher}.\n *\n * Due to the limitations of regular expressions (including the missing feature\n * of look-behinds in JS regular expressions), we cannot always determine the\n * validity of a given match. This class applies a bit of additional logic to\n * filter out any false positives that have been matched by the\n * {@link Autolinker.matcher.Url UrlMatcher}.\n */\nvar UrlMatchValidator = /** @class */ (function () {\n    function UrlMatchValidator() {\n    }\n    /**\n     * Determines if a given URL match found by the {@link Autolinker.matcher.Url UrlMatcher}\n     * is valid. Will return `false` for:\n     *\n     * 1) URL matches which do not have at least have one period ('.') in the\n     *    domain name (effectively skipping over matches like \"abc:def\").\n     *    However, URL matches with a protocol will be allowed (ex: 'http://localhost')\n     * 2) URL matches which do not have at least one word character in the\n     *    domain name (effectively skipping over matches like \"git:1.0\").\n     *    However, URL matches with a protocol will be allowed (ex: 'intra-net://271219.76')\n     * 3) A protocol-relative url match (a URL beginning with '//') whose\n     *    previous character is a word character (effectively skipping over\n     *    strings like \"abc//google.com\")\n     *\n     * Otherwise, returns `true`.\n     *\n     * @param {String} urlMatch The matched URL, if there was one. Will be an\n     *   empty string if the match is not a URL match.\n     * @param {String} protocolUrlMatch The match URL string for a protocol\n     *   match. Ex: 'http://yahoo.com'. This is used to match something like\n     *   'http://localhost', where we won't double check that the domain name\n     *   has at least one '.' in it.\n     * @return {Boolean} `true` if the match given is valid and should be\n     *   processed, or `false` if the match is invalid and/or should just not be\n     *   processed.\n     */\n    UrlMatchValidator.isValid = function (urlMatch, protocolUrlMatch) {\n        if ((protocolUrlMatch && !this.isValidUriScheme(protocolUrlMatch)) ||\n            this.urlMatchDoesNotHaveProtocolOrDot(urlMatch, protocolUrlMatch) || // At least one period ('.') must exist in the URL match for us to consider it an actual URL, *unless* it was a full protocol match (like 'http://localhost')\n            (this.urlMatchDoesNotHaveAtLeastOneWordChar(urlMatch, protocolUrlMatch) && // At least one letter character must exist in the domain name after a protocol match. Ex: skip over something like \"git:1.0\"\n                !this.isValidIpAddress(urlMatch)) || // Except if it's an IP address\n            this.containsMultipleDots(urlMatch)) {\n            return false;\n        }\n        return true;\n    };\n    UrlMatchValidator.isValidIpAddress = function (uriSchemeMatch) {\n        var newRegex = new RegExp(this.hasFullProtocolRegex.source + this.ipRegex.source);\n        var uriScheme = uriSchemeMatch.match(newRegex);\n        return uriScheme !== null;\n    };\n    UrlMatchValidator.containsMultipleDots = function (urlMatch) {\n        var stringBeforeSlash = urlMatch;\n        if (this.hasFullProtocolRegex.test(urlMatch)) {\n            stringBeforeSlash = urlMatch.split('://')[1];\n        }\n        return stringBeforeSlash.split('/')[0].indexOf(\"..\") > -1;\n    };\n    /**\n     * Determines if the URI scheme is a valid scheme to be autolinked. Returns\n     * `false` if the scheme is 'javascript:' or 'vbscript:'\n     *\n     * @private\n     * @param {String} uriSchemeMatch The match URL string for a full URI scheme\n     *   match. Ex: 'http://yahoo.com' or 'mailto:a@a.com'.\n     * @return {Boolean} `true` if the scheme is a valid one, `false` otherwise.\n     */\n    UrlMatchValidator.isValidUriScheme = function (uriSchemeMatch) {\n        var uriSchemeMatchArr = uriSchemeMatch.match(this.uriSchemeRegex), uriScheme = uriSchemeMatchArr && uriSchemeMatchArr[0].toLowerCase();\n        return (uriScheme !== 'javascript:' && uriScheme !== 'vbscript:');\n    };\n    /**\n     * Determines if a URL match does not have either:\n     *\n     * a) a full protocol (i.e. 'http://'), or\n     * b) at least one dot ('.') in the domain name (for a non-full-protocol\n     *    match).\n     *\n     * Either situation is considered an invalid URL (ex: 'git:d' does not have\n     * either the '://' part, or at least one dot in the domain name. If the\n     * match was 'git:abc.com', we would consider this valid.)\n     *\n     * @private\n     * @param {String} urlMatch The matched URL, if there was one. Will be an\n     *   empty string if the match is not a URL match.\n     * @param {String} protocolUrlMatch The match URL string for a protocol\n     *   match. Ex: 'http://yahoo.com'. This is used to match something like\n     *   'http://localhost', where we won't double check that the domain name\n     *   has at least one '.' in it.\n     * @return {Boolean} `true` if the URL match does not have a full protocol,\n     *   or at least one dot ('.') in a non-full-protocol match.\n     */\n    UrlMatchValidator.urlMatchDoesNotHaveProtocolOrDot = function (urlMatch, protocolUrlMatch) {\n        return (!!urlMatch && (!protocolUrlMatch || !this.hasFullProtocolRegex.test(protocolUrlMatch)) && urlMatch.indexOf('.') === -1);\n    };\n    /**\n     * Determines if a URL match does not have either:\n     *\n     * a) a full protocol (i.e. 'http://'), or\n     * b) at least one word character after the protocol (i.e. in the domain name)\n     *\n     * At least one letter character must exist in the domain name after a\n     * protocol match. Ex: skip over something like \"git:1.0\"\n     *\n     * @private\n     * @param {String} urlMatch The matched URL, if there was one. Will be an\n     *   empty string if the match is not a URL match.\n     * @param {String} protocolUrlMatch The match URL string for a protocol\n     *   match. Ex: 'http://yahoo.com'. This is used to know whether or not we\n     *   have a protocol in the URL string, in order to check for a word\n     *   character after the protocol separator (':').\n     * @return {Boolean} `true` if the URL match does not have a full protocol, or\n     * at least one word character in it, `false` otherwise.\n     */\n    UrlMatchValidator.urlMatchDoesNotHaveAtLeastOneWordChar = function (urlMatch, protocolUrlMatch) {\n        if (urlMatch && protocolUrlMatch) {\n            return !this.hasFullProtocolRegex.test(protocolUrlMatch) && !this.hasWordCharAfterProtocolRegex.test(urlMatch);\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Regex to test for a full protocol, with the two trailing slashes. Ex: 'http://'\n     *\n     * @private\n     * @property {RegExp} hasFullProtocolRegex\n     */\n    UrlMatchValidator.hasFullProtocolRegex = /^[A-Za-z][-.+A-Za-z0-9]*:\\/\\//;\n    /**\n     * Regex to find the URI scheme, such as 'mailto:'.\n     *\n     * This is used to filter out 'javascript:' and 'vbscript:' schemes.\n     *\n     * @private\n     * @property {RegExp} uriSchemeRegex\n     */\n    UrlMatchValidator.uriSchemeRegex = /^[A-Za-z][-.+A-Za-z0-9]*:/;\n    /**\n     * Regex to determine if at least one word char exists after the protocol (i.e. after the ':')\n     *\n     * @private\n     * @property {RegExp} hasWordCharAfterProtocolRegex\n     */\n    UrlMatchValidator.hasWordCharAfterProtocolRegex = new RegExp(\":[^\\\\s]*?[\" + alphaCharsStr + \"]\");\n    /**\n     * Regex to determine if the string is a valid IP address\n     *\n     * @private\n     * @property {RegExp} ipRegex\n     */\n    UrlMatchValidator.ipRegex = /[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?(:[0-9]*)?\\/?$/;\n    return UrlMatchValidator;\n}());\nexport { UrlMatchValidator };\n\n//# sourceMappingURL=url-match-validator.js.map\n","import { __extends } from \"tslib\";\nimport { Matcher } from \"./matcher\";\nimport { alphaNumericAndMarksCharsStr } from \"../regex-lib\";\nimport { HashtagMatch } from \"../match/hashtag-match\";\n// RegExp objects which are shared by all instances of HashtagMatcher. These are\n// here to avoid re-instantiating the RegExp objects if `Autolinker.link()` is\n// called multiple times, thus instantiating HashtagMatcher and its RegExp \n// objects each time (which is very expensive - see https://github.com/gregjacobs/Autolinker.js/issues/314). \n// See descriptions of the properties where they are used for details about them\nvar matcherRegex = new RegExp(\"#[_\".concat(alphaNumericAndMarksCharsStr, \"]{1,139}(?![_\").concat(alphaNumericAndMarksCharsStr, \"])\"), 'g'); // lookahead used to make sure we don't match something above 139 characters\nvar nonWordCharRegex = new RegExp('[^' + alphaNumericAndMarksCharsStr + ']');\n/**\n * @class Autolinker.matcher.Hashtag\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find HashtagMatch matches in an input string.\n */\nvar HashtagMatcher = /** @class */ (function (_super) {\n    __extends(HashtagMatcher, _super);\n    /**\n     * @method constructor\n     * @param {Object} cfg The configuration properties for the Match instance,\n     *   specified in an Object (map).\n     */\n    function HashtagMatcher(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        /**\n         * @cfg {String} serviceName\n         *\n         * The service to point hashtag matches to. See {@link Autolinker#hashtag}\n         * for available values.\n         */\n        _this.serviceName = 'twitter'; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * The regular expression to match Hashtags. Example match:\n         *\n         *     #asdf\n         *\n         * @protected\n         * @property {RegExp} matcherRegex\n         */\n        _this.matcherRegex = matcherRegex;\n        /**\n         * The regular expression to use to check the character before a username match to\n         * make sure we didn't accidentally match an email address.\n         *\n         * For example, the string \"asdf@asdf.com\" should not match \"@asdf\" as a username.\n         *\n         * @protected\n         * @property {RegExp} nonWordCharRegex\n         */\n        _this.nonWordCharRegex = nonWordCharRegex;\n        _this.serviceName = cfg.serviceName;\n        return _this;\n    }\n    /**\n     * @inheritdoc\n     */\n    HashtagMatcher.prototype.parseMatches = function (text) {\n        var matcherRegex = this.matcherRegex, nonWordCharRegex = this.nonWordCharRegex, serviceName = this.serviceName, tagBuilder = this.tagBuilder, matches = [], match;\n        while ((match = matcherRegex.exec(text)) !== null) {\n            var offset = match.index, prevChar = text.charAt(offset - 1);\n            // If we found the match at the beginning of the string, or we found the match\n            // and there is a whitespace char in front of it (meaning it is not a '#' char\n            // in the middle of a word), then it is a hashtag match.\n            if (offset === 0 || nonWordCharRegex.test(prevChar)) {\n                var matchedText = match[0], hashtag = match[0].slice(1); // strip off the '#' character at the beginning\n                matches.push(new HashtagMatch({\n                    tagBuilder: tagBuilder,\n                    matchedText: matchedText,\n                    offset: offset,\n                    serviceName: serviceName,\n                    hashtag: hashtag\n                }));\n            }\n        }\n        return matches;\n    };\n    return HashtagMatcher;\n}(Matcher));\nexport { HashtagMatcher };\n\n//# sourceMappingURL=hashtag-matcher.js.map\n","import { __extends } from \"tslib\";\nimport { Matcher } from \"./matcher\";\nimport { PhoneMatch } from \"../match/phone-match\";\nimport { nonDigitRe } from '../regex-lib';\n// RegExp objects which are shared by all instances of PhoneMatcher. These are\n// here to avoid re-instantiating the RegExp objects if `Autolinker.link()` is\n// called multiple times, thus instantiating PhoneMatcher and its RegExp\n// objects each time (which is very expensive - see https://github.com/gregjacobs/Autolinker.js/issues/314).\n// See descriptions of the properties where they are used for details about them\n// Over the years, many people have added to this regex, but it should have been\n// split up by country. Maybe one day we can break this down.\nvar mostPhoneNumbers = /(?:(?:(?:(\\+)?\\d{1,3}[-\\040.]?)?\\(?\\d{3}\\)?[-\\040.]?\\d{3}[-\\040.]?\\d{4})|(?:(\\+)(?:9[976]\\d|8[987530]\\d|6[987]\\d|5[90]\\d|42\\d|3[875]\\d|2[98654321]\\d|9[8543210]|8[6421]|6[6543210]|5[87654321]|4[987654310]|3[9643210]|2[70]|7|1)[-\\040.]?(?:\\d[-\\040.]?){6,12}\\d+))([,;]+[0-9]+#?)*/;\n// Regex for Japanese phone numbers\nvar japanesePhoneRe = /(0([1-9]{1}-?[1-9]\\d{3}|[1-9]{2}-?\\d{3}|[1-9]{2}\\d{1}-?\\d{2}|[1-9]{2}\\d{2}-?\\d{1})-?\\d{4}|0[789]0-?\\d{4}-?\\d{4}|050-?\\d{4}-?\\d{4})/;\n// Combined regex\nvar phoneMatcherRegex = new RegExp(\"\".concat(mostPhoneNumbers.source, \"|\").concat(japanesePhoneRe.source), 'g');\n/**\n * @class Autolinker.matcher.Phone\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find Phone number matches in an input string.\n *\n * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more\n * details.\n */\nvar PhoneMatcher = /** @class */ (function (_super) {\n    __extends(PhoneMatcher, _super);\n    function PhoneMatcher() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * The regular expression to match Phone numbers. Example matches:\n         *\n         *     (123) 456-7890\n         *     123 456 7890\n         *     123-456-7890\n         *     +18004441234,,;,10226420346#\n         *     +1 (800) 444 1234\n         *     10226420346#\n         *     1-800-444-1234,1022,64,20346#\n         *\n         * This regular expression has the following capturing groups:\n         *\n         * 1 or 2. The prefixed '+' sign, if there is one.\n         *\n         * @protected\n         * @property {RegExp} matcherRegex\n         */\n        _this.matcherRegex = phoneMatcherRegex;\n        return _this;\n    }\n    /**\n     * @inheritdoc\n     */\n    PhoneMatcher.prototype.parseMatches = function (text) {\n        var matcherRegex = this.matcherRegex, tagBuilder = this.tagBuilder, matches = [], match;\n        while ((match = matcherRegex.exec(text)) !== null) {\n            // Remove non-numeric values from phone number string\n            var matchedText = match[0], cleanNumber = matchedText.replace(/[^0-9,;#]/g, ''), // strip out non-digit characters exclude comma semicolon and #\n            plusSign = !!(match[1] || match[2]), // match[ 1 ] or match[ 2 ] is the prefixed plus sign, if there is one\n            before = match.index == 0 ? '' : text.substr(match.index - 1, 1), after = text.substr(match.index + matchedText.length, 1), contextClear = !before.match(/\\d/) && !after.match(/\\d/);\n            if (this.testMatch(match[3]) && this.testMatch(matchedText) && contextClear) {\n                matches.push(new PhoneMatch({\n                    tagBuilder: tagBuilder,\n                    matchedText: matchedText,\n                    offset: match.index,\n                    number: cleanNumber,\n                    plusSign: plusSign\n                }));\n            }\n        }\n        return matches;\n    };\n    PhoneMatcher.prototype.testMatch = function (text) {\n        return nonDigitRe.test(text);\n    };\n    return PhoneMatcher;\n}(Matcher));\nexport { PhoneMatcher };\n\n//# sourceMappingURL=phone-matcher.js.map\n","import { __extends } from \"tslib\";\nimport { Matcher } from \"./matcher\";\nimport { alphaNumericAndMarksCharsStr } from \"../regex-lib\";\nimport { MentionMatch } from \"../match/mention-match\";\n// RegExp objects which are shared by all instances of MentionMatcher. These are\n// here to avoid re-instantiating the RegExp objects if `Autolinker.link()` is\n// called multiple times, thus instantiating MentionMatcher and its RegExp \n// objects each time (which is very expensive - see https://github.com/gregjacobs/Autolinker.js/issues/314). \n// See descriptions of the properties where they are used for details about them\nvar twitterRegex = new RegExp(\"@[_\".concat(alphaNumericAndMarksCharsStr, \"]{1,50}(?![_\").concat(alphaNumericAndMarksCharsStr, \"])\"), 'g'); // lookahead used to make sure we don't match something above 50 characters\nvar instagramRegex = new RegExp(\"@[_.\".concat(alphaNumericAndMarksCharsStr, \"]{1,30}(?![_\").concat(alphaNumericAndMarksCharsStr, \"])\"), 'g'); // lookahead used to make sure we don't match something above 30 characters\nvar soundcloudRegex = new RegExp(\"@[-_.\".concat(alphaNumericAndMarksCharsStr, \"]{1,50}(?![-_\").concat(alphaNumericAndMarksCharsStr, \"])\"), 'g'); // lookahead used to make sure we don't match something above 50 characters\n// TikTok usernames are 1-24 characters containing letters, numbers, underscores\n// and periods, but cannot end in a period: https://support.tiktok.com/en/getting-started/setting-up-your-profile/changing-your-username\nvar tiktokRegex = new RegExp(\"@[_.\".concat(alphaNumericAndMarksCharsStr, \"]{1,23}[_\").concat(alphaNumericAndMarksCharsStr, \"](?![_\").concat(alphaNumericAndMarksCharsStr, \"])\"), 'g'); // lookahead used to make sure we don't match something above 24 characters\nvar nonWordCharRegex = new RegExp('[^' + alphaNumericAndMarksCharsStr + ']');\n/**\n * @class Autolinker.matcher.Mention\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find/replace username matches in an input string.\n */\nvar MentionMatcher = /** @class */ (function (_super) {\n    __extends(MentionMatcher, _super);\n    /**\n     * @method constructor\n     * @param {Object} cfg The configuration properties for the Match instance,\n     *   specified in an Object (map).\n     */\n    function MentionMatcher(cfg) {\n        var _this = _super.call(this, cfg) || this;\n        /**\n         * @cfg {'twitter'/'instagram'/'soundcloud'} protected\n         *\n         * The name of service to link @mentions to.\n         *\n         * Valid values are: 'twitter', 'instagram', 'soundcloud', or 'tiktok'\n         */\n        _this.serviceName = 'twitter'; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * Hash of regular expression to match username handles. Example match:\n         *\n         *     @asdf\n         *\n         * @private\n         * @property {Object} matcherRegexes\n         */\n        _this.matcherRegexes = {\n            'twitter': twitterRegex,\n            'instagram': instagramRegex,\n            'soundcloud': soundcloudRegex,\n            'tiktok': tiktokRegex\n        };\n        /**\n         * The regular expression to use to check the character before a username match to\n         * make sure we didn't accidentally match an email address.\n         *\n         * For example, the string \"asdf@asdf.com\" should not match \"@asdf\" as a username.\n         *\n         * @private\n         * @property {RegExp} nonWordCharRegex\n         */\n        _this.nonWordCharRegex = nonWordCharRegex;\n        _this.serviceName = cfg.serviceName;\n        return _this;\n    }\n    /**\n     * @inheritdoc\n     */\n    MentionMatcher.prototype.parseMatches = function (text) {\n        var serviceName = this.serviceName, matcherRegex = this.matcherRegexes[this.serviceName], nonWordCharRegex = this.nonWordCharRegex, tagBuilder = this.tagBuilder, matches = [], match;\n        if (!matcherRegex) {\n            return matches;\n        }\n        while ((match = matcherRegex.exec(text)) !== null) {\n            var offset = match.index, prevChar = text.charAt(offset - 1);\n            // If we found the match at the beginning of the string, or we found the match\n            // and there is a whitespace char in front of it (meaning it is not an email\n            // address), then it is a username match.\n            if (offset === 0 || nonWordCharRegex.test(prevChar)) {\n                var matchedText = match[0].replace(/\\.+$/g, ''), // strip off trailing .\n                mention = matchedText.slice(1); // strip off the '@' character at the beginning\n                matches.push(new MentionMatch({\n                    tagBuilder: tagBuilder,\n                    matchedText: matchedText,\n                    offset: offset,\n                    serviceName: serviceName,\n                    mention: mention\n                }));\n            }\n        }\n        return matches;\n    };\n    return MentionMatcher;\n}(Matcher));\nexport { MentionMatcher };\n\n//# sourceMappingURL=mention-matcher.js.map\n","import { __assign } from \"tslib\";\nimport { letterRe, digitRe, whitespaceRe, quoteRe, controlCharsRe } from '../regex-lib';\nimport { throwUnhandledCaseError } from '../utils';\n// For debugging: search for other \"For debugging\" lines\n// import CliTable from 'cli-table';\n/**\n * Parses an HTML string, calling the callbacks to notify of tags and text.\n *\n * ## History\n *\n * This file previously used a regular expression to find html tags in the input\n * text. Unfortunately, we ran into a bunch of catastrophic backtracking issues\n * with certain input text, causing Autolinker to either hang or just take a\n * really long time to parse the string.\n *\n * The current code is intended to be a O(n) algorithm that walks through\n * the string in one pass, and tries to be as cheap as possible. We don't need\n * to implement the full HTML spec, but rather simply determine where the string\n * looks like an HTML tag, and where it looks like text (so that we can autolink\n * that).\n *\n * This state machine parser is intended just to be a simple but performant\n * parser of HTML for the subset of requirements we have. We simply need to:\n *\n * 1. Determine where HTML tags are\n * 2. Determine the tag name (Autolinker specifically only cares about <a>,\n *    <script>, and <style> tags, so as not to link any text within them)\n *\n * We don't need to:\n *\n * 1. Create a parse tree\n * 2. Auto-close tags with invalid markup\n * 3. etc.\n *\n * The other intention behind this is that we didn't want to add external\n * dependencies on the Autolinker utility which would increase its size. For\n * instance, adding htmlparser2 adds 125kb to the minified output file,\n * increasing its final size from 47kb to 172kb (at the time of writing). It\n * also doesn't work exactly correctly, treating the string \"<3 blah blah blah\"\n * as an HTML tag.\n *\n * Reference for HTML spec:\n *\n *     https://www.w3.org/TR/html51/syntax.html#sec-tokenization\n *\n * @param {String} html The HTML to parse\n * @param {Object} callbacks\n * @param {Function} callbacks.onOpenTag Callback function to call when an open\n *   tag is parsed. Called with the tagName as its argument.\n * @param {Function} callbacks.onCloseTag Callback function to call when a close\n *   tag is parsed. Called with the tagName as its argument. If a self-closing\n *   tag is found, `onCloseTag` is called immediately after `onOpenTag`.\n * @param {Function} callbacks.onText Callback function to call when text (i.e\n *   not an HTML tag) is parsed. Called with the text (string) as its first\n *   argument, and offset (number) into the string as its second.\n */\nexport function parseHtml(html, _a) {\n    var onOpenTag = _a.onOpenTag, onCloseTag = _a.onCloseTag, onText = _a.onText, onComment = _a.onComment, onDoctype = _a.onDoctype;\n    var noCurrentTag = new CurrentTag();\n    var charIdx = 0, len = html.length, state = 0 /* Data */, currentDataIdx = 0, // where the current data start index is\n    currentTag = noCurrentTag; // describes the current tag that is being read\n    // For debugging: search for other \"For debugging\" lines\n    // const table = new CliTable( {\n    // \thead: [ 'charIdx', 'char', 'state', 'currentDataIdx', 'currentOpenTagIdx', 'tag.type' ]\n    // } );\n    while (charIdx < len) {\n        var char = html.charAt(charIdx);\n        // For debugging: search for other \"For debugging\" lines\n        // ALSO: Temporarily remove the 'const' keyword on the State enum\n        // table.push( \n        // \t[ charIdx, char, State[ state ], currentDataIdx, currentTag.idx, currentTag.idx === -1 ? '' : currentTag.type ] \n        // );\n        switch (state) {\n            case 0 /* Data */:\n                stateData(char);\n                break;\n            case 1 /* TagOpen */:\n                stateTagOpen(char);\n                break;\n            case 2 /* EndTagOpen */:\n                stateEndTagOpen(char);\n                break;\n            case 3 /* TagName */:\n                stateTagName(char);\n                break;\n            case 4 /* BeforeAttributeName */:\n                stateBeforeAttributeName(char);\n                break;\n            case 5 /* AttributeName */:\n                stateAttributeName(char);\n                break;\n            case 6 /* AfterAttributeName */:\n                stateAfterAttributeName(char);\n                break;\n            case 7 /* BeforeAttributeValue */:\n                stateBeforeAttributeValue(char);\n                break;\n            case 8 /* AttributeValueDoubleQuoted */:\n                stateAttributeValueDoubleQuoted(char);\n                break;\n            case 9 /* AttributeValueSingleQuoted */:\n                stateAttributeValueSingleQuoted(char);\n                break;\n            case 10 /* AttributeValueUnquoted */:\n                stateAttributeValueUnquoted(char);\n                break;\n            case 11 /* AfterAttributeValueQuoted */:\n                stateAfterAttributeValueQuoted(char);\n                break;\n            case 12 /* SelfClosingStartTag */:\n                stateSelfClosingStartTag(char);\n                break;\n            case 13 /* MarkupDeclarationOpenState */:\n                stateMarkupDeclarationOpen(char);\n                break;\n            case 14 /* CommentStart */:\n                stateCommentStart(char);\n                break;\n            case 15 /* CommentStartDash */:\n                stateCommentStartDash(char);\n                break;\n            case 16 /* Comment */:\n                stateComment(char);\n                break;\n            case 17 /* CommentEndDash */:\n                stateCommentEndDash(char);\n                break;\n            case 18 /* CommentEnd */:\n                stateCommentEnd(char);\n                break;\n            case 19 /* CommentEndBang */:\n                stateCommentEndBang(char);\n                break;\n            case 20 /* Doctype */:\n                stateDoctype(char);\n                break;\n            default:\n                throwUnhandledCaseError(state);\n        }\n        // For debugging: search for other \"For debugging\" lines\n        // ALSO: Temporarily remove the 'const' keyword on the State enum\n        // table.push( \n        // \t[ charIdx, char, State[ state ], currentDataIdx, currentTag.idx, currentTag.idx === -1 ? '' : currentTag.type ] \n        // );\n        charIdx++;\n    }\n    if (currentDataIdx < charIdx) {\n        emitText();\n    }\n    // For debugging: search for other \"For debugging\" lines\n    // console.log( '\\n' + table.toString() );\n    // Called when non-tags are being read (i.e. the text around HTML †ags)\n    // https://www.w3.org/TR/html51/syntax.html#data-state\n    function stateData(char) {\n        if (char === '<') {\n            startNewTag();\n        }\n    }\n    // Called after a '<' is read from the Data state\n    // https://www.w3.org/TR/html51/syntax.html#tag-open-state\n    function stateTagOpen(char) {\n        if (char === '!') {\n            state = 13 /* MarkupDeclarationOpenState */;\n        }\n        else if (char === '/') {\n            state = 2 /* EndTagOpen */;\n            currentTag = new CurrentTag(__assign(__assign({}, currentTag), { isClosing: true }));\n        }\n        else if (char === '<') {\n            // start of another tag (ignore the previous, incomplete one)\n            startNewTag();\n        }\n        else if (letterRe.test(char)) {\n            // tag name start (and no '/' read)\n            state = 3 /* TagName */;\n            currentTag = new CurrentTag(__assign(__assign({}, currentTag), { isOpening: true }));\n        }\n        else {\n            // Any other \n            state = 0 /* Data */;\n            currentTag = noCurrentTag;\n        }\n    }\n    // After a '<x', '</x' sequence is read (where 'x' is a letter character), \n    // this is to continue reading the tag name\n    // https://www.w3.org/TR/html51/syntax.html#tag-name-state\n    function stateTagName(char) {\n        if (whitespaceRe.test(char)) {\n            currentTag = new CurrentTag(__assign(__assign({}, currentTag), { name: captureTagName() }));\n            state = 4 /* BeforeAttributeName */;\n        }\n        else if (char === '<') {\n            // start of another tag (ignore the previous, incomplete one)\n            startNewTag();\n        }\n        else if (char === '/') {\n            currentTag = new CurrentTag(__assign(__assign({}, currentTag), { name: captureTagName() }));\n            state = 12 /* SelfClosingStartTag */;\n        }\n        else if (char === '>') {\n            currentTag = new CurrentTag(__assign(__assign({}, currentTag), { name: captureTagName() }));\n            emitTagAndPreviousTextNode(); // resets to Data state as well\n        }\n        else if (!letterRe.test(char) && !digitRe.test(char) && char !== ':') {\n            // Anything else that does not form an html tag. Note: the colon \n            // character is accepted for XML namespaced tags\n            resetToDataState();\n        }\n        else {\n            // continue reading tag name\n        }\n    }\n    // Called after the '/' is read from a '</' sequence\n    // https://www.w3.org/TR/html51/syntax.html#end-tag-open-state\n    function stateEndTagOpen(char) {\n        if (char === '>') { // parse error. Encountered \"</>\". Skip it without treating as a tag\n            resetToDataState();\n        }\n        else if (letterRe.test(char)) {\n            state = 3 /* TagName */;\n        }\n        else {\n            // some other non-tag-like character, don't treat this as a tag\n            resetToDataState();\n        }\n    }\n    // https://www.w3.org/TR/html51/syntax.html#before-attribute-name-state\n    function stateBeforeAttributeName(char) {\n        if (whitespaceRe.test(char)) {\n            // stay in BeforeAttributeName state - continue reading chars\n        }\n        else if (char === '/') {\n            state = 12 /* SelfClosingStartTag */;\n        }\n        else if (char === '>') {\n            emitTagAndPreviousTextNode(); // resets to Data state as well\n        }\n        else if (char === '<') {\n            // start of another tag (ignore the previous, incomplete one)\n            startNewTag();\n        }\n        else if (char === \"=\" || quoteRe.test(char) || controlCharsRe.test(char)) {\n            // \"Parse error\" characters that, according to the spec, should be\n            // appended to the attribute name, but we'll treat these characters\n            // as not forming a real HTML tag\n            resetToDataState();\n        }\n        else {\n            // Any other char, start of a new attribute name\n            state = 5 /* AttributeName */;\n        }\n    }\n    // https://www.w3.org/TR/html51/syntax.html#attribute-name-state\n    function stateAttributeName(char) {\n        if (whitespaceRe.test(char)) {\n            state = 6 /* AfterAttributeName */;\n        }\n        else if (char === '/') {\n            state = 12 /* SelfClosingStartTag */;\n        }\n        else if (char === '=') {\n            state = 7 /* BeforeAttributeValue */;\n        }\n        else if (char === '>') {\n            emitTagAndPreviousTextNode(); // resets to Data state as well\n        }\n        else if (char === '<') {\n            // start of another tag (ignore the previous, incomplete one)\n            startNewTag();\n        }\n        else if (quoteRe.test(char)) {\n            // \"Parse error\" characters that, according to the spec, should be\n            // appended to the attribute name, but we'll treat these characters\n            // as not forming a real HTML tag\n            resetToDataState();\n        }\n        else {\n            // anything else: continue reading attribute name\n        }\n    }\n    // https://www.w3.org/TR/html51/syntax.html#after-attribute-name-state\n    function stateAfterAttributeName(char) {\n        if (whitespaceRe.test(char)) {\n            // ignore the character - continue reading\n        }\n        else if (char === '/') {\n            state = 12 /* SelfClosingStartTag */;\n        }\n        else if (char === '=') {\n            state = 7 /* BeforeAttributeValue */;\n        }\n        else if (char === '>') {\n            emitTagAndPreviousTextNode();\n        }\n        else if (char === '<') {\n            // start of another tag (ignore the previous, incomplete one)\n            startNewTag();\n        }\n        else if (quoteRe.test(char)) {\n            // \"Parse error\" characters that, according to the spec, should be\n            // appended to the attribute name, but we'll treat these characters\n            // as not forming a real HTML tag\n            resetToDataState();\n        }\n        else {\n            // Any other character, start a new attribute in the current tag\n            state = 5 /* AttributeName */;\n        }\n    }\n    // https://www.w3.org/TR/html51/syntax.html#before-attribute-value-state\n    function stateBeforeAttributeValue(char) {\n        if (whitespaceRe.test(char)) {\n            // ignore the character - continue reading\n        }\n        else if (char === \"\\\"\") {\n            state = 8 /* AttributeValueDoubleQuoted */;\n        }\n        else if (char === \"'\") {\n            state = 9 /* AttributeValueSingleQuoted */;\n        }\n        else if (/[>=`]/.test(char)) {\n            // Invalid chars after an '=' for an attribute value, don't count \n            // the current tag as an HTML tag\n            resetToDataState();\n        }\n        else if (char === '<') {\n            // start of another tag (ignore the previous, incomplete one)\n            startNewTag();\n        }\n        else {\n            // Any other character, consider it an unquoted attribute value\n            state = 10 /* AttributeValueUnquoted */;\n        }\n    }\n    // https://www.w3.org/TR/html51/syntax.html#attribute-value-double-quoted-state\n    function stateAttributeValueDoubleQuoted(char) {\n        if (char === \"\\\"\") { // end the current double-quoted attribute\n            state = 11 /* AfterAttributeValueQuoted */;\n        }\n        else {\n            // consume the character as part of the double-quoted attribute value\n        }\n    }\n    // https://www.w3.org/TR/html51/syntax.html#attribute-value-single-quoted-state\n    function stateAttributeValueSingleQuoted(char) {\n        if (char === \"'\") { // end the current single-quoted attribute\n            state = 11 /* AfterAttributeValueQuoted */;\n        }\n        else {\n            // consume the character as part of the double-quoted attribute value\n        }\n    }\n    // https://www.w3.org/TR/html51/syntax.html#attribute-value-unquoted-state\n    function stateAttributeValueUnquoted(char) {\n        if (whitespaceRe.test(char)) {\n            state = 4 /* BeforeAttributeName */;\n        }\n        else if (char === '>') {\n            emitTagAndPreviousTextNode();\n        }\n        else if (char === '<') {\n            // start of another tag (ignore the previous, incomplete one)\n            startNewTag();\n        }\n        else {\n            // Any other character, treat it as part of the attribute value\n        }\n    }\n    // https://www.w3.org/TR/html51/syntax.html#after-attribute-value-quoted-state\n    function stateAfterAttributeValueQuoted(char) {\n        if (whitespaceRe.test(char)) {\n            state = 4 /* BeforeAttributeName */;\n        }\n        else if (char === '/') {\n            state = 12 /* SelfClosingStartTag */;\n        }\n        else if (char === '>') {\n            emitTagAndPreviousTextNode();\n        }\n        else if (char === '<') {\n            // start of another tag (ignore the previous, incomplete one)\n            startNewTag();\n        }\n        else {\n            // Any other character, \"parse error\". Spec says to switch to the\n            // BeforeAttributeState and re-consume the character, as it may be\n            // the start of a new attribute name\n            state = 4 /* BeforeAttributeName */;\n            reconsumeCurrentCharacter();\n        }\n    }\n    // A '/' has just been read in the current tag (presumably for '/>'), and \n    // this handles the next character\n    // https://www.w3.org/TR/html51/syntax.html#self-closing-start-tag-state\n    function stateSelfClosingStartTag(char) {\n        if (char === '>') {\n            currentTag = new CurrentTag(__assign(__assign({}, currentTag), { isClosing: true }));\n            emitTagAndPreviousTextNode(); // resets to Data state as well\n        }\n        else {\n            state = 4 /* BeforeAttributeName */;\n        }\n    }\n    // https://www.w3.org/TR/html51/syntax.html#markup-declaration-open-state\n    // (HTML Comments or !DOCTYPE)\n    function stateMarkupDeclarationOpen(char) {\n        if (html.substr(charIdx, 2) === '--') { // html comment\n            charIdx += 2; // \"consume\" characters\n            currentTag = new CurrentTag(__assign(__assign({}, currentTag), { type: 'comment' }));\n            state = 14 /* CommentStart */;\n        }\n        else if (html.substr(charIdx, 7).toUpperCase() === 'DOCTYPE') {\n            charIdx += 7; // \"consume\" characters\n            currentTag = new CurrentTag(__assign(__assign({}, currentTag), { type: 'doctype' }));\n            state = 20 /* Doctype */;\n        }\n        else {\n            // At this point, the spec specifies that the state machine should\n            // enter the \"bogus comment\" state, in which case any character(s) \n            // after the '<!' that were read should become an HTML comment up\n            // until the first '>' that is read (or EOF). Instead, we'll assume\n            // that a user just typed '<!' as part of text data\n            resetToDataState();\n        }\n    }\n    // Handles after the sequence '<!--' has been read\n    // https://www.w3.org/TR/html51/syntax.html#comment-start-state\n    function stateCommentStart(char) {\n        if (char === '-') {\n            // We've read the sequence '<!---' at this point (3 dashes)\n            state = 15 /* CommentStartDash */;\n        }\n        else if (char === '>') {\n            // At this point, we'll assume the comment wasn't a real comment\n            // so we'll just emit it as data. We basically read the sequence \n            // '<!-->'\n            resetToDataState();\n        }\n        else {\n            // Any other char, take it as part of the comment\n            state = 16 /* Comment */;\n        }\n    }\n    // We've read the sequence '<!---' at this point (3 dashes)\n    // https://www.w3.org/TR/html51/syntax.html#comment-start-dash-state\n    function stateCommentStartDash(char) {\n        if (char === '-') {\n            // We've read '<!----' (4 dashes) at this point\n            state = 18 /* CommentEnd */;\n        }\n        else if (char === '>') {\n            // At this point, we'll assume the comment wasn't a real comment\n            // so we'll just emit it as data. We basically read the sequence \n            // '<!--->'\n            resetToDataState();\n        }\n        else {\n            // Anything else, take it as a valid comment\n            state = 16 /* Comment */;\n        }\n    }\n    // Currently reading the comment's text (data)\n    // https://www.w3.org/TR/html51/syntax.html#comment-state\n    function stateComment(char) {\n        if (char === '-') {\n            state = 17 /* CommentEndDash */;\n        }\n        else {\n            // Any other character, stay in the Comment state\n        }\n    }\n    // When we we've read the first dash inside a comment, it may signal the\n    // end of the comment if we read another dash\n    // https://www.w3.org/TR/html51/syntax.html#comment-end-dash-state\n    function stateCommentEndDash(char) {\n        if (char === '-') {\n            state = 18 /* CommentEnd */;\n        }\n        else {\n            // Wasn't a dash, must still be part of the comment\n            state = 16 /* Comment */;\n        }\n    }\n    // After we've read two dashes inside a comment, it may signal the end of \n    // the comment if we then read a '>' char\n    // https://www.w3.org/TR/html51/syntax.html#comment-end-state\n    function stateCommentEnd(char) {\n        if (char === '>') {\n            emitTagAndPreviousTextNode();\n        }\n        else if (char === '!') {\n            state = 19 /* CommentEndBang */;\n        }\n        else if (char === '-') {\n            // A 3rd '-' has been read: stay in the CommentEnd state\n        }\n        else {\n            // Anything else, switch back to the comment state since we didn't\n            // read the full \"end comment\" sequence (i.e. '-->')\n            state = 16 /* Comment */;\n        }\n    }\n    // We've read the sequence '--!' inside of a comment\n    // https://www.w3.org/TR/html51/syntax.html#comment-end-bang-state\n    function stateCommentEndBang(char) {\n        if (char === '-') {\n            // We read the sequence '--!-' inside of a comment. The last dash\n            // could signify that the comment is going to close\n            state = 17 /* CommentEndDash */;\n        }\n        else if (char === '>') {\n            // End of comment with the sequence '--!>'\n            emitTagAndPreviousTextNode();\n        }\n        else {\n            // The '--!' was not followed by a '>', continue reading the \n            // comment's text\n            state = 16 /* Comment */;\n        }\n    }\n    /**\n     * For DOCTYPES in particular, we don't care about the attributes. Just\n     * advance to the '>' character and emit the tag, unless we find a '<'\n     * character in which case we'll start a new tag.\n     *\n     * Example doctype tag:\n     *    <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n     *\n     * Actual spec: https://www.w3.org/TR/html51/syntax.html#doctype-state\n     */\n    function stateDoctype(char) {\n        if (char === '>') {\n            emitTagAndPreviousTextNode();\n        }\n        else if (char === '<') {\n            startNewTag();\n        }\n        else {\n            // stay in the Doctype state\n        }\n    }\n    /**\n     * Resets the state back to the Data state, and removes the current tag.\n     *\n     * We'll generally run this function whenever a \"parse error\" is\n     * encountered, where the current tag that is being read no longer looks\n     * like a real HTML tag.\n     */\n    function resetToDataState() {\n        state = 0 /* Data */;\n        currentTag = noCurrentTag;\n    }\n    /**\n     * Starts a new HTML tag at the current index, ignoring any previous HTML\n     * tag that was being read.\n     *\n     * We'll generally run this function whenever we read a new '<' character,\n     * including when we read a '<' character inside of an HTML tag that we were\n     * previously reading.\n     */\n    function startNewTag() {\n        state = 1 /* TagOpen */;\n        currentTag = new CurrentTag({ idx: charIdx });\n    }\n    /**\n     * Once we've decided to emit an open tag, that means we can also emit the\n     * text node before it.\n     */\n    function emitTagAndPreviousTextNode() {\n        var textBeforeTag = html.slice(currentDataIdx, currentTag.idx);\n        if (textBeforeTag) {\n            // the html tag was the first element in the html string, or two \n            // tags next to each other, in which case we should not emit a text \n            // node\n            onText(textBeforeTag, currentDataIdx);\n        }\n        if (currentTag.type === 'comment') {\n            onComment(currentTag.idx);\n        }\n        else if (currentTag.type === 'doctype') {\n            onDoctype(currentTag.idx);\n        }\n        else {\n            if (currentTag.isOpening) {\n                onOpenTag(currentTag.name, currentTag.idx);\n            }\n            if (currentTag.isClosing) { // note: self-closing tags will emit both opening and closing\n                onCloseTag(currentTag.name, currentTag.idx);\n            }\n        }\n        // Since we just emitted a tag, reset to the data state for the next char\n        resetToDataState();\n        currentDataIdx = charIdx + 1;\n    }\n    function emitText() {\n        var text = html.slice(currentDataIdx, charIdx);\n        onText(text, currentDataIdx);\n        currentDataIdx = charIdx + 1;\n    }\n    /**\n     * Captures the tag name from the start of the tag to the current character\n     * index, and converts it to lower case\n     */\n    function captureTagName() {\n        var startIdx = currentTag.idx + (currentTag.isClosing ? 2 : 1);\n        return html.slice(startIdx, charIdx).toLowerCase();\n    }\n    /**\n     * Causes the main loop to re-consume the current character, such as after\n     * encountering a \"parse error\" that changed state and needs to reconsume\n     * the same character in that new state.\n     */\n    function reconsumeCurrentCharacter() {\n        charIdx--;\n    }\n}\nvar CurrentTag = /** @class */ (function () {\n    function CurrentTag(cfg) {\n        if (cfg === void 0) { cfg = {}; }\n        this.idx = cfg.idx !== undefined ? cfg.idx : -1;\n        this.type = cfg.type || 'tag';\n        this.name = cfg.name || '';\n        this.isOpening = !!cfg.isOpening;\n        this.isClosing = !!cfg.isClosing;\n    }\n    return CurrentTag;\n}());\n\n//# sourceMappingURL=parse-html.js.map\n","import { defaults, remove, splitAndCapture } from \"./utils\";\nimport { AnchorTagBuilder } from \"./anchor-tag-builder\";\nimport { Match } from \"./match/match\";\nimport { EmailMatch } from \"./match/email-match\";\nimport { HashtagMatch } from \"./match/hashtag-match\";\nimport { MentionMatch } from \"./match/mention-match\";\nimport { PhoneMatch } from \"./match/phone-match\";\nimport { UrlMatch } from \"./match/url-match\";\nimport { Matcher } from \"./matcher/matcher\";\nimport { HtmlTag } from \"./html-tag\";\nimport { EmailMatcher } from \"./matcher/email-matcher\";\nimport { UrlMatcher } from \"./matcher/url-matcher\";\nimport { HashtagMatcher } from \"./matcher/hashtag-matcher\";\nimport { PhoneMatcher } from \"./matcher/phone-matcher\";\nimport { MentionMatcher } from \"./matcher/mention-matcher\";\nimport { parseHtml } from './htmlParser/parse-html';\n/**\n * @class Autolinker\n * @extends Object\n *\n * Utility class used to process a given string of text, and wrap the matches in\n * the appropriate anchor (&lt;a&gt;) tags to turn them into links.\n *\n * Any of the configuration options may be provided in an Object provided\n * to the Autolinker constructor, which will configure how the {@link #link link()}\n * method will process the links.\n *\n * For example:\n *\n *     var autolinker = new Autolinker( {\n *         newWindow : false,\n *         truncate  : 30\n *     } );\n *\n *     var html = autolinker.link( \"Joe went to www.yahoo.com\" );\n *     // produces: 'Joe went to <a href=\"http://www.yahoo.com\">yahoo.com</a>'\n *\n *\n * The {@link #static-link static link()} method may also be used to inline\n * options into a single call, which may be more convenient for one-off uses.\n * For example:\n *\n *     var html = Autolinker.link( \"Joe went to www.yahoo.com\", {\n *         newWindow : false,\n *         truncate  : 30\n *     } );\n *     // produces: 'Joe went to <a href=\"http://www.yahoo.com\">yahoo.com</a>'\n *\n *\n * ## Custom Replacements of Links\n *\n * If the configuration options do not provide enough flexibility, a {@link #replaceFn}\n * may be provided to fully customize the output of Autolinker. This function is\n * called once for each URL/Email/Phone#/Hashtag/Mention (Twitter, Instagram, Soundcloud)\n * match that is encountered.\n *\n * For example:\n *\n *     var input = \"...\";  // string with URLs, Email Addresses, Phone #s, Hashtags, and Mentions (Twitter, Instagram, Soundcloud)\n *\n *     var linkedText = Autolinker.link( input, {\n *         replaceFn : function( match ) {\n *             console.log( \"href = \", match.getAnchorHref() );\n *             console.log( \"text = \", match.getAnchorText() );\n *\n *             switch( match.getType() ) {\n *                 case 'url' :\n *                     console.log( \"url: \", match.getUrl() );\n *\n *                     if( match.getUrl().indexOf( 'mysite.com' ) === -1 ) {\n *                         var tag = match.buildTag();  // returns an `Autolinker.HtmlTag` instance, which provides mutator methods for easy changes\n *                         tag.setAttr( 'rel', 'nofollow' );\n *                         tag.addClass( 'external-link' );\n *\n *                         return tag;\n *\n *                     } else {\n *                         return true;  // let Autolinker perform its normal anchor tag replacement\n *                     }\n *\n *                 case 'email' :\n *                     var email = match.getEmail();\n *                     console.log( \"email: \", email );\n *\n *                     if( email === \"my@own.address\" ) {\n *                         return false;  // don't auto-link this particular email address; leave as-is\n *                     } else {\n *                         return;  // no return value will have Autolinker perform its normal anchor tag replacement (same as returning `true`)\n *                     }\n *\n *                 case 'phone' :\n *                     var phoneNumber = match.getPhoneNumber();\n *                     console.log( phoneNumber );\n *\n *                     return '<a href=\"http://newplace.to.link.phone.numbers.to/\">' + phoneNumber + '</a>';\n *\n *                 case 'hashtag' :\n *                     var hashtag = match.getHashtag();\n *                     console.log( hashtag );\n *\n *                     return '<a href=\"http://newplace.to.link.hashtag.handles.to/\">' + hashtag + '</a>';\n *\n *                 case 'mention' :\n *                     var mention = match.getMention();\n *                     console.log( mention );\n *\n *                     return '<a href=\"http://newplace.to.link.mention.to/\">' + mention + '</a>';\n *             }\n *         }\n *     } );\n *\n *\n * The function may return the following values:\n *\n * - `true` (Boolean): Allow Autolinker to replace the match as it normally\n *   would.\n * - `false` (Boolean): Do not replace the current match at all - leave as-is.\n * - Any String: If a string is returned from the function, the string will be\n *   used directly as the replacement HTML for the match.\n * - An {@link Autolinker.HtmlTag} instance, which can be used to build/modify\n *   an HTML tag before writing out its HTML text.\n */\nvar Autolinker = /** @class */ (function () {\n    /**\n     * @method constructor\n     * @param {Object} [cfg] The configuration options for the Autolinker instance,\n     *   specified in an Object (map).\n     */\n    function Autolinker(cfg) {\n        if (cfg === void 0) { cfg = {}; }\n        /**\n         * The Autolinker version number exposed on the instance itself.\n         *\n         * Ex: 0.25.1\n         */\n        this.version = Autolinker.version;\n        /**\n         * @cfg {Boolean/Object} [urls]\n         *\n         * `true` if URLs should be automatically linked, `false` if they should not\n         * be. Defaults to `true`.\n         *\n         * Examples:\n         *\n         *     urls: true\n         *\n         *     // or\n         *\n         *     urls: {\n         *         schemeMatches : true,\n         *         wwwMatches    : true,\n         *         tldMatches    : true\n         *     }\n         *\n         * As shown above, this option also accepts an Object form with 3 properties\n         * to allow for more customization of what exactly gets linked. All default\n         * to `true`:\n         *\n         * @cfg {Boolean} [urls.schemeMatches] `true` to match URLs found prefixed\n         *   with a scheme, i.e. `http://google.com`, or `other+scheme://google.com`,\n         *   `false` to prevent these types of matches.\n         * @cfg {Boolean} [urls.wwwMatches] `true` to match urls found prefixed with\n         *   `'www.'`, i.e. `www.google.com`. `false` to prevent these types of\n         *   matches. Note that if the URL had a prefixed scheme, and\n         *   `schemeMatches` is true, it will still be linked.\n         * @cfg {Boolean} [urls.tldMatches] `true` to match URLs with known top\n         *   level domains (.com, .net, etc.) that are not prefixed with a scheme or\n         *   `'www.'`. This option attempts to match anything that looks like a URL\n         *   in the given text. Ex: `google.com`, `asdf.org/?page=1`, etc. `false`\n         *   to prevent these types of matches.\n         */\n        this.urls = {}; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Boolean} [email=true]\n         *\n         * `true` if email addresses should be automatically linked, `false` if they\n         * should not be.\n         */\n        this.email = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Boolean} [phone=true]\n         *\n         * `true` if Phone numbers (\"(555)555-5555\") should be automatically linked,\n         * `false` if they should not be.\n         */\n        this.phone = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Boolean/String} [hashtag=false]\n         *\n         * A string for the service name to have hashtags (ex: \"#myHashtag\")\n         * auto-linked to. The currently-supported values are:\n         *\n         * - 'twitter'\n         * - 'facebook'\n         * - 'instagram'\n         *\n         * Pass `false` to skip auto-linking of hashtags.\n         */\n        this.hashtag = false; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {String/Boolean} [mention=false]\n         *\n         * A string for the service name to have mentions (ex: \"@myuser\")\n         * auto-linked to. The currently supported values are:\n         *\n         * - 'twitter'\n         * - 'instagram'\n         * - 'soundcloud'\n         *\n         * Defaults to `false` to skip auto-linking of mentions.\n         */\n        this.mention = false; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Boolean} [newWindow=true]\n         *\n         * `true` if the links should open in a new window, `false` otherwise.\n         */\n        this.newWindow = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Boolean/Object} [stripPrefix=true]\n         *\n         * `true` if 'http://' (or 'https://') and/or the 'www.' should be stripped\n         * from the beginning of URL links' text, `false` otherwise. Defaults to\n         * `true`.\n         *\n         * Examples:\n         *\n         *     stripPrefix: true\n         *\n         *     // or\n         *\n         *     stripPrefix: {\n         *         scheme : true,\n         *         www    : true\n         *     }\n         *\n         * As shown above, this option also accepts an Object form with 2 properties\n         * to allow for more customization of what exactly is prevented from being\n         * displayed. Both default to `true`:\n         *\n         * @cfg {Boolean} [stripPrefix.scheme] `true` to prevent the scheme part of\n         *   a URL match from being displayed to the user. Example:\n         *   `'http://google.com'` will be displayed as `'google.com'`. `false` to\n         *   not strip the scheme. NOTE: Only an `'http://'` or `'https://'` scheme\n         *   will be removed, so as not to remove a potentially dangerous scheme\n         *   (such as `'file://'` or `'javascript:'`)\n         * @cfg {Boolean} [stripPrefix.www] www (Boolean): `true` to prevent the\n         *   `'www.'` part of a URL match from being displayed to the user. Ex:\n         *   `'www.google.com'` will be displayed as `'google.com'`. `false` to not\n         *   strip the `'www'`.\n         */\n        this.stripPrefix = { scheme: true, www: true }; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Boolean} [stripTrailingSlash=true]\n         *\n         * `true` to remove the trailing slash from URL matches, `false` to keep\n         *  the trailing slash.\n         *\n         *  Example when `true`: `http://google.com/` will be displayed as\n         *  `http://google.com`.\n         */\n        this.stripTrailingSlash = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Boolean} [decodePercentEncoding=true]\n         *\n         * `true` to decode percent-encoded characters in URL matches, `false` to keep\n         *  the percent-encoded characters.\n         *\n         *  Example when `true`: `https://en.wikipedia.org/wiki/San_Jos%C3%A9` will\n         *  be displayed as `https://en.wikipedia.org/wiki/San_José`.\n         */\n        this.decodePercentEncoding = true; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Number/Object} [truncate=0]\n         *\n         * ## Number Form\n         *\n         * A number for how many characters matched text should be truncated to\n         * inside the text of a link. If the matched text is over this number of\n         * characters, it will be truncated to this length by adding a two period\n         * ellipsis ('..') to the end of the string.\n         *\n         * For example: A url like 'http://www.yahoo.com/some/long/path/to/a/file'\n         * truncated to 25 characters might look something like this:\n         * 'yahoo.com/some/long/pat..'\n         *\n         * Example Usage:\n         *\n         *     truncate: 25\n         *\n         *\n         *  Defaults to `0` for \"no truncation.\"\n         *\n         *\n         * ## Object Form\n         *\n         * An Object may also be provided with two properties: `length` (Number) and\n         * `location` (String). `location` may be one of the following: 'end'\n         * (default), 'middle', or 'smart'.\n         *\n         * Example Usage:\n         *\n         *     truncate: { length: 25, location: 'middle' }\n         *\n         * @cfg {Number} [truncate.length=0] How many characters to allow before\n         *   truncation will occur. Defaults to `0` for \"no truncation.\"\n         * @cfg {\"end\"/\"middle\"/\"smart\"} [truncate.location=\"end\"]\n         *\n         * - 'end' (default): will truncate up to the number of characters, and then\n         *   add an ellipsis at the end. Ex: 'yahoo.com/some/long/pat..'\n         * - 'middle': will truncate and add the ellipsis in the middle. Ex:\n         *   'yahoo.com/s..th/to/a/file'\n         * - 'smart': for URLs where the algorithm attempts to strip out unnecessary\n         *   parts first (such as the 'www.', then URL scheme, hash, etc.),\n         *   attempting to make the URL human-readable before looking for a good\n         *   point to insert the ellipsis if it is still too long. Ex:\n         *   'yahoo.com/some..to/a/file'. For more details, see\n         *   {@link Autolinker.truncate.TruncateSmart}.\n         */\n        this.truncate = { length: 0, location: 'end' }; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {String} className\n         *\n         * A CSS class name to add to the generated links. This class will be added\n         * to all links, as well as this class plus match suffixes for styling\n         * url/email/phone/hashtag/mention links differently.\n         *\n         * For example, if this config is provided as \"myLink\", then:\n         *\n         * - URL links will have the CSS classes: \"myLink myLink-url\"\n         * - Email links will have the CSS classes: \"myLink myLink-email\", and\n         * - Phone links will have the CSS classes: \"myLink myLink-phone\"\n         * - Hashtag links will have the CSS classes: \"myLink myLink-hashtag\"\n         * - Mention links will have the CSS classes: \"myLink myLink-mention myLink-[type]\"\n         *   where [type] is either \"instagram\", \"twitter\" or \"soundcloud\"\n         */\n        this.className = ''; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Function} replaceFn\n         *\n         * A function to individually process each match found in the input string.\n         *\n         * See the class's description for usage.\n         *\n         * The `replaceFn` can be called with a different context object (`this`\n         * reference) using the {@link #context} cfg.\n         *\n         * This function is called with the following parameter:\n         *\n         * @cfg {Autolinker.match.Match} replaceFn.match The Match instance which\n         *   can be used to retrieve information about the match that the `replaceFn`\n         *   is currently processing. See {@link Autolinker.match.Match} subclasses\n         *   for details.\n         */\n        this.replaceFn = null; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Object} context\n         *\n         * The context object (`this` reference) to call the `replaceFn` with.\n         *\n         * Defaults to this Autolinker instance.\n         */\n        this.context = undefined; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @cfg {Boolean} [sanitizeHtml=false]\n         *\n         * `true` to HTML-encode the start and end brackets of existing HTML tags found\n         * in the input string. This will escape `<` and `>` characters to `&lt;` and\n         * `&gt;`, respectively.\n         *\n         * Setting this to `true` will prevent XSS (Cross-site Scripting) attacks,\n         * but will remove the significance of existing HTML tags in the input string. If\n         * you would like to maintain the significance of existing HTML tags while also\n         * making the output HTML string safe, leave this option as `false` and use a\n         * tool like https://github.com/cure53/DOMPurify (or others) on the input string\n         * before running Autolinker.\n         */\n        this.sanitizeHtml = false; // default value just to get the above doc comment in the ES5 output and documentation generator\n        /**\n         * @private\n         * @property {Autolinker.matcher.Matcher[]} matchers\n         *\n         * The {@link Autolinker.matcher.Matcher} instances for this Autolinker\n         * instance.\n         *\n         * This is lazily created in {@link #getMatchers}.\n         */\n        this.matchers = null;\n        /**\n         * @private\n         * @property {Autolinker.AnchorTagBuilder} tagBuilder\n         *\n         * The AnchorTagBuilder instance used to build match replacement anchor tags.\n         * Note: this is lazily instantiated in the {@link #getTagBuilder} method.\n         */\n        this.tagBuilder = null;\n        // Note: when `this.something` is used in the rhs of these assignments,\n        //       it refers to the default values set above the constructor\n        this.urls = this.normalizeUrlsCfg(cfg.urls);\n        this.email = typeof cfg.email === 'boolean' ? cfg.email : this.email;\n        this.phone = typeof cfg.phone === 'boolean' ? cfg.phone : this.phone;\n        this.hashtag = cfg.hashtag || this.hashtag;\n        this.mention = cfg.mention || this.mention;\n        this.newWindow = typeof cfg.newWindow === 'boolean' ? cfg.newWindow : this.newWindow;\n        this.stripPrefix = this.normalizeStripPrefixCfg(cfg.stripPrefix);\n        this.stripTrailingSlash = typeof cfg.stripTrailingSlash === 'boolean' ? cfg.stripTrailingSlash : this.stripTrailingSlash;\n        this.decodePercentEncoding = typeof cfg.decodePercentEncoding === 'boolean' ? cfg.decodePercentEncoding : this.decodePercentEncoding;\n        this.sanitizeHtml = cfg.sanitizeHtml || false;\n        // Validate the value of the `mention` cfg\n        var mention = this.mention;\n        if (mention !== false && ['twitter', 'instagram', 'soundcloud', 'tiktok'].indexOf(mention) === -1) {\n            throw new Error(\"invalid `mention` cfg '\".concat(mention, \"' - see docs\"));\n        }\n        // Validate the value of the `hashtag` cfg\n        var hashtag = this.hashtag;\n        if (hashtag !== false && ['twitter', 'facebook', 'instagram', 'tiktok'].indexOf(hashtag) === -1) {\n            throw new Error(\"invalid `hashtag` cfg '\".concat(hashtag, \"' - see docs\"));\n        }\n        this.truncate = this.normalizeTruncateCfg(cfg.truncate);\n        this.className = cfg.className || this.className;\n        this.replaceFn = cfg.replaceFn || this.replaceFn;\n        this.context = cfg.context || this;\n    }\n    /**\n     * Automatically links URLs, Email addresses, Phone Numbers, Twitter handles,\n     * Hashtags, and Mentions found in the given chunk of HTML. Does not link URLs\n     * found within HTML tags.\n     *\n     * For instance, if given the text: `You should go to http://www.yahoo.com`,\n     * then the result will be `You should go to &lt;a href=\"http://www.yahoo.com\"&gt;http://www.yahoo.com&lt;/a&gt;`\n     *\n     * Example:\n     *\n     *     var linkedText = Autolinker.link( \"Go to google.com\", { newWindow: false } );\n     *     // Produces: \"Go to <a href=\"http://google.com\">google.com</a>\"\n     *\n     * @static\n     * @param {String} textOrHtml The HTML or text to find matches within (depending\n     *   on if the {@link #urls}, {@link #email}, {@link #phone}, {@link #mention},\n     *   {@link #hashtag}, and {@link #mention} options are enabled).\n     * @param {Object} [options] Any of the configuration options for the Autolinker\n     *   class, specified in an Object (map). See the class description for an\n     *   example call.\n     * @return {String} The HTML text, with matches automatically linked.\n     */\n    Autolinker.link = function (textOrHtml, options) {\n        var autolinker = new Autolinker(options);\n        return autolinker.link(textOrHtml);\n    };\n    /**\n     * Parses the input `textOrHtml` looking for URLs, email addresses, phone\n     * numbers, username handles, and hashtags (depending on the configuration\n     * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}\n     * objects describing those matches (without making any replacements).\n     *\n     * Note that if parsing multiple pieces of text, it is slightly more efficient\n     * to create an Autolinker instance, and use the instance-level {@link #parse}\n     * method.\n     *\n     * Example:\n     *\n     *     var matches = Autolinker.parse( \"Hello google.com, I am asdf@asdf.com\", {\n     *         urls: true,\n     *         email: true\n     *     } );\n     *\n     *     console.log( matches.length );           // 2\n     *     console.log( matches[ 0 ].getType() );   // 'url'\n     *     console.log( matches[ 0 ].getUrl() );    // 'google.com'\n     *     console.log( matches[ 1 ].getType() );   // 'email'\n     *     console.log( matches[ 1 ].getEmail() );  // 'asdf@asdf.com'\n     *\n     * @static\n     * @param {String} textOrHtml The HTML or text to find matches within\n     *   (depending on if the {@link #urls}, {@link #email}, {@link #phone},\n     *   {@link #hashtag}, and {@link #mention} options are enabled).\n     * @param {Object} [options] Any of the configuration options for the Autolinker\n     *   class, specified in an Object (map). See the class description for an\n     *   example call.\n     * @return {Autolinker.match.Match[]} The array of Matches found in the\n     *   given input `textOrHtml`.\n     */\n    Autolinker.parse = function (textOrHtml, options) {\n        var autolinker = new Autolinker(options);\n        return autolinker.parse(textOrHtml);\n    };\n    /**\n     * Normalizes the {@link #urls} config into an Object with 3 properties:\n     * `schemeMatches`, `wwwMatches`, and `tldMatches`, all Booleans.\n     *\n     * See {@link #urls} config for details.\n     *\n     * @private\n     * @param {Boolean/Object} urls\n     * @return {Object}\n     */\n    Autolinker.prototype.normalizeUrlsCfg = function (urls) {\n        if (urls == null)\n            urls = true; // default to `true`\n        if (typeof urls === 'boolean') {\n            return { schemeMatches: urls, wwwMatches: urls, tldMatches: urls };\n        }\n        else { // object form\n            return {\n                schemeMatches: typeof urls.schemeMatches === 'boolean' ? urls.schemeMatches : true,\n                wwwMatches: typeof urls.wwwMatches === 'boolean' ? urls.wwwMatches : true,\n                tldMatches: typeof urls.tldMatches === 'boolean' ? urls.tldMatches : true\n            };\n        }\n    };\n    /**\n     * Normalizes the {@link #stripPrefix} config into an Object with 2\n     * properties: `scheme`, and `www` - both Booleans.\n     *\n     * See {@link #stripPrefix} config for details.\n     *\n     * @private\n     * @param {Boolean/Object} stripPrefix\n     * @return {Object}\n     */\n    Autolinker.prototype.normalizeStripPrefixCfg = function (stripPrefix) {\n        if (stripPrefix == null)\n            stripPrefix = true; // default to `true`\n        if (typeof stripPrefix === 'boolean') {\n            return { scheme: stripPrefix, www: stripPrefix };\n        }\n        else { // object form\n            return {\n                scheme: typeof stripPrefix.scheme === 'boolean' ? stripPrefix.scheme : true,\n                www: typeof stripPrefix.www === 'boolean' ? stripPrefix.www : true\n            };\n        }\n    };\n    /**\n     * Normalizes the {@link #truncate} config into an Object with 2 properties:\n     * `length` (Number), and `location` (String).\n     *\n     * See {@link #truncate} config for details.\n     *\n     * @private\n     * @param {Number/Object} truncate\n     * @return {Object}\n     */\n    Autolinker.prototype.normalizeTruncateCfg = function (truncate) {\n        if (typeof truncate === 'number') {\n            return { length: truncate, location: 'end' };\n        }\n        else { // object, or undefined/null\n            return defaults(truncate || {}, {\n                length: Number.POSITIVE_INFINITY,\n                location: 'end'\n            });\n        }\n    };\n    /**\n     * Parses the input `textOrHtml` looking for URLs, email addresses, phone\n     * numbers, username handles, and hashtags (depending on the configuration\n     * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}\n     * objects describing those matches (without making any replacements).\n     *\n     * This method is used by the {@link #link} method, but can also be used to\n     * simply do parsing of the input in order to discover what kinds of links\n     * there are and how many.\n     *\n     * Example usage:\n     *\n     *     var autolinker = new Autolinker( {\n     *         urls: true,\n     *         email: true\n     *     } );\n     *\n     *     var matches = autolinker.parse( \"Hello google.com, I am asdf@asdf.com\" );\n     *\n     *     console.log( matches.length );           // 2\n     *     console.log( matches[ 0 ].getType() );   // 'url'\n     *     console.log( matches[ 0 ].getUrl() );    // 'google.com'\n     *     console.log( matches[ 1 ].getType() );   // 'email'\n     *     console.log( matches[ 1 ].getEmail() );  // 'asdf@asdf.com'\n     *\n     * @param {String} textOrHtml The HTML or text to find matches within\n     *   (depending on if the {@link #urls}, {@link #email}, {@link #phone},\n     *   {@link #hashtag}, and {@link #mention} options are enabled).\n     * @return {Autolinker.match.Match[]} The array of Matches found in the\n     *   given input `textOrHtml`.\n     */\n    Autolinker.prototype.parse = function (textOrHtml) {\n        var _this = this;\n        var skipTagNames = ['a', 'style', 'script'], skipTagsStackCount = 0, // used to only Autolink text outside of anchor/script/style tags. We don't want to autolink something that is already linked inside of an <a> tag, for instance\n        matches = [];\n        // Find all matches within the `textOrHtml` (but not matches that are\n        // already nested within <a>, <style> and <script> tags)\n        parseHtml(textOrHtml, {\n            onOpenTag: function (tagName) {\n                if (skipTagNames.indexOf(tagName) >= 0) {\n                    skipTagsStackCount++;\n                }\n            },\n            onText: function (text, offset) {\n                // Only process text nodes that are not within an <a>, <style> or <script> tag\n                if (skipTagsStackCount === 0) {\n                    // \"Walk around\" common HTML entities. An '&nbsp;' (for example)\n                    // could be at the end of a URL, but we don't want to \n                    // include the trailing '&' in the URL. See issue #76\n                    // TODO: Handle HTML entities separately in parseHtml() and\n                    // don't emit them as \"text\" except for &amp; entities\n                    var htmlCharacterEntitiesRegex = /(&nbsp;|&#160;|&lt;|&#60;|&gt;|&#62;|&quot;|&#34;|&#39;)/gi;\n                    var textSplit = splitAndCapture(text, htmlCharacterEntitiesRegex);\n                    var currentOffset_1 = offset;\n                    textSplit.forEach(function (splitText, i) {\n                        // even number matches are text, odd numbers are html entities\n                        if (i % 2 === 0) {\n                            var textNodeMatches = _this.parseText(splitText, currentOffset_1);\n                            matches.push.apply(matches, textNodeMatches);\n                        }\n                        currentOffset_1 += splitText.length;\n                    });\n                }\n            },\n            onCloseTag: function (tagName) {\n                if (skipTagNames.indexOf(tagName) >= 0) {\n                    skipTagsStackCount = Math.max(skipTagsStackCount - 1, 0); // attempt to handle extraneous </a> tags by making sure the stack count never goes below 0\n                }\n            },\n            onComment: function (offset) { },\n            onDoctype: function (offset) { }, // no need to process doctype nodes\n        });\n        // After we have found all matches, remove subsequent matches that\n        // overlap with a previous match. This can happen for instance with URLs,\n        // where the url 'google.com/#link' would match '#link' as a hashtag.\n        matches = this.compactMatches(matches);\n        // And finally, remove matches for match types that have been turned\n        // off. We needed to have all match types turned on initially so that\n        // things like hashtags could be filtered out if they were really just\n        // part of a URL match (for instance, as a named anchor).\n        matches = this.removeUnwantedMatches(matches);\n        return matches;\n    };\n    /**\n     * After we have found all matches, we need to remove matches that overlap\n     * with a previous match. This can happen for instance with URLs, where the\n     * url 'google.com/#link' would match '#link' as a hashtag. Because the\n     * '#link' part is contained in a larger match that comes before the HashTag\n     * match, we'll remove the HashTag match.\n     *\n     * @private\n     * @param {Autolinker.match.Match[]} matches\n     * @return {Autolinker.match.Match[]}\n     */\n    Autolinker.prototype.compactMatches = function (matches) {\n        // First, the matches need to be sorted in order of offset\n        matches.sort(function (a, b) { return a.getOffset() - b.getOffset(); });\n        var i = 0;\n        while (i < matches.length - 1) {\n            var match = matches[i], offset = match.getOffset(), matchedTextLength = match.getMatchedText().length, endIdx = offset + matchedTextLength;\n            if (i + 1 < matches.length) {\n                // Remove subsequent matches that equal offset with current match\n                if (matches[i + 1].getOffset() === offset) {\n                    var removeIdx = matches[i + 1].getMatchedText().length > matchedTextLength ? i : i + 1;\n                    matches.splice(removeIdx, 1);\n                    continue;\n                }\n                // Remove subsequent matches that overlap with the current match\n                if (matches[i + 1].getOffset() < endIdx) {\n                    matches.splice(i + 1, 1);\n                    continue;\n                }\n            }\n            i++;\n        }\n        return matches;\n    };\n    /**\n     * Removes matches for matchers that were turned off in the options. For\n     * example, if {@link #hashtag hashtags} were not to be matched, we'll\n     * remove them from the `matches` array here.\n     *\n     * Note: we *must* use all Matchers on the input string, and then filter\n     * them out later. For example, if the options were `{ url: false, hashtag: true }`,\n     * we wouldn't want to match the text '#link' as a HashTag inside of the text\n     * 'google.com/#link'. The way the algorithm works is that we match the full\n     * URL first (which prevents the accidental HashTag match), and then we'll\n     * simply throw away the URL match.\n     *\n     * @private\n     * @param {Autolinker.match.Match[]} matches The array of matches to remove\n     *   the unwanted matches from. Note: this array is mutated for the\n     *   removals.\n     * @return {Autolinker.match.Match[]} The mutated input `matches` array.\n     */\n    Autolinker.prototype.removeUnwantedMatches = function (matches) {\n        if (!this.hashtag)\n            remove(matches, function (match) { return match.getType() === 'hashtag'; });\n        if (!this.email)\n            remove(matches, function (match) { return match.getType() === 'email'; });\n        if (!this.phone)\n            remove(matches, function (match) { return match.getType() === 'phone'; });\n        if (!this.mention)\n            remove(matches, function (match) { return match.getType() === 'mention'; });\n        if (!this.urls.schemeMatches) {\n            remove(matches, function (m) { return m.getType() === 'url' && m.getUrlMatchType() === 'scheme'; });\n        }\n        if (!this.urls.wwwMatches) {\n            remove(matches, function (m) { return m.getType() === 'url' && m.getUrlMatchType() === 'www'; });\n        }\n        if (!this.urls.tldMatches) {\n            remove(matches, function (m) { return m.getType() === 'url' && m.getUrlMatchType() === 'tld'; });\n        }\n        return matches;\n    };\n    /**\n     * Parses the input `text` looking for URLs, email addresses, phone\n     * numbers, username handles, and hashtags (depending on the configuration\n     * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}\n     * objects describing those matches.\n     *\n     * This method processes a **non-HTML string**, and is used to parse and\n     * match within the text nodes of an HTML string. This method is used\n     * internally by {@link #parse}.\n     *\n     * @private\n     * @param {String} text The text to find matches within (depending on if the\n     *   {@link #urls}, {@link #email}, {@link #phone},\n     *   {@link #hashtag}, and {@link #mention} options are enabled). This must be a non-HTML string.\n     * @param {Number} [offset=0] The offset of the text node within the\n     *   original string. This is used when parsing with the {@link #parse}\n     *   method to generate correct offsets within the {@link Autolinker.match.Match}\n     *   instances, but may be omitted if calling this method publicly.\n     * @return {Autolinker.match.Match[]} The array of Matches found in the\n     *   given input `text`.\n     */\n    Autolinker.prototype.parseText = function (text, offset) {\n        if (offset === void 0) { offset = 0; }\n        offset = offset || 0;\n        var matchers = this.getMatchers(), matches = [];\n        for (var i = 0, numMatchers = matchers.length; i < numMatchers; i++) {\n            var textMatches = matchers[i].parseMatches(text);\n            // Correct the offset of each of the matches. They are originally\n            // the offset of the match within the provided text node, but we\n            // need to correct them to be relative to the original HTML input\n            // string (i.e. the one provided to #parse).\n            for (var j = 0, numTextMatches = textMatches.length; j < numTextMatches; j++) {\n                textMatches[j].setOffset(offset + textMatches[j].getOffset());\n            }\n            matches.push.apply(matches, textMatches);\n        }\n        return matches;\n    };\n    /**\n     * Automatically links URLs, Email addresses, Phone numbers, Hashtags,\n     * and Mentions (Twitter, Instagram, Soundcloud) found in the given chunk of HTML. Does not link\n     * URLs found within HTML tags.\n     *\n     * For instance, if given the text: `You should go to http://www.yahoo.com`,\n     * then the result will be `You should go to\n     * &lt;a href=\"http://www.yahoo.com\"&gt;http://www.yahoo.com&lt;/a&gt;`\n     *\n     * This method finds the text around any HTML elements in the input\n     * `textOrHtml`, which will be the text that is processed. Any original HTML\n     * elements will be left as-is, as well as the text that is already wrapped\n     * in anchor (&lt;a&gt;) tags.\n     *\n     * @param {String} textOrHtml The HTML or text to autolink matches within\n     *   (depending on if the {@link #urls}, {@link #email}, {@link #phone}, {@link #hashtag}, and {@link #mention} options are enabled).\n     * @return {String} The HTML, with matches automatically linked.\n     */\n    Autolinker.prototype.link = function (textOrHtml) {\n        if (!textOrHtml) {\n            return \"\";\n        } // handle `null` and `undefined` (for JavaScript users that don't have TypeScript support)\n        /* We would want to sanitize the start and end characters of a tag\n         * before processing the string in order to avoid an XSS scenario.\n         * This behaviour can be changed by toggling the sanitizeHtml option.\n         */\n        if (this.sanitizeHtml) {\n            textOrHtml = textOrHtml\n                .replace(/</g, '&lt;')\n                .replace(/>/g, '&gt;');\n        }\n        var matches = this.parse(textOrHtml), newHtml = [], lastIndex = 0;\n        for (var i = 0, len = matches.length; i < len; i++) {\n            var match = matches[i];\n            newHtml.push(textOrHtml.substring(lastIndex, match.getOffset()));\n            newHtml.push(this.createMatchReturnVal(match));\n            lastIndex = match.getOffset() + match.getMatchedText().length;\n        }\n        newHtml.push(textOrHtml.substring(lastIndex)); // handle the text after the last match\n        return newHtml.join('');\n    };\n    /**\n     * Creates the return string value for a given match in the input string.\n     *\n     * This method handles the {@link #replaceFn}, if one was provided.\n     *\n     * @private\n     * @param {Autolinker.match.Match} match The Match object that represents\n     *   the match.\n     * @return {String} The string that the `match` should be replaced with.\n     *   This is usually the anchor tag string, but may be the `matchStr` itself\n     *   if the match is not to be replaced.\n     */\n    Autolinker.prototype.createMatchReturnVal = function (match) {\n        // Handle a custom `replaceFn` being provided\n        var replaceFnResult;\n        if (this.replaceFn) {\n            replaceFnResult = this.replaceFn.call(this.context, match); // Autolinker instance is the context\n        }\n        if (typeof replaceFnResult === 'string') {\n            return replaceFnResult; // `replaceFn` returned a string, use that\n        }\n        else if (replaceFnResult === false) {\n            return match.getMatchedText(); // no replacement for the match\n        }\n        else if (replaceFnResult instanceof HtmlTag) {\n            return replaceFnResult.toAnchorString();\n        }\n        else { // replaceFnResult === true, or no/unknown return value from function\n            // Perform Autolinker's default anchor tag generation\n            var anchorTag = match.buildTag(); // returns an Autolinker.HtmlTag instance\n            return anchorTag.toAnchorString();\n        }\n    };\n    /**\n     * Lazily instantiates and returns the {@link Autolinker.matcher.Matcher}\n     * instances for this Autolinker instance.\n     *\n     * @private\n     * @return {Autolinker.matcher.Matcher[]}\n     */\n    Autolinker.prototype.getMatchers = function () {\n        if (!this.matchers) {\n            var tagBuilder = this.getTagBuilder();\n            var matchers = [\n                new HashtagMatcher({ tagBuilder: tagBuilder, serviceName: this.hashtag }),\n                new EmailMatcher({ tagBuilder: tagBuilder }),\n                new PhoneMatcher({ tagBuilder: tagBuilder }),\n                new MentionMatcher({ tagBuilder: tagBuilder, serviceName: this.mention }),\n                new UrlMatcher({ tagBuilder: tagBuilder, stripPrefix: this.stripPrefix, stripTrailingSlash: this.stripTrailingSlash, decodePercentEncoding: this.decodePercentEncoding })\n            ];\n            return (this.matchers = matchers);\n        }\n        else {\n            return this.matchers;\n        }\n    };\n    /**\n     * Returns the {@link #tagBuilder} instance for this Autolinker instance,\n     * lazily instantiating it if it does not yet exist.\n     *\n     * @private\n     * @return {Autolinker.AnchorTagBuilder}\n     */\n    Autolinker.prototype.getTagBuilder = function () {\n        var tagBuilder = this.tagBuilder;\n        if (!tagBuilder) {\n            tagBuilder = this.tagBuilder = new AnchorTagBuilder({\n                newWindow: this.newWindow,\n                truncate: this.truncate,\n                className: this.className\n            });\n        }\n        return tagBuilder;\n    };\n    /**\n     * @static\n     * @property {String} version\n     *\n     * The Autolinker version number in the form major.minor.patch\n     *\n     * Ex: 0.25.1\n     */\n    Autolinker.version = '3.15.0';\n    /**\n     * For backwards compatibility with Autolinker 1.x, the AnchorTagBuilder\n     * class is provided as a static on the Autolinker class.\n     */\n    Autolinker.AnchorTagBuilder = AnchorTagBuilder;\n    /**\n     * For backwards compatibility with Autolinker 1.x, the HtmlTag class is\n     * provided as a static on the Autolinker class.\n     */\n    Autolinker.HtmlTag = HtmlTag;\n    /**\n     * For backwards compatibility with Autolinker 1.x, the Matcher classes are\n     * provided as statics on the Autolinker class.\n     */\n    Autolinker.matcher = {\n        Email: EmailMatcher,\n        Hashtag: HashtagMatcher,\n        Matcher: Matcher,\n        Mention: MentionMatcher,\n        Phone: PhoneMatcher,\n        Url: UrlMatcher\n    };\n    /**\n     * For backwards compatibility with Autolinker 1.x, the Match classes are\n     * provided as statics on the Autolinker class.\n     */\n    Autolinker.match = {\n        Email: EmailMatch,\n        Hashtag: HashtagMatch,\n        Match: Match,\n        Mention: MentionMatch,\n        Phone: PhoneMatch,\n        Url: UrlMatch\n    };\n    return Autolinker;\n}());\nexport default Autolinker;\n\n//# sourceMappingURL=autolinker.js.map\n","// WARNING: This file is modified a bit when it is compiled into index.js in \n// order to support nodejs interoperability with require('autolinker') directly. \n// This is done by the buildSrcFixCommonJsIndexTask() function in the gulpfile. \n// See that function for more details.\nimport Autolinker from './autolinker';\nexport default Autolinker;\nexport { Autolinker };\nexport * from './autolinker';\nexport * from './anchor-tag-builder';\nexport * from './html-tag';\nexport * from './match/index';\nexport * from './matcher/index';\n\n//# sourceMappingURL=index.js.map\n"],"sourceRoot":""}